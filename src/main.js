/* Generated by the Nim Compiler v1.2.6 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI11217031 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11217017 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI11217028 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11217019 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11217049 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11445229 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11217079 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11217078 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11217077 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13525003 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11217083 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11217082 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11217081 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11004202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI11040036 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12570125 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12822211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11003070 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11003071 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12535078 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12535074 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12531365 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12535030 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12535018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12535039 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12535037 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12531241 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12535031 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12535022 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1787454 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787450 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787446 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787442 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787438 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787434 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787430 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787426 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787422 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787418 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787414 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787410 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787406 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787402 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787398 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787394 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787390 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787386 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787382 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787378 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1787205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1787287 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1787229 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1787574 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1787572 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1787570 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1787233 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1787231 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12822207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12822209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1787289 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12460172 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI12460171 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI12460170 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12460188 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11260655 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11260654 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11260653 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11240676 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11230072 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI2456907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11260868 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1172021 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1172043 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1172045 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11216003 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1166065 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI11217015 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI11217064 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11471819 = {size: 0,kind: 43,base: null,node: null,finalizer: null};
var NTI11472002 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1172049 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12351037 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI12351036 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI12351035 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11047018 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI12351086 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12351083 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12351080 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1172035 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1172033 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1172037 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1172053 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1166045 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1325043 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1171808 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1172086 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1166016 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI1172081 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1172017 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1172019 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1172041 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1166014 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI1172041 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1172041.node = NNI1172041;
var NNI1172019 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1172019.node = NNI1172019;
NTI1172081.base = NTI1172017;
NTI1172086.base = NTI1172017;
var NNI1172017 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI1172081, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI1166016, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI1166014, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI1166014, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI1172086, name: "up", sons: null}]};
NTI1172017.node = NNI1172017;
var NNI1171808 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1171808.node = NNI1171808;
NTI1172017.base = NTI1171808;
NTI1172019.base = NTI1172017;
NTI1172041.base = NTI1172019;
var NNI1325043 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1166016, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1166045, name: "Field1", sons: null}]};
NTI1325043.node = NNI1325043;
var NNI1172053 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1172053.node = NNI1172053;
NTI1172053.base = NTI1172019;
var NNI1172037 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1172037.node = NNI1172037;
var NNI1172033 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1172033.node = NNI1172033;
NTI1172033.base = NTI1172019;
NTI1172037.base = NTI1172033;
var NNI1172035 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1172035.node = NNI1172035;
NTI1172035.base = NTI1172033;
var NNI12351035 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI12351036, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI12351037, name: "Field1", sons: null}]};
NTI12351035.node = NNI12351035;
var NNI12351086 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI11047018, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI12351035, name: "Field1", sons: null}]};
NTI12351086.node = NNI12351086;
NTI12351083.base = NTI12351086;
var NNI12351080 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI12351083, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI1166045, name: "counter", sons: null}]};
NTI12351080.node = NNI12351080;
var NNI1172049 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1172049.node = NNI1172049;
NTI1172049.base = NTI1172019;
var NNI11472002 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a0", len: 0, typ: NTI11471819, name: "a0", sons: null}, 
{kind: 1, offset: "a1", len: 0, typ: NTI11471819, name: "a1", sons: null}]};
NTI11472002.node = NNI11472002;
var NNI11217015 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI11217015, name: "ctRed", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI11217015, name: "ctBlue", len: 0, sons: null}}};
NTI11217015.node = NNI11217015;
var NNI11217064 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI11217015, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI1166065, name: "has", sons: null}]};
NTI11217064.node = NNI11217064;
var NNI11216003 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1166045, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1166045, name: "Field1", sons: null}]};
NTI11216003.node = NNI11216003;
var NNI1172045 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1172045.node = NNI1172045;
var NNI1172043 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1172043.node = NNI1172043;
var NNI1172021 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1172021.node = NNI1172021;
NTI1172021.base = NTI1172017;
NTI1172043.base = NTI1172021;
NTI1172045.base = NTI1172043;
NTI11260868.base = NTI11216003;
var NNI2456907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1166045, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1166045, name: "b", sons: null}]};
NTI2456907.node = NNI2456907;
NTI11230072.base = NTI11216003;
NTI11240676.base = NTI11216003;
var NNI11260653 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI11260654, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI11260655, name: "Field1", sons: null}]};
NTI11260653.node = NNI11260653;
var NNI12460170 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI12460171, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI12460172, name: "Field1", sons: null}]};
NTI12460170.node = NNI12460170;
NTI12460188.base = NTI12460170;
var NNI1787289 = {kind: 2, len: 100, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI1166016, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI1166016, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI1166016, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI1166016, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI1166016, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI1166016, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI1166016, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI1166016, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI1166016, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI1166016, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI1166016, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI1166016, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI1166016, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI1166016, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI1166016, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI1166016, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI1166016, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI1166016, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI1166016, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI1166016, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI1166016, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI1166016, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI1166016, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI1166016, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI1166016, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI1166016, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI1166016, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI1166016, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI1166016, name: "bottom", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI1166016, name: "boxSizing", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI1166016, name: "boxShadow", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI1166016, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI1166016, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI1166016, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI1166016, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI1166016, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI1166016, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI1166016, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI1166016, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI1166016, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI1166016, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI1166016, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI1166016, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI1166016, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI1166016, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI1166016, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI1166016, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI1166016, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI1166016, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI1166016, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI1166016, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI1166016, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI1166016, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI1166016, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI1166016, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI1166016, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI1166016, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI1166016, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI1166016, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI1166016, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI1166016, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI1166016, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI1166016, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI1166016, name: "minWidth", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI1166016, name: "opacity", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI1166016, name: "outline", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI1166016, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI1166016, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI1166016, name: "overflowY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI1166016, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI1166016, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI1166016, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI1166016, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI1166016, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI1166016, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI1166016, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI1166016, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI1166016, name: "position", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI1166016, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI1166016, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI1166016, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI1166016, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI1166016, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI1166016, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI1166016, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI1166016, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI1166016, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI1166016, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI1166016, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI1166016, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI1166016, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI1166016, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI1166016, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI1166016, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI1166016, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI1166016, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI1166016, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1166016, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI1166016, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI1166045, name: "zIndex", sons: null}]};
NTI1787289.node = NNI1787289;
NTI1787289.base = NTI1171808;
var NNI12822207 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI12822207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12822207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12822207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12822207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12822207, name: "pkDetach", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI12822207, name: "pkSame", len: 0, sons: null}}};
NTI12822207.node = NNI12822207;
NTI1787570.base = NTI1787231;
NTI1787572.base = NTI1787231;
NTI1787574.base = NTI1787231;
var NNI1787229 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1787229, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1787229, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1787229, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1787229, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1787229, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1787229, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1787229, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1787229, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1787229, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1787229, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1787229, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1787229, name: "NotationNode", len: 0, sons: null}}};
NTI1787229.node = NNI1787229;
NTI1787287.base = NTI1787289;
var NNI1787233 = {kind: 2, len: 16, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI1787570, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI1787572, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1787574, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI1166016, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI1787231, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI1787231, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI1787231, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI1166016, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI1787229, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI1166016, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI1787231, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI1787231, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI1166016, name: "innerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI1166016, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI1166016, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1787287, name: "style", sons: null}]};
NTI1787233.node = NNI1787233;
var NNI1787205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI1787378, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI1787382, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI1787386, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI1787390, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI1787394, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI1787398, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI1787402, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI1787406, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI1787410, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI1787414, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI1787418, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI1787422, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI1787426, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI1787430, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI1787434, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI1787438, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI1787442, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI1787446, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI1787450, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI1787454, name: "onunload", sons: null}]};
NTI1787205.node = NNI1787205;
NTI1787205.base = NTI1171808;
NTI1787233.base = NTI1787205;
NTI1787231.base = NTI1787233;
var NNI12531241 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI12531241, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12531241, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12531241, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12531241, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12531241, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI12531241, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI12531241, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI12531241, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI12531241, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI12531241, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI12531241, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI12531241, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI12531241, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI12531241, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI12531241, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI12531241, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI12531241, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI12531241, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI12531241, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI12531241, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI12531241, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI12531241, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI12531241, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI12531241, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI12531241, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI12531241, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI12531241, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI12531241, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI12531241, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI12531241, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI12531241, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI12531241, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI12531241, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI12531241, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI12531241, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI12531241, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI12531241, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI12531241, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI12531241, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI12531241, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI12531241, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI12531241, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI12531241, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI12531241, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI12531241, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI12531241, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI12531241, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI12531241, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI12531241, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI12531241, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI12531241, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI12531241, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI12531241, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI12531241, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI12531241, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI12531241, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI12531241, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI12531241, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI12531241, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI12531241, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI12531241, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI12531241, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI12531241, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI12531241, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI12531241, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI12531241, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI12531241, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI12531241, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI12531241, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI12531241, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI12531241, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI12531241, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI12531241, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI12531241, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI12531241, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI12531241, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI12531241, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI12531241, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI12531241, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI12531241, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI12531241, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI12531241, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI12531241, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI12531241, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI12531241, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI12531241, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI12531241, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI12531241, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI12531241, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI12531241, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI12531241, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI12531241, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI12531241, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI12531241, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI12531241, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI12531241, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI12531241, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI12531241, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI12531241, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI12531241, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI12531241, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI12531241, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI12531241, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI12531241, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI12531241, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI12531241, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI12531241, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI12531241, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI12531241, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI12531241, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI12531241, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI12531241, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI12531241, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI12531241, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI12531241, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI12531241, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI12531241, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI12531241, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI12531241, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI12531241, name: "menu", len: 0, sons: null}}};
NTI12531241.node = NNI12531241;
NTI12535037.base = NTI12535022;
NTI12535039.base = NTI1166016;
var NNI12531365 = {kind: 2, offset: 0, typ: null, name: null, len: 37, sons: {"0": {kind: 1, offset: 0, typ: NTI12531365, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12531365, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12531365, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12531365, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12531365, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI12531365, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI12531365, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI12531365, name: "onfocusout", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI12531365, name: "onblur", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI12531365, name: "onchange", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI12531365, name: "onscroll", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI12531365, name: "onmousedown", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI12531365, name: "onmouseenter", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI12531365, name: "onmouseleave", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI12531365, name: "onmousemove", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI12531365, name: "onmouseout", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI12531365, name: "onmouseover", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI12531365, name: "onmouseup", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI12531365, name: "ondrag", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI12531365, name: "ondragend", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI12531365, name: "ondragenter", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI12531365, name: "ondragleave", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI12531365, name: "ondragover", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI12531365, name: "ondragstart", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI12531365, name: "ondrop", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI12531365, name: "onsubmit", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI12531365, name: "oninput", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI12531365, name: "onanimationstart", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI12531365, name: "onanimationend", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI12531365, name: "onanimationiteration", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI12531365, name: "onkeyupenter", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI12531365, name: "onkeyuplater", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI12531365, name: "onload", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI12531365, name: "ontransitioncancel", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI12531365, name: "ontransitionend", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI12531365, name: "ontransitionrun", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI12531365, name: "ontransitionstart", len: 0, sons: null}}};
NTI12531365.node = NNI12531365;
var NNI12535030 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI12531365, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI12535074, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI12535078, name: "Field2", sons: null}]};
NTI12535030.node = NNI12535030;
NTI12535018.base = NTI12535030;
var NNI11003070 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI11003070.node = NNI11003070;
NTI11003071.base = NTI11003070;
var NNI12535031 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI12531241, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI1166045, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI1166016, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1166016, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI1166016, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI12535037, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI12535039, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI12535018, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI11003071, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI1787231, name: "dom", sons: null}]};
NTI12535031.node = NNI12535031;
NTI12535031.base = NTI1171808;
NTI12535022.base = NTI12535031;
var NNI12822209 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI12822207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI1787231, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI1787231, name: "current", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI12535022, name: "newNode", sons: null}, 
{kind: 1, offset: "oldNode", len: 0, typ: NTI12535022, name: "oldNode", sons: null}]};
NTI12822209.node = NNI12822209;
var NNI12822211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI12535022, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI12535022, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI1166045, name: "pos", sons: null}]};
NTI12822211.node = NNI12822211;
NTI12570125.base = NTI1166016;
var NNI11004202 = {kind: 2, offset: 0, typ: null, name: null, len: 191, sons: {"0": {kind: 1, offset: 0, typ: NTI11004202, name: "alignContent", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI11004202, name: "alignItems", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI11004202, name: "alignSelf", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI11004202, name: "animation", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI11004202, name: "animationDelay", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI11004202, name: "animationDirection", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI11004202, name: "animationDuration", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI11004202, name: "animationFillMode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI11004202, name: "animationIterationCount", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI11004202, name: "animationName", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI11004202, name: "animationTimingFunction", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI11004202, name: "animationPlayState", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI11004202, name: "background", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI11004202, name: "backgroundAttachment", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI11004202, name: "backgroundColor", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI11004202, name: "backgroundImage", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI11004202, name: "backgroundPosition", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI11004202, name: "backgroundRepeat", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI11004202, name: "backgroundClip", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI11004202, name: "backgroundOrigin", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI11004202, name: "backgroundSize", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI11004202, name: "backfaceVisibility", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI11004202, name: "border", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI11004202, name: "borderBottom", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI11004202, name: "borderBottomColor", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI11004202, name: "borderBottomLeftRadius", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI11004202, name: "borderBottomRightRadius", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI11004202, name: "borderBottomStyle", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI11004202, name: "borderBottomWidth", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI11004202, name: "borderCollapse", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI11004202, name: "borderColor", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI11004202, name: "borderImage", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI11004202, name: "borderImageOutset", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI11004202, name: "borderImageRepeat", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI11004202, name: "borderImageSlice", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI11004202, name: "borderImageSource", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI11004202, name: "borderImageWidth", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI11004202, name: "borderLeft", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI11004202, name: "borderLeftColor", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI11004202, name: "borderLeftStyle", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI11004202, name: "borderLeftWidth", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI11004202, name: "borderRadius", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI11004202, name: "borderRight", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI11004202, name: "borderRightColor", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI11004202, name: "borderRightStyle", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI11004202, name: "borderRightWidth", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI11004202, name: "borderSpacing", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI11004202, name: "borderStyle", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI11004202, name: "borderTop", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI11004202, name: "borderTopColor", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI11004202, name: "borderTopLeftRadius", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI11004202, name: "borderTopRightRadius", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI11004202, name: "borderTopStyle", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI11004202, name: "borderTopWidth", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI11004202, name: "borderWidth", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI11004202, name: "bottom", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI11004202, name: "boxDecorationBreak", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI11004202, name: "boxShadow", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI11004202, name: "boxSizing", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI11004202, name: "captionSide", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI11004202, name: "clear", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI11004202, name: "clip", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI11004202, name: "color", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI11004202, name: "columnCount", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI11004202, name: "columnFill", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI11004202, name: "columnGap", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI11004202, name: "columnRule", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI11004202, name: "columnRuleColor", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI11004202, name: "columnRuleStyle", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI11004202, name: "columnRuleWidth", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI11004202, name: "columns", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI11004202, name: "columnSpan", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI11004202, name: "columnWidth", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI11004202, name: "content", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI11004202, name: "counterIncrement", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI11004202, name: "counterReset", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI11004202, name: "cursor", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI11004202, name: "direction", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI11004202, name: "display", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI11004202, name: "emptyCells", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI11004202, name: "filter", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI11004202, name: "flex", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI11004202, name: "flexBasis", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI11004202, name: "flexDirection", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI11004202, name: "flexFlow", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI11004202, name: "flexGrow", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI11004202, name: "flexShrink", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI11004202, name: "flexWrap", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI11004202, name: "cssFloat", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI11004202, name: "font", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI11004202, name: "fontFamily", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI11004202, name: "fontSize", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI11004202, name: "fontSizeAdjust", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI11004202, name: "fontStretch", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI11004202, name: "fontStyle", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI11004202, name: "fontVariant", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI11004202, name: "fontWeight", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI11004202, name: "hangingPunctuation", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI11004202, name: "height", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI11004202, name: "hyphens", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI11004202, name: "icon", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI11004202, name: "imageOrientation", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI11004202, name: "justifyContent", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI11004202, name: "left", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI11004202, name: "letterSpacing", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI11004202, name: "lineHeight", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI11004202, name: "listStyle", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI11004202, name: "listStyleImage", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI11004202, name: "listStylePosition", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI11004202, name: "listStyleType", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI11004202, name: "margin", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI11004202, name: "marginBottom", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI11004202, name: "marginLeft", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI11004202, name: "marginRight", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI11004202, name: "marginTop", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI11004202, name: "maxHeight", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI11004202, name: "maxWidth", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI11004202, name: "minHeight", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI11004202, name: "minWidth", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI11004202, name: "navDown", len: 0, sons: null}, 
"120": {kind: 1, offset: 120, typ: NTI11004202, name: "navIndex", len: 0, sons: null}, 
"121": {kind: 1, offset: 121, typ: NTI11004202, name: "navLeft", len: 0, sons: null}, 
"122": {kind: 1, offset: 122, typ: NTI11004202, name: "navRight", len: 0, sons: null}, 
"123": {kind: 1, offset: 123, typ: NTI11004202, name: "navUp", len: 0, sons: null}, 
"124": {kind: 1, offset: 124, typ: NTI11004202, name: "opacity", len: 0, sons: null}, 
"125": {kind: 1, offset: 125, typ: NTI11004202, name: "order", len: 0, sons: null}, 
"126": {kind: 1, offset: 126, typ: NTI11004202, name: "orphans", len: 0, sons: null}, 
"127": {kind: 1, offset: 127, typ: NTI11004202, name: "outline", len: 0, sons: null}, 
"128": {kind: 1, offset: 128, typ: NTI11004202, name: "outlineColor", len: 0, sons: null}, 
"129": {kind: 1, offset: 129, typ: NTI11004202, name: "outlineOffset", len: 0, sons: null}, 
"130": {kind: 1, offset: 130, typ: NTI11004202, name: "outlineStyle", len: 0, sons: null}, 
"131": {kind: 1, offset: 131, typ: NTI11004202, name: "outlineWidth", len: 0, sons: null}, 
"132": {kind: 1, offset: 132, typ: NTI11004202, name: "overflow", len: 0, sons: null}, 
"133": {kind: 1, offset: 133, typ: NTI11004202, name: "overflowX", len: 0, sons: null}, 
"134": {kind: 1, offset: 134, typ: NTI11004202, name: "overflowY", len: 0, sons: null}, 
"135": {kind: 1, offset: 135, typ: NTI11004202, name: "padding", len: 0, sons: null}, 
"136": {kind: 1, offset: 136, typ: NTI11004202, name: "paddingBottom", len: 0, sons: null}, 
"137": {kind: 1, offset: 137, typ: NTI11004202, name: "paddingLeft", len: 0, sons: null}, 
"138": {kind: 1, offset: 138, typ: NTI11004202, name: "paddingRight", len: 0, sons: null}, 
"139": {kind: 1, offset: 139, typ: NTI11004202, name: "paddingTop", len: 0, sons: null}, 
"140": {kind: 1, offset: 140, typ: NTI11004202, name: "pageBreakAfter", len: 0, sons: null}, 
"141": {kind: 1, offset: 141, typ: NTI11004202, name: "pageBreakBefore", len: 0, sons: null}, 
"142": {kind: 1, offset: 142, typ: NTI11004202, name: "pageBreakInside", len: 0, sons: null}, 
"143": {kind: 1, offset: 143, typ: NTI11004202, name: "perspective", len: 0, sons: null}, 
"144": {kind: 1, offset: 144, typ: NTI11004202, name: "perspectiveOrigin", len: 0, sons: null}, 
"145": {kind: 1, offset: 145, typ: NTI11004202, name: "pointerEvents", len: 0, sons: null}, 
"146": {kind: 1, offset: 146, typ: NTI11004202, name: "position", len: 0, sons: null}, 
"147": {kind: 1, offset: 147, typ: NTI11004202, name: "quotes", len: 0, sons: null}, 
"148": {kind: 1, offset: 148, typ: NTI11004202, name: "resize", len: 0, sons: null}, 
"149": {kind: 1, offset: 149, typ: NTI11004202, name: "right", len: 0, sons: null}, 
"150": {kind: 1, offset: 150, typ: NTI11004202, name: "scrollbar3dLightColor", len: 0, sons: null}, 
"151": {kind: 1, offset: 151, typ: NTI11004202, name: "scrollbarArrowColor", len: 0, sons: null}, 
"152": {kind: 1, offset: 152, typ: NTI11004202, name: "scrollbarBaseColor", len: 0, sons: null}, 
"153": {kind: 1, offset: 153, typ: NTI11004202, name: "scrollbarDarkshadowColor", len: 0, sons: null}, 
"154": {kind: 1, offset: 154, typ: NTI11004202, name: "scrollbarFaceColor", len: 0, sons: null}, 
"155": {kind: 1, offset: 155, typ: NTI11004202, name: "scrollbarHighlightColor", len: 0, sons: null}, 
"156": {kind: 1, offset: 156, typ: NTI11004202, name: "scrollbarShadowColor", len: 0, sons: null}, 
"157": {kind: 1, offset: 157, typ: NTI11004202, name: "scrollbarTrackColor", len: 0, sons: null}, 
"158": {kind: 1, offset: 158, typ: NTI11004202, name: "tableLayout", len: 0, sons: null}, 
"159": {kind: 1, offset: 159, typ: NTI11004202, name: "tabSize", len: 0, sons: null}, 
"160": {kind: 1, offset: 160, typ: NTI11004202, name: "textAlign", len: 0, sons: null}, 
"161": {kind: 1, offset: 161, typ: NTI11004202, name: "textAlignLast", len: 0, sons: null}, 
"162": {kind: 1, offset: 162, typ: NTI11004202, name: "textDecoration", len: 0, sons: null}, 
"163": {kind: 1, offset: 163, typ: NTI11004202, name: "textDecorationColor", len: 0, sons: null}, 
"164": {kind: 1, offset: 164, typ: NTI11004202, name: "textDecorationLine", len: 0, sons: null}, 
"165": {kind: 1, offset: 165, typ: NTI11004202, name: "textDecorationStyle", len: 0, sons: null}, 
"166": {kind: 1, offset: 166, typ: NTI11004202, name: "textIndent", len: 0, sons: null}, 
"167": {kind: 1, offset: 167, typ: NTI11004202, name: "textJustify", len: 0, sons: null}, 
"168": {kind: 1, offset: 168, typ: NTI11004202, name: "textOverflow", len: 0, sons: null}, 
"169": {kind: 1, offset: 169, typ: NTI11004202, name: "textShadow", len: 0, sons: null}, 
"170": {kind: 1, offset: 170, typ: NTI11004202, name: "textTransform", len: 0, sons: null}, 
"171": {kind: 1, offset: 171, typ: NTI11004202, name: "top", len: 0, sons: null}, 
"172": {kind: 1, offset: 172, typ: NTI11004202, name: "transform", len: 0, sons: null}, 
"173": {kind: 1, offset: 173, typ: NTI11004202, name: "transformOrigin", len: 0, sons: null}, 
"174": {kind: 1, offset: 174, typ: NTI11004202, name: "transformStyle", len: 0, sons: null}, 
"175": {kind: 1, offset: 175, typ: NTI11004202, name: "transition", len: 0, sons: null}, 
"176": {kind: 1, offset: 176, typ: NTI11004202, name: "transitionDelay", len: 0, sons: null}, 
"177": {kind: 1, offset: 177, typ: NTI11004202, name: "transitionDuration", len: 0, sons: null}, 
"178": {kind: 1, offset: 178, typ: NTI11004202, name: "transitionProperty", len: 0, sons: null}, 
"179": {kind: 1, offset: 179, typ: NTI11004202, name: "transitionTimingFunction", len: 0, sons: null}, 
"180": {kind: 1, offset: 180, typ: NTI11004202, name: "unicodeBidi", len: 0, sons: null}, 
"181": {kind: 1, offset: 181, typ: NTI11004202, name: "userSelect", len: 0, sons: null}, 
"182": {kind: 1, offset: 182, typ: NTI11004202, name: "verticalAlign", len: 0, sons: null}, 
"183": {kind: 1, offset: 183, typ: NTI11004202, name: "visibility", len: 0, sons: null}, 
"184": {kind: 1, offset: 184, typ: NTI11004202, name: "whiteSpace", len: 0, sons: null}, 
"185": {kind: 1, offset: 185, typ: NTI11004202, name: "width", len: 0, sons: null}, 
"186": {kind: 1, offset: 186, typ: NTI11004202, name: "wordBreak", len: 0, sons: null}, 
"187": {kind: 1, offset: 187, typ: NTI11004202, name: "wordSpacing", len: 0, sons: null}, 
"188": {kind: 1, offset: 188, typ: NTI11004202, name: "wordWrap", len: 0, sons: null}, 
"189": {kind: 1, offset: 189, typ: NTI11004202, name: "widows", len: 0, sons: null}, 
"190": {kind: 1, offset: 190, typ: NTI11004202, name: "zIndex", len: 0, sons: null}}};
NTI11004202.node = NNI11004202;
var NNI11040036 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI11004202, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1166016, name: "Field1", sons: null}]};
NTI11040036.node = NNI11040036;
var NNI11217081 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI11217082, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI11217083, name: "Field1", sons: null}]};
NTI11217081.node = NNI11217081;
var NNI13525003 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1166045, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1166045, name: "Field1", sons: null}]};
NTI13525003.node = NNI13525003;
var NNI11217077 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI11217078, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI11217079, name: "Field1", sons: null}]};
NTI11217077.node = NNI11217077;
NTI11445229.base = NTI11216003;
var NNI11217017 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI11217017, name: "pkPawn", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI11217017, name: "pkRook", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI11217017, name: "pkBishop", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI11217017, name: "pkKnight", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI11217017, name: "pkKing", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI11217017, name: "pkQueen", len: 0, sons: null}}};
NTI11217017.node = NNI11217017;
NTI11217031.base = NTI11216003;
var NNI11217028 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "team", len: 0, typ: NTI11217015, name: "team", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI11217017, name: "kind", sons: null}, 
{kind: 1, offset: "validMoves", len: 0, typ: NTI11217031, name: "validMoves", sons: null}]};
NTI11217028.node = NNI11217028;
NTI11217019.base = NTI11217028;
var NNI11217049 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI11047018, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI11216003, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI11217019, name: "Field2", sons: null}]};
NTI11217049.node = NNI11217049;
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_1405023, src_1405024, ti_1405025) {
  var result_1410219 = null;

    switch (ti_1405025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(is_fat_pointer_1400401(ti_1405025))) {
      result_1410219 = src_1405024;
      }
      else {
        result_1410219 = [src_1405024[0], src_1405024[1]];
      }
      
      break;
    case 19:
            if (dest_1405023 === null || dest_1405023 === undefined) {
        dest_1405023 = {};
      }
      else {
        for (var key in dest_1405023) { delete dest_1405023[key]; }
      }
      for (var key in src_1405024) { dest_1405023[key] = src_1405024[key]; }
      result_1410219 = dest_1405023;
    
      break;
    case 18:
    case 17:
      if (!((ti_1405025.base == null))) {
      result_1410219 = nimCopy(dest_1405023, src_1405024, ti_1405025.base);
      }
      else {
      if ((ti_1405025.kind == 17)) {
      result_1410219 = (dest_1405023 === null || dest_1405023 === undefined) ? {m_type: ti_1405025} : dest_1405023;
      }
      else {
        result_1410219 = (dest_1405023 === null || dest_1405023 === undefined) ? {} : dest_1405023;
      }
      }
      nimCopyAux(result_1410219, src_1405024, ti_1405025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_1405024 === null) {
        result_1410219 = null;
      }
      else {
        if (dest_1405023 === null || dest_1405023 === undefined) {
          dest_1405023 = new Array(src_1405024.length);
        }
        else {
          dest_1405023.length = src_1405024.length;
        }
        result_1410219 = dest_1405023;
        for (var i = 0; i < src_1405024.length; ++i) {
          result_1410219[i] = nimCopy(result_1410219[i], src_1405024[i], ti_1405025.base);
        }
      }
    
      break;
    case 28:
            if (src_1405024 !== null) {
        result_1410219 = src_1405024.slice(0);
      }
    
      break;
    default: 
      result_1410219 = src_1405024;
      break;
    }

  return result_1410219;

}
function makeNimstrLit(c_1390062) {
      var ln = c_1390062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_1390062.charCodeAt(i);
  }
  return result;
  

  
}
function arrayConstr(len_1415067, value_1415068, typ_1415069) {
        var result = new Array(len_1415067);
    for (var i = 0; i < len_1415067; ++i) result[i] = nimCopy(null, value_1415068, typ_1415069);
    return result;
  

  
}
function cstrToNimstr(c_1390079) {
      var ln = c_1390079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_1390079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_1390079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function toJSStr(s_1390096) {
                    var Tmp5;
            var Tmp7;

  var result_1390097 = null;

    var res_1390170 = new_seq_1390128((s_1390096 != null ? s_1390096.length : 0));
    var i_1390172 = 0;
    var j_1390174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_1390172 < (s_1390096 != null ? s_1390096.length : 0))) break L2;
          var c_1390175 = s_1390096[i_1390172];
          if ((c_1390175 < 128)) {
          res_1390170[j_1390174] = String.fromCharCode(c_1390175);
          i_1390172 += 1;
          }
          else {
            var helper_1390198 = new_seq_1390128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_1390199 = c_1390175.toString(16);
                  if (((code_1390199 != null ? code_1390199.length : 0) == 1)) {
                  if (helper_1390198 != null) { helper_1390198.push("%0"); } else { helper_1390198 = ["%0"]; };
                  }
                  else {
                  if (helper_1390198 != null) { helper_1390198.push("%"); } else { helper_1390198 = ["%"]; };
                  }
                  
                  if (helper_1390198 != null) { helper_1390198.push(code_1390199); } else { helper_1390198 = [code_1390199]; };
                  i_1390172 += 1;
                    if (((s_1390096 != null ? s_1390096.length : 0) <= i_1390172)) Tmp5 = true; else {                      Tmp5 = (s_1390096[i_1390172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_1390175 = s_1390096[i_1390172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_1390170[j_1390174] = decodeURIComponent(helper_1390198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_1390170[j_1390174] = helper_1390198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_1390174 += 1;
        }
    } while(false);
    if (res_1390170 === null) res_1390170 = [];
               if (res_1390170.length < j_1390174) { for (var i=res_1390170.length;i<j_1390174;++i) res_1390170.push(null); }
               else { res_1390170.length = j_1390174; };
    result_1390097 = res_1390170.join("");

  return result_1390097;

}
function raiseException(e_1355218, ename_1355219) {
    e_1355218.name = ename_1355219;
    if ((excHandler == 0)) {
    unhandledException(e_1355218);
    }
    
    e_1355218.trace = nimCopy(null, raw_write_stack_trace_1345059(), NTI1166014);
    throw e_1355218;

  
}
function chckRange(i_1420016, a_1420017, b_1420018) {
      var Tmp1;

  var result_1420019 = 0;

  BeforeRet: do {
      if (!(a_1420017 <= i_1420016)) Tmp1 = false; else {        Tmp1 = (i_1420016 <= b_1420018);      }    if (Tmp1) {
    result_1420019 = i_1420016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_1420019;

}
function addInt(a_1395403, b_1395404) {
        var result = a_1395403 + b_1395404;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function divInt(a_1395457, b_1395458) {
        if (b_1395458 == 0) raiseDivByZero();
    if (b_1395458 == -1 && a_1395457 == 2147483647) raiseOverflow();
    return Math.trunc(a_1395457 / b_1395458);
  

  
}
function mulInt(a_1395439, b_1395440) {
        var result = a_1395439 * b_1395440;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function chckIndx(i_1415086, a_1415087, b_1415088) {
      var Tmp1;

  var result_1415089 = 0;

  BeforeRet: do {
      if (!(a_1415087 <= i_1415086)) Tmp1 = false; else {        Tmp1 = (i_1415086 <= b_1415088);      }    if (Tmp1) {
    result_1415089 = i_1415086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_1415086, a_1415087, b_1415088);
    }
    
  } while (false);

  return result_1415089;

}
function subInt(a_1395421, b_1395422) {
        var result = a_1395421 - b_1395422;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
      var rook_moves_11260675 = [{Field0: 1, Field1: 0}, {Field0: -1, Field1: 0}, {Field0: 0, Field1: 1}, {Field0: 0, Field1: -1}];
      var bishop_moves_11260699 = [{Field0: 1, Field1: 1}, {Field0: 1, Field1: -1}, {Field0: -1, Field1: 1}, {Field0: -1, Field1: -1}];
      var to_tag_12535006 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];
      var to_event_name_12535012 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "focusout", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater", "load", "transitioncancel", "transitionend", "transitionrun", "transitionstart"];
function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
function nimMin(a_1395803, b_1395804) {
    var Tmp1;

  var result_1395805 = 0;

  BeforeRet: do {
    if ((a_1395803 <= b_1395804)) {
    Tmp1 = a_1395803;
    }
    else {
    Tmp1 = b_1395804;
    }
    
    result_1395805 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_1395805;

}
function modInt(a_1395475, b_1395476) {
        if (b_1395476 == 0) raiseDivByZero();
    if (b_1395476 == -1 && a_1395475 == 2147483647) raiseOverflow();
    return Math.trunc(a_1395475 % b_1395476);
  

  
}
    var to_style_attr_name_11005006 = ["alignContent", "alignItems", "alignSelf", "animation", "animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationTimingFunction", "animationPlayState", "background", "backgroundAttachment", "backgroundColor", "backgroundImage", "backgroundPosition", "backgroundRepeat", "backgroundClip", "backgroundOrigin", "backgroundSize", "backfaceVisibility", "border", "borderBottom", "borderBottomColor", "borderBottomLeftRadius", "borderBottomRightRadius", "borderBottomStyle", "borderBottomWidth", "borderCollapse", "borderColor", "borderImage", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeft", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRadius", "borderRight", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderSpacing", "borderStyle", "borderTop", "borderTopColor", "borderTopLeftRadius", "borderTopRightRadius", "borderTopStyle", "borderTopWidth", "borderWidth", "bottom", "boxDecorationBreak", "boxShadow", "boxSizing", "captionSide", "clear", "clip", "color", "columnCount", "columnFill", "columnGap", "columnRule", "columnRuleColor", "columnRuleStyle", "columnRuleWidth", "columns", "columnSpan", "columnWidth", "content", "counterIncrement", "counterReset", "cursor", "direction", "display", "emptyCells", "filter", "flex", "flexBasis", "flexDirection", "flexFlow", "flexGrow", "flexShrink", "flexWrap", "cssFloat", "font", "fontFamily", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontWeight", "hangingPunctuation", "height", "hyphens", "icon", "imageOrientation", "justifyContent", "left", "letterSpacing", "lineHeight", "listStyle", "listStyleImage", "listStylePosition", "listStyleType", "margin", "marginBottom", "marginLeft", "marginRight", "marginTop", "maxHeight", "maxWidth", "minHeight", "minWidth", "navDown", "navIndex", "navLeft", "navRight", "navUp", "opacity", "order", "orphans", "outline", "outlineColor", "outlineOffset", "outlineStyle", "outlineWidth", "overflow", "overflowX", "overflowY", "padding", "paddingBottom", "paddingLeft", "paddingRight", "paddingTop", "pageBreakAfter", "pageBreakBefore", "pageBreakInside", "perspective", "perspectiveOrigin", "pointerEvents", "position", "quotes", "resize", "right", "scrollbar3dLightColor", "scrollbarArrowColor", "scrollbarBaseColor", "scrollbarDarkshadowColor", "scrollbarFaceColor", "scrollbarHighlightColor", "scrollbarShadowColor", "scrollbarTrackColor", "tableLayout", "tabSize", "textAlign", "textAlignLast", "textDecoration", "textDecorationColor", "textDecorationLine", "textDecorationStyle", "textIndent", "textJustify", "textOverflow", "textShadow", "textTransform", "top", "transform", "transformOrigin", "transformStyle", "transition", "transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction", "unicodeBidi", "userSelect", "verticalAlign", "visibility", "whiteSpace", "width", "wordBreak", "wordSpacing", "wordWrap", "widows", "zIndex"];
function nimMax(a_1395821, b_1395822) {
    var Tmp1;

  var result_1395823 = 0;

  BeforeRet: do {
    if ((b_1395822 <= a_1395821)) {
    Tmp1 = a_1395821;
    }
    else {
    Tmp1 = b_1395822;
    }
    
    result_1395823 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_1395823;

}
function mnewString(len_1395044) {
        return new Array(len_1395044);
  

  
}
var ConstSet2 = setConstr(32, 9, 11, 13, 10, 12);
function eqStrings(a_1395222, b_1395223) {
        if (a_1395222 == b_1395223) return true;
    if (a_1395222 === null && b_1395223.length == 0) return true;
    if (b_1395223 === null && a_1395222.length == 0) return true;
    if ((!a_1395222) || (!b_1395223)) return false;
    var alen = a_1395222.length;
    if (alen != b_1395223.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_1395222[i] != b_1395223[i]) return false;
    return true;
  

  
}
var nim_program_result = 0;
var global_raise_hook_1307018 = [null];
var local_raise_hook_1307023 = [null];
var out_of_mem_hook_1307026 = [null];
var unhandled_exception_hook_1307031 = [null];
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var object_id_11050031 = [0];
var pieces_11217056 = [({data: null, counter: 0})];
var current_team_11217057 = [0];
var winner_11217076 = [({val: 0, has: false})];
var selected_pos_11217080 = [{Field0: -1, Field1: -1}];
var hovered_pos_11217084 = [{Field0: -1, Field1: -1}];
var state_11472005 = [{a0: 1773455756, a1: 4275166512}];
var utc_instance_11735231 = [null];
var local_instance_11735232 = [null];
function is_power_of_two_2410029(x_2410031) {
    var Tmp1;

  var result_2410032 = false;

  BeforeRet: do {
    if (!(0 < x_2410031)) Tmp1 = false; else {      Tmp1 = ((x_2410031 & (x_2410031 - 1)) == 0);    }    result_2410032 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_2410032;

}
function is_fat_pointer_1400401(ti_1400403) {
  var result_1400404 = false;

  BeforeRet: do {
    result_1400404 = !((ConstSet1[ti_1400403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_1400404;

}
function nimCopyAux(dest_1405028, src_1405029, n_1405031) {
    switch (n_1405031.kind) {
    case 0:
      break;
    case 1:
            dest_1405028[n_1405031.offset] = nimCopy(dest_1405028[n_1405031.offset], src_1405029[n_1405031.offset], n_1405031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_1405031.sons.length; i++) {
      nimCopyAux(dest_1405028, src_1405029, n_1405031.sons[i]);
    }
    
      break;
    case 3:
            dest_1405028[n_1405031.offset] = nimCopy(dest_1405028[n_1405031.offset], src_1405029[n_1405031.offset], n_1405031.typ);
      for (var i = 0; i < n_1405031.sons.length; ++i) {
        nimCopyAux(dest_1405028, src_1405029, n_1405031.sons[i][1]);
      }
    
      break;
    }

  
}
function add_1307042(x_1307045, x_1307045_Idx, y_1307046) {
          if (x_1307045[x_1307045_Idx] === null) { x_1307045[x_1307045_Idx] = []; }
      var off = x_1307045[x_1307045_Idx].length;
      x_1307045[x_1307045_Idx].length += y_1307046.length;
      for (var i = 0; i < y_1307046.length; ++i) {
        x_1307045[x_1307045_Idx][off+i] = y_1307046.charCodeAt(i);
      }
    

  
}
function aux_write_stack_trace_1325038(f_1325040) {
          var Tmp3;

  var result_1325041 = [null];

    var it_1325049 = f_1325040;
    var i_1325051 = 0;
    var total_1325053 = 0;
    var temp_frames_1325060 = arrayConstr(64, {Field0: null, Field1: 0}, NTI1325043);
    L1: do {
        L2: while (true) {
          if (!!((it_1325049 == null))) Tmp3 = false; else {            Tmp3 = (i_1325051 <= 63);          }        if (!Tmp3) break L2;
          temp_frames_1325060[i_1325051].Field0 = it_1325049.procname;
          temp_frames_1325060[i_1325051].Field1 = it_1325049.line;
          i_1325051 += 1;
          total_1325053 += 1;
          it_1325049 = it_1325049.prev;
        }
    } while(false);
    L4: do {
        L5: while (true) {
        if (!!((it_1325049 == null))) break L5;
          total_1325053 += 1;
          it_1325049 = it_1325049.prev;
        }
    } while(false);
    result_1325041[0] = nimCopy(null, [], NTI1166014);
    if (!((total_1325053 == i_1325051))) {
    if (result_1325041[0] != null) { result_1325041[0] = (result_1325041[0]).concat(makeNimstrLit("(")); } else { result_1325041[0] = makeNimstrLit("("); };
    if (result_1325041[0] != null) { result_1325041[0] = (result_1325041[0]).concat(cstrToNimstr(((total_1325053 - i_1325051))+"")); } else { result_1325041[0] = cstrToNimstr(((total_1325053 - i_1325051))+"").slice(); };
    if (result_1325041[0] != null) { result_1325041[0] = (result_1325041[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_1325041[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
    }
    
    L6: do {
      var j_1340236 = 0;
      var colontmp__12435631 = 0;
      colontmp__12435631 = (i_1325051 - 1);
      var res_12435636 = colontmp__12435631;
      L7: do {
          L8: while (true) {
          if (!(0 <= res_12435636)) break L8;
            j_1340236 = res_12435636;
            add_1307042(result_1325041, 0, temp_frames_1325060[j_1340236].Field0);
            if ((0 < temp_frames_1325060[j_1340236].Field1)) {
            if (result_1325041[0] != null) { result_1325041[0] = (result_1325041[0]).concat(makeNimstrLit(", line: ")); } else { result_1325041[0] = makeNimstrLit(", line: "); };
            if (result_1325041[0] != null) { result_1325041[0] = (result_1325041[0]).concat(cstrToNimstr((temp_frames_1325060[j_1340236].Field1)+"")); } else { result_1325041[0] = cstrToNimstr((temp_frames_1325060[j_1340236].Field1)+"").slice(); };
            }
            
            if (result_1325041[0] != null) { result_1325041[0] = (result_1325041[0]).concat(makeNimstrLit("\x0A")); } else { result_1325041[0] = makeNimstrLit("\x0A"); };
            res_12435636 -= 1;
          }
      } while(false);
    } while(false);

  return result_1325041[0];

}
function raw_write_stack_trace_1345059() {
  var result_1345061 = null;

    if (!((framePtr == null))) {
    result_1345061 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_1325038(framePtr) || []), NTI1166014);
    }
    else {
      result_1345061 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI1166014);
    }
    

  return result_1345061;

}
function new_seq_1390128(len_1390131) {
  var result_1390133 = null;

  var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 643;
    result_1390133 = new Array(len_1390131); for (var i=0;i<len_1390131;++i) {result_1390133[i]=null;}  framePtr = F.prev;

  return result_1390133;

}
function unhandledException(e_1350059) {
    var buf_1350060 = [[]];
    if (!(((e_1350059.message != null ? e_1350059.message.length : 0) == 0))) {
    if (buf_1350060[0] != null) { buf_1350060[0] = (buf_1350060[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_1350060[0] = makeNimstrLit("Error: unhandled exception: "); };
    if (buf_1350060[0] != null) { buf_1350060[0] = (buf_1350060[0]).concat(e_1350059.message); } else { buf_1350060[0] = e_1350059.message.slice(); };
    }
    else {
    if (buf_1350060[0] != null) { buf_1350060[0] = (buf_1350060[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_1350060[0] = makeNimstrLit("Error: unhandled exception"); };
    }
    
    if (buf_1350060[0] != null) { buf_1350060[0] = (buf_1350060[0]).concat(makeNimstrLit(" [")); } else { buf_1350060[0] = makeNimstrLit(" ["); };
    add_1307042(buf_1350060, 0, e_1350059.name);
    if (buf_1350060[0] != null) { buf_1350060[0] = (buf_1350060[0]).concat(makeNimstrLit("]\x0A")); } else { buf_1350060[0] = makeNimstrLit("]\x0A"); };
    if (buf_1350060[0] != null) { buf_1350060[0] = (buf_1350060[0]).concat(raw_write_stack_trace_1345059()); } else { buf_1350060[0] = raw_write_stack_trace_1345059().slice(); };
    var cbuf_1355201 = toJSStr(buf_1350060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_1355201);
  }
  else {
    throw cbuf_1355201;
  }
  

  
}
function sys_fatal_1267618(message_1267622) {
  var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
  framePtr = F;
    F.line = 49;
    raiseException({message: nimCopy(null, message_1267622, NTI1166014), m_type: NTI1172041, parent: null, name: null, trace: null, up: null}, "AssertionError");
  framePtr = F.prev;

  
}
function raise_assert_1267614(msg_1267616) {
  var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"assertions.nim",line:0};
  framePtr = F;
    F.line = 22;
    sys_fatal_1267618(msg_1267616);
  framePtr = F.prev;

  
}
function failed_assert_impl_1267680(msg_1267682) {
  var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"assertions.nim",line:0};
  framePtr = F;
    F.line = 29;
    raise_assert_1267614(msg_1267682);
  framePtr = F.prev;

  
}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI1172053, name: null, trace: null, up: null}, "RangeError");

  
}
function init_12351114(s_12351119, initial_size_12351120) {
  var F={procname:"init.init",prev:framePtr,filename:"sets.nim",line:0};
  framePtr = F;
    if (!(is_power_of_two_2410029(initial_size_12351120))) {
    F.line = 19;
    failed_assert_impl_1267680(makeNimstrLit("/home/dk/.choosenim/toolchains/nim-1.2.6/lib/pure/collections/setimpl.nim(19, 10) `isPowerOfTwo(initialSize)` "));
    }
    
    F.line = 23;
    s_12351119.counter = 0;
    F.line = 118;
    s_12351119.data = new Array(chckRange(initial_size_12351120, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_12351120, 0, 2147483647);++i) {s_12351119.data[i]={Field0: 0, Field1: {Field0: 0, Field1: 0}};}  framePtr = F.prev;

  
}
function init_hash_set_12351094(initial_size_12351097) {
  var result_12351099 = [({data: null, counter: 0})];

  var F={procname:"initHashSet.initHashSet",prev:framePtr,filename:"sets.nim",line:0};
  framePtr = F;
    F.line = 137;
    init_12351114(result_12351099[0], initial_size_12351097);
  framePtr = F.prev;

  return result_12351099[0];

}
function next_power_of_two_2415014(x_2415016) {
  var result_2415017 = 0;

    result_2415017 = (x_2415016 - 1);
    result_2415017 = (result_2415017 | (result_2415017 >> 16));
    result_2415017 = (result_2415017 | (result_2415017 >> 8));
    result_2415017 = (result_2415017 | (result_2415017 >> 4));
    result_2415017 = (result_2415017 | (result_2415017 >> 2));
    result_2415017 = (result_2415017 | (result_2415017 >> 1));
    result_2415017 += (1 + ((x_2415016 <= 0) ? 1:0));

  return result_2415017;

}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI1172037, name: null, trace: null, up: null}, "OverflowError");

  
}
function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI1172035, name: null, trace: null, up: null}, "DivByZeroError");

  
}
function right_size_12265048(count_12265050) {
  var result_12265051 = 0;

  var F={procname:"sets.rightSize",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    F.line = 43;
    result_12265051 = next_power_of_two_2415014(addInt(divInt(mulInt(count_12265050, 3), 2), 4));
  framePtr = F.prev;

  return result_12265051;

}
function raiseIndexError(i_1375047, a_1375048, b_1375049) {
    var Tmp1;

    if ((b_1375049 < a_1375048)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_1375047)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_1375048)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_1375049)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI1166014), parent: null, m_type: NTI1172049, name: null, trace: null, up: null}, "IndexError");

  
}
function HEX21HEX26_11047032(h_11047034, val_11047035) {
  var result_11047036 = 0;

  var F={procname:"hashes.!&",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 56;
    var h_11047037 = (h_11047034 >>> 0);
    F.line = 57;
    var val_11047038 = (val_11047035 >>> 0);
    F.line = 58;
    var res_11047039 = ((h_11047037 + val_11047038) >>> 0);
    F.line = 59;
    res_11047039 = ((res_11047039 + (res_11047039 << 10)) >>> 0);
    F.line = 60;
    res_11047039 = (res_11047039 ^ ((res_11047039 >>> 0) >>> 6));
    F.line = 61;
    result_11047036 = (res_11047039|0);
  framePtr = F.prev;

  return result_11047036;

}
function hash_11050440(x_11050443) {
  var result_11050444 = 0;

  var F={procname:"hash.hash",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 116;
    result_11050444 = x_11050443;
  framePtr = F.prev;

  return result_11050444;

}
function HEX21HEX24_11047067(h_11047069) {
  var result_11047070 = 0;

  var F={procname:"hashes.!$",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 67;
    var h_11047071 = (h_11047069 >>> 0);
    F.line = 68;
    var res_11047079 = ((h_11047071 + (h_11047071 << 3)) >>> 0);
    F.line = 69;
    res_11047079 = (res_11047079 ^ ((res_11047079 >>> 0) >>> 11));
    F.line = 70;
    res_11047079 = ((res_11047079 + (res_11047079 << 15)) >>> 0);
    F.line = 71;
    result_11047070 = (res_11047079|0);
  framePtr = F.prev;

  return result_11047070;

}
function hash_12385001(x_12385004) {
  var result_12385005 = 0;

  var F={procname:"hash.hash",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 362;
    result_12385005 = HEX21HEX26_11047032(result_12385005, hash_11050440(x_12385004["Field0"]));
    F.line = 362;
    result_12385005 = HEX21HEX26_11047032(result_12385005, hash_11050440(x_12385004["Field1"]));
    F.line = 363;
    result_12385005 = HEX21HEX24_11047067(result_12385005);
  framePtr = F.prev;

  return result_12385005;

}
function is_filled_12263418(hcode_12263420) {
  var result_12263421 = false;

  var F={procname:"sets.isFilled",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    F.line = 27;
    result_12263421 = !((hcode_12263420 == 0));
  framePtr = F.prev;

  return result_12263421;

}
function HEX3DHEX3D_11450319(x_11450322, y_11450323) {
  var result_11450324 = false;

  var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (!((x_11450322["Field0"] == y_11450323["Field0"]))) {
    F.line = 1791;
    result_11450324 = false;
    break BeforeRet;
    }
    
    if (!((x_11450322["Field1"] == y_11450323["Field1"]))) {
    F.line = 1791;
    result_11450324 = false;
    break BeforeRet;
    }
    
    F.line = 1792;
    result_11450324 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_11450324;

}
function next_try_12265014(h_12265016, max_hash_12265017) {
  var result_12265018 = 0;

  var F={procname:"sets.nextTry",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    F.line = 30;
    result_12265018 = (addInt(h_12265016, 1) & max_hash_12265017);
  framePtr = F.prev;

  return result_12265018;

}
function raw_get_12380426(t_12380430, key_12380431, hc_12380432, hc_12380432_Idx) {
            var Tmp3;

  var result_12380433 = 0;

  var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 63;
    hc_12380432[hc_12380432_Idx] = hash_12385001(key_12380431);
    if ((hc_12380432[hc_12380432_Idx] == 0)) {
    F.line = 65;
    hc_12380432[hc_12380432_Idx] = 314159265;
    }
    
    if (((t_12380430.data != null ? t_12380430.data.length : 0) == 0)) {
    F.line = 47;
    result_12380433 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_12390060 = (hc_12380432[hc_12380432_Idx] & (t_12380430.data != null ? (t_12380430.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_12263418(t_12380430.data[chckIndx(h_12390060, 0, (t_12380430.data != null ? t_12380430.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_12380430.data[chckIndx(h_12390060, 0, (t_12380430.data != null ? t_12380430.data.length : 0)+0-1)-0].Field0 == hc_12380432[hc_12380432_Idx])) Tmp3 = false; else {              Tmp3 = HEX3DHEX3D_11450319(t_12380430.data[chckIndx(h_12390060, 0, (t_12380430.data != null ? t_12380430.data.length : 0)+0-1)-0].Field1, key_12380431);            }          if (Tmp3) {
          F.line = 55;
          result_12380433 = h_12390060;
          break BeforeRet;
          }
          
          F.line = 56;
          h_12390060 = next_try_12265014(h_12390060, (t_12380430.data != null ? (t_12380430.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_12380433 = subInt(-1, h_12390060);
  } while (false);
  framePtr = F.prev;

  return result_12380433;

}
function must_rehash_12390156(t_12390159) {
  var result_12390160 = false;

  var F={procname:"mustRehash.mustRehash",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    if (!((t_12390159.counter < (t_12390159.data != null ? t_12390159.data.length : 0)))) {
    F.line = 33;
    failed_assert_impl_1267680(makeNimstrLit("/home/dk/.choosenim/toolchains/nim-1.2.6/lib/pure/collections/hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 34;
    result_12390160 = ((mulInt((t_12390159.data != null ? t_12390159.data.length : 0), 2) < mulInt(t_12390159.counter, 3)) || (subInt((t_12390159.data != null ? t_12390159.data.length : 0), t_12390159.counter) < 4));
  framePtr = F.prev;

  return result_12390160;

}
function raw_get_known_hc_12415244(t_12415248, key_12415249, hc_12415250) {
  var result_12415251 = 0;

  var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((t_12415248.data != null ? t_12415248.data.length : 0) == 0)) {
    F.line = 47;
    result_12415251 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_12420060 = (hc_12415250 & (t_12415248.data != null ? (t_12415248.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_12263418(t_12415248.data[chckIndx(h_12420060, 0, (t_12415248.data != null ? t_12415248.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_12415248.data[chckIndx(h_12420060, 0, (t_12415248.data != null ? t_12415248.data.length : 0)+0-1)-0].Field0 == hc_12415250) && HEX3DHEX3D_11450319(t_12415248.data[chckIndx(h_12420060, 0, (t_12415248.data != null ? t_12415248.data.length : 0)+0-1)-0].Field1, key_12415249))) {
          F.line = 55;
          result_12415251 = h_12420060;
          break BeforeRet;
          }
          
          F.line = 56;
          h_12420060 = next_try_12265014(h_12420060, (t_12415248.data != null ? (t_12415248.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_12415251 = subInt(-1, h_12420060);
  } while (false);
  framePtr = F.prev;

  return result_12415251;

}
function raw_insert_12420191(s_12420196, data_12420199, data_12420199_Idx, key_12420200, hc_12420201, h_12420202) {
  var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"setimpl.nim",line:0};
  framePtr = F;
    if (((data_12420199[data_12420199_Idx] != null ? data_12420199[data_12420199_Idx].length : 0) == 0)) {
    if (!(is_power_of_two_2410029(64))) {
    F.line = 19;
    failed_assert_impl_1267680(makeNimstrLit("/home/dk/.choosenim/toolchains/nim-1.2.6/lib/pure/collections/setimpl.nim(19, 10) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    F.line = 23;
    s_12420196.counter = 0;
    F.line = 28;
    s_12420196.data = new Array(64); for (var i=0;i<64;++i) {s_12420196.data[i]={Field0: 0, Field1: {Field0: 0, Field1: 0}};}    }
    
    F.line = 29;
    nimCopy(data_12420199[data_12420199_Idx][chckIndx(h_12420202, 0, (data_12420199[data_12420199_Idx] != null ? data_12420199[data_12420199_Idx].length : 0)+0-1)-0].Field1, key_12420200, NTI12351035);
    F.line = 30;
    data_12420199[data_12420199_Idx][chckIndx(h_12420202, 0, (data_12420199[data_12420199_Idx] != null ? data_12420199[data_12420199_Idx].length : 0)+0-1)-0].Field0 = hc_12420201;
  framePtr = F.prev;

  
}
function enlarge_12415098(s_12415103) {
  var F={procname:"enlarge.enlarge",prev:framePtr,filename:"setimpl.nim",line:0};
  framePtr = F;
    F.line = 37;
    var n_12415108 = null;
    F.line = 38;
    n_12415108 = new Array(chckRange(mulInt((s_12415103.data != null ? s_12415103.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((s_12415103.data != null ? s_12415103.data.length : 0), 2), 0, 2147483647);++i) {n_12415108[i]={Field0: 0, Field1: {Field0: 0, Field1: 0}};}    F.line = 39;
    var Tmp1 = s_12415103.data; s_12415103.data = n_12415108; n_12415108 = Tmp1;    L2: do {
      F.line = 40;
      var i_12415189 = 0;
      F.line = 39;
      var colontmp__12435663 = 0;
      F.line = 40;
      colontmp__12435663 = (n_12415108 != null ? (n_12415108.length-1) : -1);
      F.line = 56;
      var res_12435668 = 0;
      L3: do {
        F.line = 57;
          L4: while (true) {
          if (!(res_12435668 <= colontmp__12435663)) break L4;
            F.line = 40;
            i_12415189 = res_12435668;
            if (is_filled_12263418(n_12415108[chckIndx(i_12415189, 0, (n_12415108 != null ? n_12415108.length : 0)+0-1)-0].Field0)) {
            F.line = 42;
            var j_12420139 = subInt(-1, raw_get_known_hc_12415244(s_12415103, n_12415108[chckIndx(i_12415189, 0, (n_12415108 != null ? n_12415108.length : 0)+0-1)-0].Field1, n_12415108[chckIndx(i_12415189, 0, (n_12415108 != null ? n_12415108.length : 0)+0-1)-0].Field0));
            F.line = 43;
            raw_insert_12420191(s_12415103, s_12415103, "data", n_12415108[chckIndx(i_12415189, 0, (n_12415108 != null ? n_12415108.length : 0)+0-1)-0].Field1, n_12415108[chckIndx(i_12415189, 0, (n_12415108 != null ? n_12415108.length : 0)+0-1)-0].Field0, j_12420139);
            }
            
            F.line = 59;
            res_12435668 = addInt(res_12435668, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function incl_12365544(s_12365549, key_12365550) {
  var F={procname:"incl.incl",prev:framePtr,filename:"sets.nim",line:0};
  framePtr = F;
    if (((s_12365549.data != null ? s_12365549.data.length : 0) == 0)) {
    if (!(is_power_of_two_2410029(64))) {
    F.line = 19;
    failed_assert_impl_1267680(makeNimstrLit("/home/dk/.choosenim/toolchains/nim-1.2.6/lib/pure/collections/setimpl.nim(19, 10) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    F.line = 23;
    s_12365549.counter = 0;
    F.line = 47;
    s_12365549.data = new Array(64); for (var i=0;i<64;++i) {s_12365549.data[i]={Field0: 0, Field1: {Field0: 0, Field1: 0}};}    }
    
    F.line = 48;
    var hc_12380408 = [0];
    F.line = 49;
    var index_12390155 = raw_get_12380426(s_12365549, key_12365550, hc_12380408, 0);
    if ((index_12390155 < 0)) {
    if (must_rehash_12390156(s_12365549)) {
    F.line = 52;
    enlarge_12415098(s_12365549);
    F.line = 53;
    index_12390155 = raw_get_known_hc_12415244(s_12365549, key_12365550, hc_12380408[0]);
    }
    
    F.line = 54;
    raw_insert_12420191(s_12365549, s_12365549, "data", key_12365550, hc_12380408[0], subInt(-1, index_12390155));
    F.line = 55;
    s_12365549.counter = addInt(s_12365549.counter, 1);
    }
    
  framePtr = F.prev;

  
}
function to_hash_set_12351073(keys_12351077) {
  var result_12351092 = [({data: null, counter: 0})];

  var F={procname:"toHashSet.toHashSet",prev:framePtr,filename:"sets.nim",line:0};
  framePtr = F;
    F.line = 227;
    nimCopy(result_12351092[0], init_hash_set_12351094(right_size_12265048(chckRange((keys_12351077 != null ? keys_12351077.length : 0), 0, 2147483647))), NTI12351080);
    L1: do {
      F.line = 228;
      var key_12365484 = {Field0: 0, Field1: 0};
      F.line = 3;
      var i_12435624 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_12435624 < (keys_12351077 != null ? keys_12351077.length : 0))) break L3;
            F.line = 228;
            nimCopy(key_12365484, keys_12351077[chckIndx(i_12435624, 0, (keys_12351077 != null ? keys_12351077.length : 0)+0-1)-0], NTI12351035);
            F.line = 228;
            incl_12365544(result_12351092[0], key_12365484);
            F.line = 6;
            i_12435624 = addInt(i_12435624, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_12351092[0];

}
var grid_size_12351015 = 10;
var walls_12435571 = to_hash_set_12351073([{Field0: 1, Field1: 1}, {Field0: 2, Field1: 1}, {Field0: 1, Field1: 2}, {Field0: 8, Field1: 1}, {Field0: 8, Field1: 2}, {Field0: 7, Field1: 1}, {Field0: 1, Field1: 7}, {Field0: 1, Field1: 8}, {Field0: 2, Field1: 8}, {Field0: 8, Field1: 8}, {Field0: 8, Field1: 7}, {Field0: 7, Field1: 8}]);
var snake_12435573 = [null];
var fruit_pos_12435574 = [{Field0: 0, Field1: 0}];
var game_over_12435575 = [false];
var prev_vec_12435576 = [{Field0: 0, Field1: 0}];
var snake_canvas_focused_12435577 = [false];
var timeout_12435578 = [null];
var canvas_size_12500449 = 480;
var cell_size_12500450 = Math.trunc(canvas_size_12500449 / grid_size_12351015);
var gid_12570032 = [0];
var vcomponents_12701239 = [{}];
var kxi_12822284 = [null];
function to_float_1191459(i_1191461) {
  var result_1191462 = 0.0;

  var F={procname:"system.toFloat",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 1372;
    result_1191462 = i_1191461;
  framePtr = F.prev;

  return result_1191462;

}
function HEX2F_1490648(x_1490650, y_1490651) {
  var result_1490652 = 0.0;

  var F={procname:"system./",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2376;
    result_1490652 = (to_float_1191459(x_1490650) / to_float_1191459(y_1490651));
  framePtr = F.prev;

  return result_1490652;

}
function epoch_time_12260401() {
  var result_12260403 = 0.0;

  var F={procname:"times.epochTime",prev:framePtr,filename:"times.nim",line:0};
  framePtr = F;
    F.line = 2598;
    result_12260403 = HEX2F_1490648(new Date().getTime(), 1000);
  framePtr = F.prev;

  return result_12260403;

}
function rotl_11472230(x_11472232, k_11472233) {
  var result_11472234 = 0;

  var F={procname:"random.rotl",prev:framePtr,filename:"random.nim",line:0};
  framePtr = F;
    F.line = 122;
    result_11472234 = ((x_11472232 << k_11472233) | ((x_11472232 >>> 0) >>> ((64 - k_11472233) >>> 0)));
  framePtr = F.prev;

  return result_11472234;

}
function next_11472258(r_11472261) {
  var result_11472262 = 0;

  var F={procname:"random.next",prev:framePtr,filename:"random.nim",line:0};
  framePtr = F;
    F.line = 139;
    var s0_11472263 = r_11472261.a0;
    F.line = 140;
    var s1_11472264 = r_11472261.a1;
    F.line = 141;
    result_11472262 = ((s0_11472263 + s1_11472264) >>> 0);
    F.line = 142;
    s1_11472264 = (s1_11472264 ^ s0_11472263);
    F.line = 143;
    r_11472261.a0 = ((rotl_11472230(s0_11472263, 55) ^ s1_11472264) ^ (s1_11472264 << 14));
    F.line = 144;
    r_11472261.a1 = rotl_11472230(s1_11472264, 36);
  framePtr = F.prev;

  return result_11472262;

}
function init_rand_11475612(seed_11475614) {
  var result_11475615 = [({a0: 0, a1: 0})];

  var F={procname:"random.initRand",prev:framePtr,filename:"random.nim",line:0};
  framePtr = F;
    if (!(!((seed_11475614 == 0)))) {
    F.line = 572;
    failed_assert_impl_1267680(makeNimstrLit("/home/dk/.choosenim/toolchains/nim-1.2.6/lib/pure/random.nim(572, 12) `seed != 0` "));
    }
    
    F.line = 573;
    result_11475615[0].a0 = (seed_11475614 >> 16);
    F.line = 574;
    result_11475615[0].a1 = (seed_11475614 & 65535);
    F.line = 575;
    next_11472258(result_11475615[0]);
  framePtr = F.prev;

  return result_11475615[0];

}
function randomize_11490222(seed_11490224) {
  var F={procname:"random.randomize",prev:framePtr,filename:"random.nim",line:0};
  framePtr = F;
    F.line = 593;
    nimCopy(state_11472005[0], init_rand_11475612(seed_11490224), NTI11472002);
  framePtr = F.prev;

  
}
function randomize_12262001() {
  var F={procname:"random.randomize",prev:framePtr,filename:"random.nim",line:0};
  framePtr = F;
    F.line = 645;
    var time_12262203 = ((epoch_time_12260401() * 1.0000000000000000e+03) & 2147483647);
    F.line = 646;
    randomize_11490222(time_12262203);
  framePtr = F.prev;

  
}
function reset_11290436(obj_11290440) {
  var F={procname:"reset.reset",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 919;
    nimCopy(obj_11290440, ({val: 0, has: false}), NTI11217064);
  framePtr = F.prev;

  
}
function clear_11290569(t_11290575) {
  var F={procname:"clear.clear",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    L1: do {
      F.line = 149;
      var i_11295139 = 0;
      F.line = 104;
      var colontmp__13471044 = 0;
      F.line = 149;
      colontmp__13471044 = (t_11290575.data != null ? t_11290575.data.length : 0);
      F.line = 106;
      var i_13471045 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_13471045 < colontmp__13471044)) break L3;
            F.line = 149;
            i_11295139 = i_13471045;
            F.line = 151;
            t_11290575.data[chckIndx(i_11295139, 0, (t_11290575.data != null ? t_11290575.data.length : 0)+0-1)-0].Field0 = 0;
            F.line = 152;
            nimCopy(t_11290575.data[chckIndx(i_11295139, 0, (t_11290575.data != null ? t_11290575.data.length : 0)+0-1)-0].Field1, {Field0: 0, Field1: 0}, NTI11216003);
            F.line = 153;
            t_11290575.data[chckIndx(i_11295139, 0, (t_11290575.data != null ? t_11290575.data.length : 0)+0-1)-0].Field2 = null;
            F.line = 109;
            i_13471045 = addInt(i_13471045, 1);
          }
      } while(false);
    } while(false);
    F.line = 154;
    t_11290575.counter = 0;
  framePtr = F.prev;

  
}
function hash_11220001(x_11220004) {
  var result_11220005 = 0;

  var F={procname:"hash.hash",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 362;
    result_11220005 = HEX21HEX26_11047032(result_11220005, hash_11050440(x_11220004["Field0"]));
    F.line = 362;
    result_11220005 = HEX21HEX26_11047032(result_11220005, hash_11050440(x_11220004["Field1"]));
    F.line = 363;
    result_11220005 = HEX21HEX24_11047067(result_11220005);
  framePtr = F.prev;

  return result_11220005;

}
function is_filled_11112018(hcode_11112020) {
  var result_11112021 = false;

  var F={procname:"tables.isFilled",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    F.line = 27;
    result_11112021 = !((hcode_11112020 == 0));
  framePtr = F.prev;

  return result_11112021;

}
function HEX3DHEX3D_11225583(x_11225586, y_11225587) {
  var result_11225588 = false;

  var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (!((x_11225586["Field0"] == y_11225587["Field0"]))) {
    F.line = 1791;
    result_11225588 = false;
    break BeforeRet;
    }
    
    if (!((x_11225586["Field1"] == y_11225587["Field1"]))) {
    F.line = 1791;
    result_11225588 = false;
    break BeforeRet;
    }
    
    F.line = 1792;
    result_11225588 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_11225588;

}
function next_try_11115014(h_11115016, max_hash_11115017) {
  var result_11115018 = 0;

  var F={procname:"tables.nextTry",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    F.line = 30;
    result_11115018 = (addInt(h_11115016, 1) & max_hash_11115017);
  framePtr = F.prev;

  return result_11115018;

}
function raw_get_11217303(t_11217307, key_11217308, hc_11217309, hc_11217309_Idx) {
            var Tmp3;

  var result_11217310 = 0;

  var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 63;
    hc_11217309[hc_11217309_Idx] = hash_11220001(key_11217308);
    if ((hc_11217309[hc_11217309_Idx] == 0)) {
    F.line = 65;
    hc_11217309[hc_11217309_Idx] = 314159265;
    }
    
    if (((t_11217307.data != null ? t_11217307.data.length : 0) == 0)) {
    F.line = 47;
    result_11217310 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_11225138 = (hc_11217309[hc_11217309_Idx] & (t_11217307.data != null ? (t_11217307.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_11112018(t_11217307.data[chckIndx(h_11225138, 0, (t_11217307.data != null ? t_11217307.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_11217307.data[chckIndx(h_11225138, 0, (t_11217307.data != null ? t_11217307.data.length : 0)+0-1)-0].Field0 == hc_11217309[hc_11217309_Idx])) Tmp3 = false; else {              Tmp3 = HEX3DHEX3D_11225583(t_11217307.data[chckIndx(h_11225138, 0, (t_11217307.data != null ? t_11217307.data.length : 0)+0-1)-0].Field1, key_11217308);            }          if (Tmp3) {
          F.line = 55;
          result_11217310 = h_11225138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_11225138 = next_try_11115014(h_11225138, (t_11217307.data != null ? (t_11217307.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_11217310 = subInt(-1, h_11225138);
  } while (false);
  framePtr = F.prev;

  return result_11217310;

}
function must_rehash_11345601(t_11345604) {
  var result_11345605 = false;

  var F={procname:"mustRehash.mustRehash",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    if (!((t_11345604.counter < (t_11345604.data != null ? t_11345604.data.length : 0)))) {
    F.line = 33;
    failed_assert_impl_1267680(makeNimstrLit("/home/dk/.choosenim/toolchains/nim-1.2.6/lib/pure/collections/hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 34;
    result_11345605 = ((mulInt((t_11345604.data != null ? t_11345604.data.length : 0), 2) < mulInt(t_11345604.counter, 3)) || (subInt((t_11345604.data != null ? t_11345604.data.length : 0), t_11345604.counter) < 4));
  framePtr = F.prev;

  return result_11345605;

}
function raw_insert_11371108(t_11371114, data_11371117, data_11371117_Idx, key_11371118, val_11371119, hc_11371120, h_11371121) {
  var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tableimpl.nim",line:0};
  framePtr = F;
    F.line = 22;
    nimCopy(data_11371117[data_11371117_Idx][chckIndx(h_11371121, 0, (data_11371117[data_11371117_Idx] != null ? data_11371117[data_11371117_Idx].length : 0)+0-1)-0].Field1, key_11371118, NTI11216003);
    F.line = 23;
    data_11371117[data_11371117_Idx][chckIndx(h_11371121, 0, (data_11371117[data_11371117_Idx] != null ? data_11371117[data_11371117_Idx].length : 0)+0-1)-0].Field2 = val_11371119;
    F.line = 24;
    data_11371117[data_11371117_Idx][chckIndx(h_11371121, 0, (data_11371117[data_11371117_Idx] != null ? data_11371117[data_11371117_Idx].length : 0)+0-1)-0].Field0 = hc_11371120;
  framePtr = F.prev;

  
}
function enlarge_11370161(t_11370167) {
  var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 267;
    var n_11370175 = null;
    F.line = 268;
    n_11370175 = new Array(chckRange(mulInt((t_11370167.data != null ? t_11370167.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_11370167.data != null ? t_11370167.data.length : 0), 2), 0, 2147483647);++i) {n_11370175[i]={Field0: 0, Field1: {Field0: 0, Field1: 0}, Field2: null};}    F.line = 269;
    var Tmp1 = t_11370167.data; t_11370167.data = n_11370175; n_11370175 = Tmp1;    L2: do {
      F.line = 270;
      var i_11370334 = 0;
      F.line = 39;
      var colontmp__13471050 = 0;
      F.line = 270;
      colontmp__13471050 = (n_11370175 != null ? (n_11370175.length-1) : -1);
      F.line = 56;
      var res_13471051 = 0;
      L3: do {
        F.line = 57;
          L4: while (true) {
          if (!(res_13471051 <= colontmp__13471050)) break L4;
            F.line = 270;
            i_11370334 = res_13471051;
            F.line = 271;
            var eh_11370483 = n_11370175[chckIndx(i_11370334, 0, (n_11370175 != null ? n_11370175.length : 0)+0-1)-0].Field0;
            if (is_filled_11112018(eh_11370483)) {
            F.line = 273;
            var j_11370490 = (eh_11370483 & (t_11370167.data != null ? (t_11370167.data.length-1) : -1));
            L5: do {
              F.line = 274;
                L6: while (true) {
                if (!is_filled_11112018(t_11370167.data[chckIndx(j_11370490, 0, (t_11370167.data != null ? t_11370167.data.length : 0)+0-1)-0].Field0)) break L6;
                  F.line = 275;
                  j_11370490 = next_try_11115014(j_11370490, (t_11370167.data != null ? (t_11370167.data.length-1) : -1));
                }
            } while(false);
            F.line = 277;
            raw_insert_11371108(t_11370167, t_11370167, "data", n_11370175[chckIndx(i_11370334, 0, (n_11370175 != null ? n_11370175.length : 0)+0-1)-0].Field1, n_11370175[chckIndx(i_11370334, 0, (n_11370175 != null ? n_11370175.length : 0)+0-1)-0].Field2, eh_11370483, j_11370490);
            }
            
            F.line = 59;
            res_13471051 = addInt(res_13471051, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function raw_get_known_hc_11371593(t_11371597, key_11371598, hc_11371599) {
  var result_11371600 = 0;

  var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((t_11371597.data != null ? t_11371597.data.length : 0) == 0)) {
    F.line = 47;
    result_11371600 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_11375138 = (hc_11371599 & (t_11371597.data != null ? (t_11371597.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_11112018(t_11371597.data[chckIndx(h_11375138, 0, (t_11371597.data != null ? t_11371597.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_11371597.data[chckIndx(h_11375138, 0, (t_11371597.data != null ? t_11371597.data.length : 0)+0-1)-0].Field0 == hc_11371599) && HEX3DHEX3D_11225583(t_11371597.data[chckIndx(h_11375138, 0, (t_11371597.data != null ? t_11371597.data.length : 0)+0-1)-0].Field1, key_11371598))) {
          F.line = 55;
          result_11371600 = h_11375138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_11375138 = next_try_11115014(h_11375138, (t_11371597.data != null ? (t_11371597.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_11371600 = subInt(-1, h_11375138);
  } while (false);
  framePtr = F.prev;

  return result_11371600;

}
function HEX5BHEX5DHEX3D_11296364(t_11296370, key_11296371, val_11296372) {
  var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    if (((t_11296370.data != null ? t_11296370.data.length : 0) == 0)) {
    if (!(is_power_of_two_2410029(64))) {
    F.line = 166;
    failed_assert_impl_1267680(makeNimstrLit("/home/dk/.choosenim/toolchains/nim-1.2.6/lib/pure/collections/tableimpl.nim(166, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    F.line = 167;
    t_11296370.counter = 0;
    F.line = 168;
    t_11296370.data = new Array(64); for (var i=0;i<64;++i) {t_11296370.data[i]={Field0: 0, Field1: {Field0: 0, Field1: 0}, Field2: null};}    }
    
    F.line = 57;
    var hc_11320601 = [0];
    F.line = 58;
    var index_11320610 = raw_get_11217303(t_11296370, key_11296371, hc_11320601, 0);
    if ((0 <= index_11320610)) {
    F.line = 59;
    t_11296370.data[chckIndx(index_11320610, 0, (t_11296370.data != null ? t_11296370.data.length : 0)+0-1)-0].Field2 = val_11296372;
    }
    else {
      if (((t_11296370.data != null ? t_11296370.data.length : 0) == 0)) {
      if (!(is_power_of_two_2410029(64))) {
      F.line = 166;
      failed_assert_impl_1267680(makeNimstrLit("/home/dk/.choosenim/toolchains/nim-1.2.6/lib/pure/collections/tableimpl.nim(166, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      F.line = 167;
      t_11296370.counter = 0;
      F.line = 168;
      t_11296370.data = new Array(64); for (var i=0;i<64;++i) {t_11296370.data[i]={Field0: 0, Field1: {Field0: 0, Field1: 0}, Field2: null};}      }
      
      if (must_rehash_11345601(t_11296370)) {
      F.line = 49;
      enlarge_11370161(t_11296370);
      F.line = 50;
      index_11320610 = raw_get_known_hc_11371593(t_11296370, key_11296371, hc_11320601[0]);
      }
      
      F.line = 51;
      index_11320610 = subInt(-1, index_11320610);
      F.line = 52;
      raw_insert_11371108(t_11296370, t_11296370, "data", key_11296371, val_11296372, hc_11320601[0], index_11320610);
      F.line = 60;
      t_11296370.counter = addInt(t_11296370.counter, 1);
    }
    
  framePtr = F.prev;

  
}
function find_11380128(a_11380132, item_11380133) {
  var result_11380134 = 0;

  var F={procname:"find.find",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    L1: do {
      F.line = 1751;
      var i_11380165 = 0;
      F.line = 3;
      var i_13471059 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_13471059 < (a_11380132 != null ? a_11380132.length : 0))) break L3;
            F.line = 1751;
            i_11380165 = a_11380132[chckIndx(i_13471059, 0, (a_11380132 != null ? a_11380132.length : 0)+0-1)-0];
            if ((i_11380165 == item_11380133)) {
            F.line = 1752;
            break BeforeRet;
            }
            
            F.line = 1753;
            result_11380134 = addInt(result_11380134, 1);
            F.line = 6;
            i_13471059 = addInt(i_13471059, 1);
          }
      } while(false);
    } while(false);
    F.line = 1754;
    result_11380134 = -1;
  } while (false);
  framePtr = F.prev;

  return result_11380134;

}
function contains_11380121(a_11380125, item_11380126) {
  var result_11380127 = false;

  var F={procname:"contains.contains",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1768;
    result_11380127 = (0 <= find_11380128(a_11380125, item_11380126));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_11380127;

}
function add_int_1490201(result_1490204, result_1490204_Idx, x_1490205) {
  var F={procname:"system.addInt",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2347;
    if (result_1490204[result_1490204_Idx] != null) { result_1490204[result_1490204_Idx] = (result_1490204[result_1490204_Idx]).concat(cstrToNimstr((x_1490205)+"")); } else { result_1490204[result_1490204_Idx] = cstrToNimstr((x_1490205)+"").slice(); };
  framePtr = F.prev;

  
}
function add_quoted_11228401(s_11228404, s_11228404_Idx, x_11228405) {
  var F={procname:"addQuoted.addQuoted",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2801;
    add_int_1490201(s_11228404, s_11228404_Idx, x_11228405);
  framePtr = F.prev;

  
}
function HEX24_11400128(x_11400131) {
  var result_11400132 = [null];

  var F={procname:"$.$",prev:framePtr,filename:"dollars.nim",line:0};
  framePtr = F;
    F.line = 77;
    result_11400132[0] = nimCopy(null, makeNimstrLit("("), NTI1166014);
    F.line = 78;
    var first_element_11400133 = true;
    F.line = 81;
    var count_11400202 = 0;
    if (!(first_element_11400133)) {
    F.line = 83;
    if (result_11400132[0] != null) { result_11400132[0] = (result_11400132[0]).concat(makeNimstrLit(", ")); } else { result_11400132[0] = makeNimstrLit(", "); };
    }
    
    F.line = 88;
    count_11400202 += 1;
    F.line = 94;
    add_quoted_11228401(result_11400132, 0, x_11400131["Field0"]);
    F.line = 95;
    first_element_11400133 = false;
    if (!(first_element_11400133)) {
    F.line = 83;
    if (result_11400132[0] != null) { result_11400132[0] = (result_11400132[0]).concat(makeNimstrLit(", ")); } else { result_11400132[0] = makeNimstrLit(", "); };
    }
    
    F.line = 88;
    count_11400202 += 1;
    F.line = 94;
    add_quoted_11228401(result_11400132, 0, x_11400131["Field1"]);
    F.line = 95;
    first_element_11400133 = false;
    if ((count_11400202 == 1)) {
    F.line = 101;
    if (result_11400132[0] != null) { result_11400132[0] = (result_11400132[0]).concat(makeNimstrLit(",")); } else { result_11400132[0] = makeNimstrLit(","); };
    }
    
    F.line = 102;
    if (result_11400132[0] != null) { result_11400132[0] = (result_11400132[0]).concat(makeNimstrLit(")")); } else { result_11400132[0] = makeNimstrLit(")"); };
  framePtr = F.prev;

  return result_11400132[0];

}
function len_11401746(t_11401751) {
  var result_11401752 = 0;

  var F={procname:"len.len",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 491;
    result_11401752 = t_11401751.counter;
  framePtr = F.prev;

  return result_11401752;

}
function HEX24_11227801(x_11227804) {
  var result_11227805 = [null];

  var F={procname:"$.$",prev:framePtr,filename:"dollars.nim",line:0};
  framePtr = F;
    F.line = 77;
    result_11227805[0] = nimCopy(null, makeNimstrLit("("), NTI1166014);
    F.line = 78;
    var first_element_11227806 = true;
    if (!(first_element_11227806)) {
    F.line = 83;
    if (result_11227805[0] != null) { result_11227805[0] = (result_11227805[0]).concat(makeNimstrLit(", ")); } else { result_11227805[0] = makeNimstrLit(", "); };
    }
    
    F.line = 85;
    if (result_11227805[0] != null) { result_11227805[0] = (result_11227805[0]).concat(makeNimstrLit("x")); } else { result_11227805[0] = makeNimstrLit("x"); };
    F.line = 86;
    if (result_11227805[0] != null) { result_11227805[0] = (result_11227805[0]).concat(makeNimstrLit(": ")); } else { result_11227805[0] = makeNimstrLit(": "); };
    F.line = 94;
    add_quoted_11228401(result_11227805, 0, x_11227804["Field0"]);
    F.line = 95;
    first_element_11227806 = false;
    if (!(first_element_11227806)) {
    F.line = 83;
    if (result_11227805[0] != null) { result_11227805[0] = (result_11227805[0]).concat(makeNimstrLit(", ")); } else { result_11227805[0] = makeNimstrLit(", "); };
    }
    
    F.line = 85;
    if (result_11227805[0] != null) { result_11227805[0] = (result_11227805[0]).concat(makeNimstrLit("y")); } else { result_11227805[0] = makeNimstrLit("y"); };
    F.line = 86;
    if (result_11227805[0] != null) { result_11227805[0] = (result_11227805[0]).concat(makeNimstrLit(": ")); } else { result_11227805[0] = makeNimstrLit(": "); };
    F.line = 94;
    add_quoted_11228401(result_11227805, 0, x_11227804["Field1"]);
    F.line = 95;
    first_element_11227806 = false;
    F.line = 102;
    if (result_11227805[0] != null) { result_11227805[0] = (result_11227805[0]).concat(makeNimstrLit(")")); } else { result_11227805[0] = makeNimstrLit(")"); };
  framePtr = F.prev;

  return result_11227805[0];

}
function HEX5BHEX5D_11217292(t_11217298, key_11217299) {
  var result_11217301 = null;
  var result_11217301_Idx = 0;

  var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 257;
    var hcHEX60gensym11115424_11217302 = [0];
    F.line = 258;
    var indexHEX60gensym11115425_11225671 = raw_get_11217303(t_11217298, key_11217299, hcHEX60gensym11115424_11217302, 0);
    if ((0 <= indexHEX60gensym11115425_11225671)) {
    F.line = 259;
    result_11217301 = t_11217298.data[chckIndx(indexHEX60gensym11115425_11225671, 0, (t_11217298.data != null ? t_11217298.data.length : 0)+0-1)-0]; result_11217301_Idx = "Field2";
    }
    else {
      F.line = 262;
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(HEX24_11227801(key_11217299) || []), parent: null, m_type: NTI1172045, name: null, trace: null, up: null}, "KeyError");
    }
    
  framePtr = F.prev;

  return [result_11217301, result_11217301_Idx];

}
function is_none_11260884(self_11260888) {
  var result_11260889 = false;

  var F={procname:"isNone.isNone",prev:framePtr,filename:"options.nim",line:0};
  framePtr = F;
    F.line = 158;
    result_11260889 = !(self_11260888.has);
  framePtr = F.prev;

  return result_11260889;

}
function HEX2B_11216039(a_11216041, b_11216042) {
  var result_11216043 = {Field0: 0, Field1: 0};

  var F={procname:"vecs.+",prev:framePtr,filename:"vecs.nim",line:0};
  framePtr = F;
    F.line = 9;
    result_11216043.Field0 = addInt(a_11216041.Field0, b_11216042.Field0);
    F.line = 10;
    result_11216043.Field1 = addInt(a_11216041.Field1, b_11216042.Field1);
  framePtr = F.prev;

  return result_11216043;

}
function contains_11245129(s_11245135, value_11245136) {
  var result_11245137 = false;

  var F={procname:"contains.contains",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 766;
    result_11245137 = ((s_11245135.a <= value_11245136) && (value_11245136 <= s_11245135.b));
  framePtr = F.prev;

  return result_11245137;

}
function HEX2EHEX2E_3335220(a_3335225, b_3335227) {
  var result_3335229 = ({a: 0, b: 0});

  var F={procname:".....",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 469;
    nimCopy(result_3335229, {a: a_3335225, b: b_3335227}, NTI2456907);
  framePtr = F.prev;

  return result_3335229;

}
function has_key_11235127(t_11235132, key_11235133) {
  var result_11235134 = false;

  var F={procname:"hasKey.hasKey",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 395;
    var hc_11235135 = [0];
    F.line = 396;
    result_11235134 = (0 <= raw_get_11217303(t_11235132, key_11235133, hc_11235135, 0));
  framePtr = F.prev;

  return result_11235134;

}
function contains_11235117(t_11235122, key_11235123) {
  var result_11235124 = false;

  var F={procname:"contains.contains",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 406;
    result_11235124 = has_key_11235127(t_11235122, key_11235123);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_11235124;

}
function HEX3DHEX3D_11285646(x_11285650, y_11285652) {
  var result_11285653 = false;

  var F={procname:"==.==",prev:framePtr,filename:"comparisons.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 301;
    var same_object_11286201 = false;
    F.line = 302;
    same_object_11286201 = x_11285650 === y_11285652
    if (same_object_11286201) {
    F.line = 303;
    result_11285653 = true;
    break BeforeRet;
    }
    
    if (!(((x_11285650 != null ? x_11285650.length : 0) == (y_11285652 != null ? y_11285652.length : 0)))) {
    F.line = 310;
    result_11285653 = false;
    break BeforeRet;
    }
    
    L1: do {
      F.line = 312;
      var i_11286624 = 0;
      F.line = 66;
      var colontmp__13471065 = 0;
      F.line = 312;
      colontmp__13471065 = subInt((x_11285650 != null ? x_11285650.length : 0), 1);
      F.line = 77;
      var res_13471066 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_13471066 <= colontmp__13471065)) break L3;
            F.line = 312;
            i_11286624 = res_13471066;
            if (!(HEX3DHEX3D_11225583(x_11285650[chckIndx(i_11286624, 0, (x_11285650 != null ? x_11285650.length : 0)+0-1)-0], y_11285652[chckIndx(i_11286624, 0, (y_11285652 != null ? y_11285652.length : 0)+0-1)-0]))) {
            F.line = 314;
            result_11285653 = false;
            break BeforeRet;
            }
            
            F.line = 80;
            res_13471066 = addInt(res_13471066, 1);
          }
      } while(false);
    } while(false);
    F.line = 316;
    result_11285653 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_11285653;

}
function update_vec_moves_11217143(here_11217145, vectors_11217147) {
    var Tmp1;
              var Tmp5;
                var Tmp6;
                var Tmp7;
            var Tmp8;
            var Tmp9;

  var F={procname:"chess.updateVecMoves",prev:framePtr,filename:"chess.nim",line:0};
  framePtr = F;
    F.line = 19;
    (Tmp1 = HEX5BHEX5D_11217292(pieces_11217056[0], here_11217145), Tmp1)[0][Tmp1[1]].validMoves = nimCopy(null, [], NTI11230072);
    L2: do {
      F.line = 20;
      var vec_11230103 = {Field0: 0, Field1: 0};
      F.line = 3;
      var i_13471073 = 0;
      L3: do {
        F.line = 4;
          L4: while (true) {
          if (!(i_13471073 < (vectors_11217147 != null ? vectors_11217147.length : 0))) break L4;
            F.line = 20;
            nimCopy(vec_11230103, vectors_11217147[chckIndx(i_13471073, 0, (vectors_11217147 != null ? vectors_11217147.length : 0)+0-1)-0], NTI11216003);
            F.line = 21;
            var dest_11230104 = HEX2B_11216039(here_11217145, vec_11230103);
              if (!(contains_11235117(pieces_11217056[0], dest_11230104))) Tmp5 = true; else {                Tmp5 = !(((Tmp6 = HEX5BHEX5D_11217292(pieces_11217056[0], dest_11230104), Tmp6)[0][Tmp6[1]].team == (Tmp7 = HEX5BHEX5D_11217292(pieces_11217056[0], here_11217145), Tmp7)[0][Tmp7[1]].team));              }            if (Tmp5) {
            F.line = 23;
            var Tmp10 = nimCopy(null, dest_11230104, NTI11216003);
            if ((Tmp9 = (Tmp8 = HEX5BHEX5D_11217292(pieces_11217056[0], here_11217145), Tmp8)[0][Tmp8[1]].validMoves, Tmp9) != null) { Tmp9.push(Tmp10); } else { Tmp9 = [Tmp10]; };
            }
            
            F.line = 6;
            i_13471073 = addInt(i_13471073, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function update_dir_moves_11240503(here_11240505, directions_11240507) {
    var Tmp1;
                    var Tmp7;
                    var Tmp8;
                  var Tmp9;
                  var Tmp10;
                    var Tmp12;
                    var Tmp13;

  var F={procname:"chess.updateDirMoves",prev:framePtr,filename:"chess.nim",line:0};
  framePtr = F;
    F.line = 26;
    (Tmp1 = HEX5BHEX5D_11217292(pieces_11217056[0], here_11240505), Tmp1)[0][Tmp1[1]].validMoves = nimCopy(null, [], NTI11240676);
    L2: do {
      F.line = 27;
      var dir_11240682 = {Field0: 0, Field1: 0};
      F.line = 3;
      var i_13471077 = 0;
      L3: do {
        F.line = 4;
          L4: while (true) {
          if (!(i_13471077 < (directions_11240507 != null ? directions_11240507.length : 0))) break L4;
            F.line = 27;
            nimCopy(dir_11240682, directions_11240507[chckIndx(i_13471077, 0, (directions_11240507 != null ? directions_11240507.length : 0)+0-1)-0], NTI11216003);
            F.line = 28;
            var dest_11240683 = HEX2B_11216039(here_11240505, dir_11240682);
            L5: do {
              F.line = 29;
                L6: while (true) {
                if (!(contains_11245129(HEX2EHEX2E_3335220(0, 7), dest_11240683.Field0) && contains_11245129(HEX2EHEX2E_3335220(0, 7), dest_11240683.Field1))) break L6;
                  if (contains_11235117(pieces_11217056[0], dest_11240683)) {
                  if (!(((Tmp7 = HEX5BHEX5D_11217292(pieces_11217056[0], dest_11240683), Tmp7)[0][Tmp7[1]].team == (Tmp8 = HEX5BHEX5D_11217292(pieces_11217056[0], here_11240505), Tmp8)[0][Tmp8[1]].team))) {
                  F.line = 32;
                  var Tmp11 = nimCopy(null, dest_11240683, NTI11216003);
                  if ((Tmp10 = (Tmp9 = HEX5BHEX5D_11217292(pieces_11217056[0], here_11240505), Tmp9)[0][Tmp9[1]].validMoves, Tmp10) != null) { Tmp10.push(Tmp11); } else { Tmp10 = [Tmp11]; };
                  }
                  
                  F.line = 33;
                  break L5;
                  }
                  else {
                    F.line = 35;
                    var Tmp14 = nimCopy(null, dest_11240683, NTI11216003);
                  if ((Tmp13 = (Tmp12 = HEX5BHEX5D_11217292(pieces_11217056[0], here_11240505), Tmp12)[0][Tmp12[1]].validMoves, Tmp13) != null) { Tmp13.push(Tmp14); } else { Tmp13 = [Tmp14]; };
                  }
                  
                  F.line = 36;
                  nimCopy(dest_11240683, HEX2B_11216039(dest_11240683, dir_11240682), NTI11216003);
                }
            } while(false);
            F.line = 6;
            i_13471077 = addInt(i_13471077, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function HEX26_11290311(x_11290315, y_11290317) {
  var result_11290319 = null;

  var F={procname:"&.&",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 1599;
    result_11290319 = new Array(chckRange(addInt((x_11290315 != null ? x_11290315.length : 0), (y_11290317 != null ? y_11290317.length : 0)), 0, 2147483647)); for (var i=0;i<chckRange(addInt((x_11290315 != null ? x_11290315.length : 0), (y_11290317 != null ? y_11290317.length : 0)), 0, 2147483647);++i) {result_11290319[i]={Field0: 0, Field1: 0};}    L1: do {
      F.line = 1600;
      var i_11290350 = 0;
      F.line = 66;
      var colontmp__13471080 = 0;
      F.line = 1600;
      colontmp__13471080 = subInt((x_11290315 != null ? x_11290315.length : 0), 1);
      F.line = 77;
      var res_13471081 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_13471081 <= colontmp__13471080)) break L3;
            F.line = 1600;
            i_11290350 = res_13471081;
            F.line = 1601;
            nimCopy(result_11290319[chckIndx(i_11290350, 0, (result_11290319 != null ? result_11290319.length : 0)+0-1)-0], x_11290315[chckIndx(i_11290350, 0, (x_11290315 != null ? x_11290315.length : 0)+0-1)-0], NTI11260653);
            F.line = 80;
            res_13471081 = addInt(res_13471081, 1);
          }
      } while(false);
    } while(false);
    L4: do {
      F.line = 1602;
      var i_11290364 = 0;
      F.line = 66;
      var colontmp__13471087 = 0;
      F.line = 1602;
      colontmp__13471087 = subInt((y_11290317 != null ? y_11290317.length : 0), 1);
      F.line = 77;
      var res_13471088 = 0;
      L5: do {
        F.line = 78;
          L6: while (true) {
          if (!(res_13471088 <= colontmp__13471087)) break L6;
            F.line = 1602;
            i_11290364 = res_13471088;
            F.line = 1603;
            nimCopy(result_11290319[chckIndx(addInt(i_11290364, (x_11290315 != null ? x_11290315.length : 0)), 0, (result_11290319 != null ? result_11290319.length : 0)+0-1)-0], y_11290317[chckIndx(i_11290364, 0, (y_11290317 != null ? y_11290317.length : 0)+0-1)-0], NTI11260653);
            F.line = 80;
            res_13471088 = addInt(res_13471088, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_11290319;

}
function update_valid_moves_11260649(here_11260651) {
    var Tmp1;
    var Tmp2;
      var Tmp3;
        var Tmp4;
        var Tmp5;
          var Tmp6;
          var Tmp7;
      var Tmp8;
      var Tmp9;
        var Tmp11;
          var Tmp12;
          var Tmp13;
      var Tmp14;
      var Tmp15;
        var Tmp17;
        var Tmp18;
      var Tmp19;
      var Tmp20;

  var F={procname:"chess.updateValidMoves",prev:framePtr,filename:"chess.nim",line:0};
  framePtr = F;
    F.line = 41;
    (Tmp1 = HEX5BHEX5D_11217292(pieces_11217056[0], here_11260651), Tmp1)[0][Tmp1[1]].validMoves = nimCopy(null, [], NTI11260868);
    if (is_none_11260884(winner_11217076[0])) {
    F.line = 43;
    switch ((Tmp2 = HEX5BHEX5D_11217292(pieces_11217056[0], here_11260651), Tmp2)[0][Tmp2[1]].kind) {
    case 0:
      F.line = 45;
      if (((Tmp4 = HEX5BHEX5D_11217292(pieces_11217056[0], here_11260651), Tmp4)[0][Tmp4[1]].team == 1)) {
      Tmp3 = 1;
      }
      else {
      Tmp3 = -1;
      }
      
      var forward_11261330 = HEX2B_11216039(here_11260651, {Field0: 0, Field1: Tmp3});
      if (contains_11245129(HEX2EHEX2E_3335220(0, 7), forward_11261330.Field1)) {
      F.line = 47;
      var left_11265140 = HEX2B_11216039(forward_11261330, {Field0: 1, Field1: 0});
      F.line = 48;
      var right_11265144 = HEX2B_11216039(forward_11261330, {Field0: -1, Field1: 0});
        if (!contains_11235117(pieces_11217056[0], left_11265140)) Tmp5 = false; else {          Tmp5 = !(((Tmp6 = HEX5BHEX5D_11217292(pieces_11217056[0], left_11265140), Tmp6)[0][Tmp6[1]].team == (Tmp7 = HEX5BHEX5D_11217292(pieces_11217056[0], here_11260651), Tmp7)[0][Tmp7[1]].team));        }      if (Tmp5) {
      F.line = 50;
      var Tmp10 = nimCopy(null, left_11265140, NTI11216003);
      if ((Tmp9 = (Tmp8 = HEX5BHEX5D_11217292(pieces_11217056[0], here_11260651), Tmp8)[0][Tmp8[1]].validMoves, Tmp9) != null) { Tmp9.push(Tmp10); } else { Tmp9 = [Tmp10]; };
      }
      
        if (!contains_11235117(pieces_11217056[0], right_11265144)) Tmp11 = false; else {          Tmp11 = !(((Tmp12 = HEX5BHEX5D_11217292(pieces_11217056[0], right_11265144), Tmp12)[0][Tmp12[1]].team == (Tmp13 = HEX5BHEX5D_11217292(pieces_11217056[0], here_11260651), Tmp13)[0][Tmp13[1]].team));        }      if (Tmp11) {
      F.line = 52;
      var Tmp16 = nimCopy(null, right_11265144, NTI11216003);
      if ((Tmp15 = (Tmp14 = HEX5BHEX5D_11217292(pieces_11217056[0], here_11260651), Tmp14)[0][Tmp14[1]].validMoves, Tmp15) != null) { Tmp15.push(Tmp16); } else { Tmp15 = [Tmp16]; };
      }
      
        if (!HEX3DHEX3D_11285646((Tmp18 = HEX5BHEX5D_11217292(pieces_11217056[0], here_11260651), Tmp18)[0][Tmp18[1]].validMoves, [])) Tmp17 = false; else {          Tmp17 = !(contains_11235117(pieces_11217056[0], forward_11261330));        }      if (Tmp17) {
      F.line = 54;
      var Tmp21 = nimCopy(null, forward_11261330, NTI11216003);
      if ((Tmp20 = (Tmp19 = HEX5BHEX5D_11217292(pieces_11217056[0], here_11260651), Tmp19)[0][Tmp19[1]].validMoves, Tmp20) != null) { Tmp20.push(Tmp21); } else { Tmp20 = [Tmp21]; };
      }
      
      }
      
      break;
    case 3:
      F.line = 56;
      update_vec_moves_11217143(here_11260651, [{Field0: 2, Field1: 1}, {Field0: -2, Field1: 1}, {Field0: 2, Field1: -1}, {Field0: -2, Field1: -1}, {Field0: 1, Field1: 2}, {Field0: 1, Field1: -2}, {Field0: -1, Field1: 2}, {Field0: -1, Field1: -2}]);
      break;
    case 2:
      F.line = 58;
      update_dir_moves_11240503(here_11260651, [{Field0: 1, Field1: 1}, {Field0: 1, Field1: -1}, {Field0: -1, Field1: 1}, {Field0: -1, Field1: -1}]);
      break;
    case 1:
      F.line = 60;
      update_dir_moves_11240503(here_11260651, [{Field0: 1, Field1: 0}, {Field0: -1, Field1: 0}, {Field0: 0, Field1: 1}, {Field0: 0, Field1: -1}]);
      break;
    case 5:
      F.line = 62;
      update_dir_moves_11240503(here_11260651, HEX26_11290311(rook_moves_11260675, bishop_moves_11260699));
      break;
    case 4:
      F.line = 64;
      update_vec_moves_11217143(here_11260651, HEX26_11290311(rook_moves_11260675, bishop_moves_11260699));
      break;
    }
    }
    
  framePtr = F.prev;

  
}
function reset_chess_11290434() {
            var Tmp4;
                    var Tmp8;
                    var Tmp9;

  var F={procname:"chess.resetChess",prev:framePtr,filename:"chess.nim",line:0};
  framePtr = F;
    F.line = 67;
    current_team_11217057[0] = 0;
    F.line = 68;
    reset_11290436(winner_11217076[0]);
    F.line = 69;
    clear_11290569(pieces_11217056[0]);
    L1: do {
      F.line = 70;
      var y_11296243 = 0;
      F.line = 17;
      var i_13471025 = 0;
      if ((i_13471025 <= 3)) {
      L2: do {
        F.line = 19;
          L3: while (true) {
          if (!true) break L3;
            F.line = 70;
            y_11296243 = (Tmp4 = [0, 1, 6, 7], Tmp4)[chckIndx(i_13471025, 0, (Tmp4 != null ? Tmp4.length : 0)+0-1)-0];
            L5: do {
              F.line = 71;
              var x_11296252 = 0;
              F.line = 106;
              var i_13471019 = 0;
              L6: do {
                F.line = 107;
                  L7: while (true) {
                  if (!(i_13471019 < 8)) break L7;
                    F.line = 71;
                    x_11296252 = i_13471019;
                    F.line = 72;
                    var piece_11296253 = {team: 0, kind: 0, validMoves: null};
                    F.line = 73;
                    HEX5BHEX5DHEX3D_11296364(pieces_11217056[0], {Field0: x_11296252, Field1: y_11296243}, piece_11296253);
                    F.line = 74;
                    if (contains_11380121([0, 1], y_11296243)) {
                    Tmp8 = 1;
                    }
                    else {
                    Tmp8 = 0;
                    }
                    
                    piece_11296253.team = Tmp8;
                    F.line = 76;
                    if (contains_11380121([1, 6], y_11296243)) {
                    Tmp9 = 0;
                    }
                    else {
                    if (contains_11380121([0, 7], x_11296252)) {
                    Tmp9 = 1;
                    }
                    else {
                    if (contains_11380121([1, 6], x_11296252)) {
                    Tmp9 = 3;
                    }
                    else {
                    if (contains_11380121([2, 5], x_11296252)) {
                    Tmp9 = 2;
                    }
                    else {
                    if ((x_11296252 == 3)) {
                    Tmp9 = 4;
                    }
                    else {
                    if ((x_11296252 == 4)) {
                    Tmp9 = 5;
                    }
                    else {
                      F.line = 82;
                    Tmp9 = raise_assert_1267614(HEX24_11400128({Field0: x_11296252, Field1: y_11296243}));
                    }
                    }}}}}
                    piece_11296253.kind = Tmp9;
                    F.line = 109;
                    i_13471019 = addInt(i_13471019, 1);
                  }
              } while(false);
            } while(false);
            if ((3 <= i_13471025)) {
            F.line = 21;
            break L2;
            }
            
            F.line = 22;
            i_13471025 = addInt(i_13471025, 1);
          }
      } while(false);
      }
      
    } while(false);
    L10: do {
      F.line = 83;
      var pos_11410214 = {Field0: 0, Field1: 0};
      F.line = 707;
      var l_13471035 = len_11401746(pieces_11217056[0]);
      L11: do {
        F.line = 708;
        var h_13471037 = 0;
        F.line = 66;
        var colontmp__13471038 = 0;
        F.line = 708;
        colontmp__13471038 = (pieces_11217056[0].data != null ? (pieces_11217056[0].data.length-1) : -1);
        F.line = 77;
        var res_13471039 = 0;
        L12: do {
          F.line = 78;
            L13: while (true) {
            if (!(res_13471039 <= colontmp__13471038)) break L13;
              F.line = 708;
              h_13471037 = res_13471039;
              if (is_filled_11112018(pieces_11217056[0].data[chckIndx(h_13471037, 0, (pieces_11217056[0].data != null ? pieces_11217056[0].data.length : 0)+0-1)-0].Field0)) {
              F.line = 83;
              nimCopy(pos_11410214, pieces_11217056[0].data[chckIndx(h_13471037, 0, (pieces_11217056[0].data != null ? pieces_11217056[0].data.length : 0)+0-1)-0].Field1, NTI11216003);
              F.line = 84;
              update_valid_moves_11260649(pos_11410214);
              if (!((len_11401746(pieces_11217056[0]) == l_13471035))) {
              F.line = 711;
              failed_assert_impl_1267680(makeNimstrLit("/home/dk/.choosenim/toolchains/nim-1.2.6/lib/pure/collections/tables.nim(711, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 80;
              res_13471039 = addInt(res_13471039, 1);
            }
        } while(false);
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function rand_11475243(r_11475246, max_11475247) {
  var result_11475248 = 0;

  var F={procname:"random.rand",prev:framePtr,filename:"random.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if ((max_11475247 == 0)) {
    F.line = 247;
    break BeforeRet;
    }
    
    L1: do {
      F.line = 248;
        L2: while (true) {
        if (!true) break L2;
          F.line = 249;
          var x_11475249 = next_11472258(r_11475246);
          if ((x_11475249 <= ((4294967295 - (4294967295 % max_11475247)) >>> 0))) {
          F.line = 251;
          result_11475248 = chckRange((x_11475249 % ((max_11475247 + 1) )), -2147483648, 2147483647);
          break BeforeRet;
          }
          
        }
    } while(false);
  } while (false);
  framePtr = F.prev;

  return result_11475248;

}
function rand_11475263(max_11475265) {
  var result_11475266 = 0;

  var F={procname:"random.rand",prev:framePtr,filename:"random.nim",line:0};
  framePtr = F;
    F.line = 254;
    result_11475266 = rand_11475243(state_11472005[0], chckRange(max_11475265, 0, 2147483647));
  framePtr = F.prev;

  return result_11475266;

}
function find_11430163(a_11430167, item_11430168) {
  var result_11430169 = 0;

  var F={procname:"find.find",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    L1: do {
      F.line = 1751;
      var i_11430175 = {Field0: 0, Field1: 0};
      F.line = 3;
      var i_13471100 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_13471100 < (a_11430167 != null ? a_11430167.length : 0))) break L3;
            F.line = 1751;
            nimCopy(i_11430175, a_11430167[chckIndx(i_13471100, 0, (a_11430167 != null ? a_11430167.length : 0)+0-1)-0], NTI11216003);
            if (HEX3DHEX3D_11225583(i_11430175, item_11430168)) {
            F.line = 1752;
            break BeforeRet;
            }
            
            F.line = 1753;
            result_11430169 = addInt(result_11430169, 1);
            F.line = 6;
            i_13471100 = addInt(i_13471100, 1);
          }
      } while(false);
    } while(false);
    F.line = 1754;
    result_11430169 = -1;
  } while (false);
  framePtr = F.prev;

  return result_11430169;

}
function contains_11430156(a_11430160, item_11430161) {
  var result_11430162 = false;

  var F={procname:"contains.contains",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1768;
    result_11430162 = (0 <= find_11430163(a_11430160, item_11430161));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_11430162;

}
function raw_get_12450064(t_12450068, key_12450069, hc_12450070, hc_12450070_Idx) {
            var Tmp3;

  var result_12450071 = 0;

  var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 63;
    hc_12450070[hc_12450070_Idx] = hash_11220001(key_12450069);
    if ((hc_12450070[hc_12450070_Idx] == 0)) {
    F.line = 65;
    hc_12450070[hc_12450070_Idx] = 314159265;
    }
    
    if (((t_12450068.data != null ? t_12450068.data.length : 0) == 0)) {
    F.line = 47;
    result_12450071 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_12460060 = (hc_12450070[hc_12450070_Idx] & (t_12450068.data != null ? (t_12450068.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_12263418(t_12450068.data[chckIndx(h_12460060, 0, (t_12450068.data != null ? t_12450068.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_12450068.data[chckIndx(h_12460060, 0, (t_12450068.data != null ? t_12450068.data.length : 0)+0-1)-0].Field0 == hc_12450070[hc_12450070_Idx])) Tmp3 = false; else {              Tmp3 = HEX3DHEX3D_11225583(t_12450068.data[chckIndx(h_12460060, 0, (t_12450068.data != null ? t_12450068.data.length : 0)+0-1)-0].Field1, key_12450069);            }          if (Tmp3) {
          F.line = 55;
          result_12450071 = h_12460060;
          break BeforeRet;
          }
          
          F.line = 56;
          h_12460060 = next_try_12265014(h_12460060, (t_12450068.data != null ? (t_12450068.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_12450071 = subInt(-1, h_12460060);
  } while (false);
  framePtr = F.prev;

  return result_12450071;

}
function contains_12450039(s_12450043, key_12450044) {
  var result_12450045 = false;

  var F={procname:"contains.contains",prev:framePtr,filename:"sets.nim",line:0};
  framePtr = F;
    F.line = 171;
    var hc_12450046 = [0];
    F.line = 172;
    var index_12460140 = raw_get_12450064(s_12450043, key_12450044, hc_12450046, 0);
    F.line = 173;
    result_12450045 = (0 <= index_12460140);
  framePtr = F.prev;

  return result_12450045;

}
function reset_fruit_12435674() {
            var Tmp3;
            var Tmp4;

  var F={procname:"snake.resetFruit",prev:framePtr,filename:"snake.nim",line:0};
  framePtr = F;
    L1: do {
      F.line = 20;
        L2: while (true) {
        if (!true) break L2;
          F.line = 21;
          var pos_12435677 = {Field0: rand_11475263(subInt(grid_size_12351015, 1)), Field1: rand_11475263(subInt(grid_size_12351015, 1))};
            if (!!(HEX3DHEX3D_11450319(pos_12435677, fruit_pos_12435574[0]))) Tmp4 = false; else {              Tmp4 = !(contains_11430156(snake_12435573[0], pos_12435677));            }            if (!Tmp4) Tmp3 = false; else {              Tmp3 = !(contains_12450039(walls_12435571, pos_12435677));            }          if (Tmp3) {
          F.line = 23;
          nimCopy(fruit_pos_12435574[0], pos_12435677, NTI11216003);
          F.line = 24;
          break L1;
          }
          
        }
    } while(false);
  framePtr = F.prev;

  
}
function reset_state_12460167() {
  var F={procname:"snake.resetState",prev:framePtr,filename:"snake.nim",line:0};
  framePtr = F;
    F.line = 27;
    snake_12435573[0] = nimCopy(null, [{Field0: 5, Field1: 5}, {Field0: 6, Field1: 5}, {Field0: 7, Field1: 5}], NTI12460188);
    F.line = 28;
    var colontmp__13471093 = 1;
    F.line = 28;
    var colontmp__13471094 = 0;
    F.line = 28;
    nimCopy(prev_vec_12435576[0], {Field0: colontmp__13471093, Field1: colontmp__13471094}, NTI11216003);
    F.line = 29;
    reset_fruit_12435674();
    F.line = 30;
    game_over_12435575[0] = false;
  framePtr = F.prev;

  
}
randomize_12262001();
reset_chess_11290434();
reset_state_12460167();
function rand_13525125() {
  var result_13525130 = 0;

  var F={procname:"rand.rand",prev:framePtr,filename:"random.nim",line:0};
  framePtr = F;
    F.line = 396;
    result_13525130 = next_11472258(state_11472005[0]);
  framePtr = F.prev;

  return result_13525130;

}
var todo_items_13525237 = [[{str: "Obudzić się", id: toJSStr(cstrToNimstr((rand_13525125())+"")), done: false}, {str: "Zrobić zakupy", id: toJSStr(cstrToNimstr((rand_13525125())+"")), done: false}, {str: "Zapłacić rachunki", id: toJSStr(cstrToNimstr((rand_13525125())+"")), done: false}]];
function new_seq_13380012(len_13380015) {
  var result_13380017 = null;

  var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 643;
    result_13380017 = new Array(len_13380015); for (var i=0;i<len_13380015;++i) {result_13380017[i]=({k: 0, parent: null, current: null, newNode: null, oldNode: null});}  framePtr = F.prev;

  return result_13380017;

}
function new_seq_13380064(len_13380067) {
  var result_13380069 = null;

  var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 643;
    result_13380069 = new Array(len_13380067); for (var i=0;i<len_13380067;++i) {result_13380069[i]=({parent: null, newChild: null, pos: 0});}  framePtr = F.prev;

  return result_13380069;

}
function valueHEX3D_12535143(n_12535145, v_12535146) {
  var F={procname:"vdom.value=",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 166;
    n_12535145.text = v_12535146;
  framePtr = F.prev;

  
}
function value_12535126(n_12535128) {
  var result_12535129 = null;

  var F={procname:"vdom.value",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 165;
    result_12535129 = n_12535128.text;
  framePtr = F.prev;

  return result_12535129;

}
function add_event_shell_12822375(d_12822377, name_12822378, h_12822379) {
  var F={procname:"karax.addEventShell",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 89;
    d_12822377.addEventListener(name_12822378, h_12822379, false);
    if ((d_12822377.karaxEvents == null)) {
    F.line = 91;
    d_12822377.karaxEvents = new Array(0);
    }
    
    F.line = 92;
    d_12822377.karaxEvents.push({Field0: name_12822378, Field1: h_12822379});
  framePtr = F.prev;

  
}
function wrap_event_12825097(d_12825099, n_12825100, k_12825101, action_12825102) {
      function later_wrapper_12895027() {
          function HEX3Aanonymous_12895033(ev_12895035) {
              function wrapper_12895036() {
                var F={procname:":anonymous.wrapper",prev:framePtr,filename:"karax.nim",line:0};
                framePtr = F;
                  F.line = 72;
                  var vHEX60gensym12895038_12905001 = ev_12895035.target.value;
                  F.line = 73;
                  valueHEX3D_12535143(n_12895031, vHEX60gensym12895038_12905001);
                  if (!(!((action_12895030 == null)))) {
                  F.line = 74;
                  failed_assert_impl_1267680(makeNimstrLit("/home/dk/Documents/nim/dawkot/karax/karax/karax.nim(74, 10) `action != nil` "));
                  }
                  
                  F.line = 75;
                  action_12895030(ev_12895035, n_12895031);
                  if (!((value_12535126(n_12895031) == vHEX60gensym12895038_12905001))) {
                  F.line = 77;
                  ev_12895035.target.value = value_12535126(n_12895031);
                  }
                  
                framePtr = F.prev;

                
              }

            var F={procname:"laterWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
            framePtr = F;
              if (!((timer_12895032 == null))) {
              F.line = 121;
              clearTimeout(timer_12895032);
              }
              
              F.line = 122;
              timer_12895032 = setTimeout(wrapper_12895036, 400);
            framePtr = F.prev;

            
          }

        var result_12895029 = null;

        var F={procname:"wrapEvent.laterWrapper",prev:framePtr,filename:"karax.nim",line:0};
        framePtr = F;
          F.line = 116;
          var action_12895030 = action_12825102;
          F.line = 117;
          var n_12895031 = n_12825100;
          F.line = 118;
          var timer_12895032 = null;
          F.line = 119;
          result_12895029 = HEX3Aanonymous_12895033;
        framePtr = F.prev;

        return result_12895029;

      }
      function enter_wrapper_12860027() {
          function HEX3Aanonymous_12860032(ev_12860034) {
            var F={procname:"enterWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
            framePtr = F;
              if ((ev_12860034.keyCode == 13)) {
              F.line = 72;
              var vHEX60gensym12860035_12870001 = ev_12860034.target.value;
              F.line = 73;
              valueHEX3D_12535143(n_12860031, vHEX60gensym12860035_12870001);
              if (!(!((action_12860030 == null)))) {
              F.line = 74;
              failed_assert_impl_1267680(makeNimstrLit("/home/dk/Documents/nim/dawkot/karax/karax/karax.nim(74, 10) `action != nil` "));
              }
              
              F.line = 75;
              action_12860030(ev_12860034, n_12860031);
              if (!((value_12535126(n_12860031) == vHEX60gensym12860035_12870001))) {
              F.line = 77;
              ev_12860034.target.value = value_12535126(n_12860031);
              }
              
              }
              
            framePtr = F.prev;

            
          }

        var result_12860029 = null;

        var F={procname:"wrapEvent.enterWrapper",prev:framePtr,filename:"karax.nim",line:0};
        framePtr = F;
          F.line = 110;
          var action_12860030 = action_12825102;
          F.line = 111;
          var n_12860031 = n_12825100;
          F.line = 112;
          result_12860029 = HEX3Aanonymous_12860032;
        framePtr = F.prev;

        return result_12860029;

      }
      function std_wrapper_12825104() {
          function HEX3Aanonymous_12825109(ev_12825111) {
                var Tmp1;
                var Tmp2;

            var F={procname:"stdWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
            framePtr = F;
                if ((n_12825108.kind == 111)) Tmp2 = true; else {                  Tmp2 = (n_12825108.kind == 105);                }                if (Tmp2) Tmp1 = true; else {                  Tmp1 = (n_12825108.kind == 107);                }              if (Tmp1) {
              F.line = 72;
              var vHEX60gensym12825130_12835001 = ev_12825111.target.value;
              F.line = 73;
              valueHEX3D_12535143(n_12825108, vHEX60gensym12825130_12835001);
              if (!(!((action_12825107 == null)))) {
              F.line = 74;
              failed_assert_impl_1267680(makeNimstrLit("/home/dk/Documents/nim/dawkot/karax/karax/karax.nim(74, 10) `action != nil` "));
              }
              
              F.line = 75;
              action_12825107(ev_12825111, n_12825108);
              if (!((value_12535126(n_12825108) == vHEX60gensym12825130_12835001))) {
              F.line = 77;
              ev_12825111.target.value = value_12535126(n_12825108);
              }
              
              }
              else {
                F.line = 107;
              action_12825107(ev_12825111, n_12825108);
              }
              
            framePtr = F.prev;

            
          }

        var result_12825106 = null;

        var F={procname:"wrapEvent.stdWrapper",prev:framePtr,filename:"karax.nim",line:0};
        framePtr = F;
          F.line = 102;
          var action_12825107 = action_12825102;
          F.line = 103;
          var n_12825108 = n_12825100;
          F.line = 104;
          result_12825106 = HEX3Aanonymous_12825109;
        framePtr = F.prev;

        return result_12825106;

      }

  var result_12825103 = null;

  var F={procname:"karax.wrapEvent",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 124;
    switch (k_12825101) {
    case 31:
      F.line = 126;
      result_12825103 = later_wrapper_12895027();
      F.line = 127;
      add_event_shell_12822375(d_12825099, "keyup", result_12825103);
      break;
    case 30:
      F.line = 129;
      result_12825103 = enter_wrapper_12860027();
      F.line = 130;
      add_event_shell_12822375(d_12825099, "keyup", result_12825103);
      break;
    default: 
      F.line = 132;
      result_12825103 = std_wrapper_12825104();
      F.line = 133;
      add_event_shell_12822375(d_12825099, to_event_name_12535012[chckIndx(k_12825101, 0, (to_event_name_12535012 != null ? to_event_name_12535012.length : 0)+0-1)-0], result_12825103);
      break;
    }
  framePtr = F.prev;

  return result_12825103;

}
function apply_events_12935058(n_12935060) {
  var F={procname:"karax.applyEvents",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 145;
    var dest_12935061 = n_12935060.dom;
    L1: do {
      F.line = 146;
      var i_12935074 = 0;
      F.line = 104;
      var colontmp__13560090 = 0;
      F.line = 146;
      colontmp__13560090 = (n_12935060.events != null ? n_12935060.events.length : 0);
      F.line = 106;
      var i_13560091 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_13560091 < colontmp__13560090)) break L3;
            F.line = 146;
            i_12935074 = i_13560091;
            F.line = 147;
            n_12935060.events[chckIndx(i_12935074, 0, (n_12935060.events != null ? n_12935060.events.length : 0)+0-1)-0]["Field2"] = wrap_event_12825097(dest_12935061, n_12935060, n_12935060.events[chckIndx(i_12935074, 0, (n_12935060.events != null ? n_12935060.events.length : 0)+0-1)-0]["Field0"], n_12935060.events[chckIndx(i_12935074, 0, (n_12935060.events != null ? n_12935060.events.length : 0)+0-1)-0]["Field1"]);
            F.line = 109;
            i_13560091 = addInt(i_13560091, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function apply_style_11040425(n_11040427, s_11040428) {
  var F={procname:"vstyles.applyStyle",prev:framePtr,filename:"vstyles.nim",line:0};
  framePtr = F;
    F.line = 299;
    n_11040427.style = {};
    L1: do {
      F.line = 300;
      var i_11040461 = 0;
      F.line = 39;
      var colontmp__13560101 = 0;
      F.line = 300;
      colontmp__13560101 = subInt(s_11040428.length, 1);
      F.line = 56;
      var res_13560102 = 0;
      L2: do {
        F.line = 57;
          L3: while (true) {
          if (!(res_13560102 <= colontmp__13560101)) break L3;
            F.line = 300;
            i_11040461 = res_13560102;
            F.line = 301;
            n_11040427.style[s_11040428[i_11040461]] = s_11040428[addInt(i_11040461, 1)];
            F.line = 59;
            res_13560102 = addInt(res_13560102, 2);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function to_dom_12935139(n_12935141, use_attached_node_12935142, kxi_12935143) {
      var Tmp9;
      var Tmp10;

  var result_12935144 = null;

  var F={procname:"karax.toDom",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (use_attached_node_12935142) {
    if (!((n_12935141.dom == null))) {
    if (!((n_12935141.id == null))) {
    F.line = 158;
    kxi_12935143.byId[n_12935141.id] = n_12935141;
    }
    
    F.line = 159;
    result_12935144 = n_12935141.dom;
    break BeforeRet;
    }
    
    }
    
    if ((n_12935141.kind == 0)) {
    F.line = 161;
    result_12935144 = document.createTextNode(n_12935141.text);
    F.line = 141;
    n_12935141.dom = result_12935144;
    if (!((n_12935141.id == null))) {
    F.line = 142;
    kxi_12822284[0].byId[n_12935141.id] = n_12935141;
    }
    
    }
    else {
    if ((n_12935141.kind == 6)) {
    F.line = 164;
    result_12935144 = document.createElement("div");
    F.line = 165;
    result_12935144.innerHTML = n_12935141.text;
    F.line = 141;
    n_12935141.dom = result_12935144;
    if (!((n_12935141.id == null))) {
    F.line = 142;
    kxi_12822284[0].byId[n_12935141.id] = n_12935141;
    }
    
    F.line = 167;
    break BeforeRet;
    }
    else {
    if ((n_12935141.kind == 3)) {
    F.line = 169;
    var x_12970001 = vcomponents_12701239[0][n_12935141.text](n_12935141.kids);
    F.line = 170;
    result_12935144 = to_dom_12935139(x_12970001, use_attached_node_12935142, kxi_12935143);
    F.line = 141;
    n_12935141.dom = result_12935144;
    if (!((n_12935141.id == null))) {
    F.line = 142;
    kxi_12822284[0].byId[n_12935141.id] = n_12935141;
    }
    
    F.line = 173;
    break BeforeRet;
    }
    else {
    if ((n_12935141.kind == 4)) {
    F.line = 175;
    result_12935144 = n_12935141.dom;
    if (!(!((result_12935144 == null)))) {
    F.line = 176;
    failed_assert_impl_1267680(makeNimstrLit("/home/dk/Documents/nim/dawkot/karax/karax/karax.nim(176, 12) `result != nil` "));
    }
    
    F.line = 141;
    n_12935141.dom = result_12935144;
    if (!((n_12935141.id == null))) {
    F.line = 142;
    kxi_12822284[0].byId[n_12935141.id] = n_12935141;
    }
    
    F.line = 179;
    break BeforeRet;
    }
    else {
    if ((n_12935141.kind == 5)) {
    F.line = 181;
    var x_13005022 = n_12935141;
    if (!((x_13005022.onAttachImpl == null))) {
    F.line = 182;
    x_13005022.onAttachImpl(x_13005022);
    }
    
    if (!(!((x_13005022.renderImpl == null)))) {
    F.line = 183;
    failed_assert_impl_1267680(makeNimstrLit("/home/dk/Documents/nim/dawkot/karax/karax/karax.nim(183, 12) `x.renderImpl != nil` "));
    }
    
    if ((x_13005022.expanded == null)) {
    F.line = 185;
    x_13005022.expanded = x_13005022.renderImpl(x_13005022);
    }
    
    if (!(!((x_13005022.expanded == null)))) {
    F.line = 187;
    failed_assert_impl_1267680(makeNimstrLit("/home/dk/Documents/nim/dawkot/karax/karax/karax.nim(187, 12) `x.expanded != nil` "));
    }
    
    F.line = 188;
    result_12935144 = to_dom_12935139(x_13005022.expanded, use_attached_node_12935142, kxi_12935143);
    F.line = 141;
    n_12935141.dom = result_12935144;
    if (!((n_12935141.id == null))) {
    F.line = 142;
    kxi_12822284[0].byId[n_12935141.id] = n_12935141;
    }
    
    F.line = 190;
    break BeforeRet;
    }
    else {
      F.line = 192;
      result_12935144 = document.createElement(to_tag_12535006[chckIndx(n_12935141.kind, 0, (to_tag_12535006 != null ? to_tag_12535006.length : 0)+0-1)-0]);
      F.line = 141;
      n_12935141.dom = result_12935144;
      if (!((n_12935141.id == null))) {
      F.line = 142;
      kxi_12822284[0].byId[n_12935141.id] = n_12935141;
      }
      
      L1: do {
        F.line = 194;
        var k_13060016 = null;
        L2: do {
          F.line = 292;
          var i_13560070 = 0;
          F.line = 104;
          var colontmp__13560071 = 0;
          F.line = 292;
          colontmp__13560071 = (n_12935141.kids != null ? n_12935141.kids.length : 0);
          F.line = 106;
          var i_13560072 = 0;
          L3: do {
            F.line = 107;
              L4: while (true) {
              if (!(i_13560072 < colontmp__13560071)) break L4;
                F.line = 292;
                i_13560070 = i_13560072;
                F.line = 194;
                k_13060016 = n_12935141.kids[chckIndx(i_13560070, 0, (n_12935141.kids != null ? n_12935141.kids.length : 0)+0-1)-0];
                F.line = 195;
                result_12935144.appendChild(to_dom_12935139(k_13060016, use_attached_node_12935142, kxi_12935143));
                F.line = 109;
                i_13560072 = addInt(i_13560072, 1);
              }
          } while(false);
        } while(false);
      } while(false);
      if (!((n_12935141.text == null))) {
      F.line = 198;
      result_12935144.value = n_12935141.text;
      }
      
    }
    }}}}
    if (!((n_12935141.id == null))) {
    F.line = 200;
    result_12935144.id = n_12935141.id;
    }
    
    if (!((n_12935141.class == null))) {
    F.line = 202;
    result_12935144.className = n_12935141.class;
    }
    
    L5: do {
      F.line = 205;
      var k_13075001 = null;
      F.line = 205;
      var v_13075002 = null;
      L6: do {
        F.line = 295;
        var i_13560083 = 0;
        F.line = 39;
        var colontmp__13560084 = 0;
        F.line = 295;
        colontmp__13560084 = subInt((n_12935141.attrs != null ? n_12935141.attrs.length : 0), 2);
        F.line = 56;
        var res_13560085 = 0;
        L7: do {
          F.line = 57;
            L8: while (true) {
            if (!(res_13560085 <= colontmp__13560084)) break L8;
              F.line = 295;
              i_13560083 = res_13560085;
              F.line = 205;
              k_13075001 = n_12935141.attrs[chckIndx(i_13560083, 0, (n_12935141.attrs != null ? n_12935141.attrs.length : 0)+0-1)-0];
              F.line = 296;
              v_13075002 = n_12935141.attrs[chckIndx(addInt(i_13560083, 1), 0, (n_12935141.attrs != null ? n_12935141.attrs.length : 0)+0-1)-0];
              if (!((v_13075002 == null))) {
              F.line = 207;
              result_12935144.setAttribute(k_13075001, v_13075002);
              }
              
              F.line = 59;
              res_13560085 = addInt(res_13560085, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    F.line = 208;
    apply_events_12935058(n_12935141);
      if (!!((kxi_12935143 == null))) Tmp10 = false; else {        Tmp10 = (n_12935141 == kxi_12935143.toFocusV);      }      if (!Tmp10) Tmp9 = false; else {        Tmp9 = (kxi_12935143.toFocus == null);      }    if (Tmp9) {
    F.line = 210;
    kxi_12935143.toFocus = result_12935144;
    }
    
    if (!((n_12935141.style == null))) {
    F.line = 211;
    apply_style_11040425(result_12935144, n_12935141.style);
    }
    
  } while (false);
  framePtr = F.prev;

  return result_12935144;

}
function replace_by_id_13100074(id_13100076, new_tree_13100077) {
  var F={procname:"karax.replaceById",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 235;
    var x_13100078 = document.getElementById(id_13100076);
    F.line = 236;
    x_13100078.parentNode.replaceChild(new_tree_13100077, x_13100078);
    F.line = 237;
    new_tree_13100077.id = id_13100076;
  framePtr = F.prev;

  
}
function len_12620014(x_12620016) {
  var result_12620017 = 0;

  var F={procname:"vdom.len",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 256;
    result_12620017 = (x_12620016.kids != null ? x_12620016.kids.length : 0);
  framePtr = F.prev;

  return result_12620017;

}
function HEX5BHEX5D_12620036(x_12620038, idx_12620039) {
  var result_12620040 = null;

  var F={procname:"vdom.[]",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 257;
    result_12620040 = x_12620038.kids[chckIndx(idx_12620039, 0, (x_12620038.kids != null ? x_12620038.kids.length : 0)+0-1)-0];
  framePtr = F.prev;

  return result_12620040;

}
function same_13085072(n_13085074, e_13085075, nesting_13085076) {
      var Tmp1;
      var Tmp2;

  var result_13085078 = false;

  var F={procname:"karax.same",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (kxi_12822284[0].orphans.hasOwnProperty(n_13085074.id)) {
    F.line = 214;
    result_13085078 = true;
    break BeforeRet;
    }
    
    if ((n_13085074.kind == 5)) {
    F.line = 216;
    result_13085078 = same_13085072(n_13085074.expanded, e_13085075, addInt(nesting_13085076, 1));
    }
    else {
    if ((n_13085074.kind == 6)) {
    F.line = 218;
    result_13085078 = true;
    }
    else {
      if ((n_13085074.kind == 3)) Tmp1 = true; else {        Tmp1 = (n_13085074.kind == 4);      }    if (Tmp1) {
    F.line = 221;
    result_13085078 = true;
    }
    else {
    if ((to_tag_12535006[chckIndx(n_13085074.kind, 0, (to_tag_12535006 != null ? to_tag_12535006.length : 0)+0-1)-0] == e_13085075.nodeName)) {
    F.line = 223;
    result_13085078 = true;
    if (!((n_13085074.kind == 0))) {
      if (!!((e_13085075.childNodes.length == len_12620014(n_13085074)))) Tmp2 = false; else {        Tmp2 = !((n_13085074.kind == 111));      }    if (Tmp2) {
    F.line = 227;
    rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_12620014(n_13085074))+""), makeNimstrLit(" real "), cstrToNimstr((e_13085075.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_12535006[chckIndx(n_13085074.kind, 0, (to_tag_12535006 != null ? to_tag_12535006.length : 0)+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_13085076)+""));
    F.line = 228;
    result_13085078 = false;
    break BeforeRet;
    }
    
    L3: do {
      F.line = 229;
      var i_13100024 = 0;
      F.line = 104;
      var colontmp__13560108 = 0;
      F.line = 229;
      colontmp__13560108 = len_12620014(n_13085074);
      F.line = 106;
      var i_13560109 = 0;
      L4: do {
        F.line = 107;
          L5: while (true) {
          if (!(i_13560109 < colontmp__13560108)) break L5;
            F.line = 229;
            i_13100024 = i_13560109;
            if (!(same_13085072(HEX5BHEX5D_12620036(n_13085074, i_13100024), e_13085075.childNodes[i_13100024], addInt(nesting_13085076, 1)))) {
            F.line = 230;
            result_13085078 = false;
            break BeforeRet;
            }
            
            F.line = 109;
            i_13560109 = addInt(i_13560109, 1);
          }
      } while(false);
    } while(false);
    }
    
    }
    else {
      F.line = 232;
    rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_12535006[chckIndx(n_13085074.kind, 0, (to_tag_12535006 != null ? to_tag_12535006.length : 0)+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_13085075.nodeName));
    }
    }}}
  } while (false);
  framePtr = F.prev;

  return result_13085078;

}
function eq_11005229(a_11005231, b_11005232) {
  var result_11005233 = false;

  var F={procname:"vstyles.eq",prev:framePtr,filename:"vstyles.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if ((a_11005231 == null)) {
    if ((b_11005232 == null)) {
    F.line = 229;
    result_11005233 = true;
    break BeforeRet;
    }
    else {
      F.line = 230;
      result_11005233 = false;
      break BeforeRet;
    }
    
    }
    else {
    if ((b_11005232 == null)) {
    F.line = 231;
    result_11005233 = false;
    break BeforeRet;
    }
    }
    if (!((a_11005231.length == b_11005232.length))) {
    F.line = 232;
    result_11005233 = false;
    break BeforeRet;
    }
    
    L1: do {
      F.line = 233;
      var i_11010083 = 0;
      F.line = 104;
      var colontmp__13560148 = 0;
      F.line = 233;
      colontmp__13560148 = a_11005231.length;
      F.line = 106;
      var i_13560149 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_13560149 < colontmp__13560148)) break L3;
            F.line = 233;
            i_11010083 = i_13560149;
            if (!((a_11005231[i_11010083] == b_11005232[i_11010083]))) {
            F.line = 234;
            result_11005233 = false;
            break BeforeRet;
            }
            
            F.line = 109;
            i_13560149 = addInt(i_13560149, 1);
          }
      } while(false);
    } while(false);
    F.line = 235;
    result_11005233 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_11005233;

}
function same_attrs_12630879(a_12630881, b_12630882) {
  var result_12630883 = false;

  var F={procname:"vdom.sameAttrs",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((a_12630881.attrs != null ? a_12630881.attrs.length : 0) == (b_12630882.attrs != null ? b_12630882.attrs.length : 0))) {
    F.line = 300;
    result_12630883 = true;
    L1: do {
      F.line = 301;
      var i_12630906 = 0;
      F.line = 104;
      var colontmp__13560152 = 0;
      F.line = 301;
      colontmp__13560152 = (a_12630881.attrs != null ? a_12630881.attrs.length : 0);
      F.line = 106;
      var i_13560153 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_13560153 < colontmp__13560152)) break L3;
            F.line = 301;
            i_12630906 = i_13560153;
            if (!((a_12630881.attrs[chckIndx(i_12630906, 0, (a_12630881.attrs != null ? a_12630881.attrs.length : 0)+0-1)-0] == b_12630882.attrs[chckIndx(i_12630906, 0, (b_12630882.attrs != null ? b_12630882.attrs.length : 0)+0-1)-0]))) {
            F.line = 302;
            result_12630883 = false;
            break BeforeRet;
            }
            
            F.line = 109;
            i_13560153 = addInt(i_13560153, 1);
          }
      } while(false);
    } while(false);
    }
    
  } while (false);
  framePtr = F.prev;

  return result_12630883;

}
function eq_13100214(a_13100216, b_13100217, recursive_13100218) {
      var Tmp4;
      var Tmp5;

  var result_13100219 = 0;

  var F={procname:"karax.eq",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (!((a_13100216.kind == b_13100217.kind))) {
    F.line = 259;
    result_13100219 = 1;
    break BeforeRet;
    }
    
    if (!((a_13100216.id == b_13100217.id))) {
    F.line = 262;
    result_13100219 = 1;
    break BeforeRet;
    }
    
    F.line = 263;
    result_13100219 = 3;
    if (!((a_13100216.index == b_13100217.index))) {
    F.line = 266;
    result_13100219 = 1;
    break BeforeRet;
    }
    
    if ((a_13100216.kind == 0)) {
    if (!((a_13100216.text == b_13100217.text))) {
    F.line = 270;
    result_13100219 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((a_13100216.kind == 3)) {
    if (!((a_13100216.text == b_13100217.text))) {
    F.line = 272;
    result_13100219 = 1;
    break BeforeRet;
    }
    
    if (!((len_12620014(a_13100216) == len_12620014(b_13100217)))) {
    F.line = 273;
    result_13100219 = 1;
    break BeforeRet;
    }
    
    L1: do {
      F.line = 274;
      var i_13130008 = 0;
      F.line = 104;
      var colontmp__13560140 = 0;
      F.line = 274;
      colontmp__13560140 = len_12620014(a_13100216);
      F.line = 106;
      var i_13560141 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_13560141 < colontmp__13560140)) break L3;
            F.line = 274;
            i_13130008 = i_13560141;
            if ((eq_13100214(HEX5BHEX5D_12620036(a_13100216, i_13130008), HEX5BHEX5D_12620036(b_13100217, i_13130008), recursive_13100218) == 1)) {
            F.line = 275;
            result_13100219 = 1;
            break BeforeRet;
            }
            
            F.line = 109;
            i_13560141 = addInt(i_13560141, 1);
          }
      } while(false);
    } while(false);
    }
    else {
    if ((a_13100216.kind == 4)) {
    if ((a_13100216.dom == b_13100217.dom)) {
    F.line = 278;
    result_13100219 = 3;
    break BeforeRet;
    }
    else {
      F.line = 280;
      result_13100219 = 1;
      break BeforeRet;
    }
    
    }
    else {
    if ((a_13100216.kind == 6)) {
    if (!((a_13100216.text == b_13100217.text))) {
    F.line = 283;
    result_13100219 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((b_13100217.kind == 5)) {
    if (!((a_13100216.text == b_13100217.text))) {
    F.line = 288;
    result_13100219 = 1;
    break BeforeRet;
    }
    
    if (!((a_13100216.key == b_13100217.key))) {
    F.line = 294;
    result_13100219 = 1;
    break BeforeRet;
    }
    
    F.line = 295;
    result_13100219 = 0;
    break BeforeRet;
    }
    }}}}
      if (!((a_13100216.class == b_13100217.class))) Tmp5 = true; else {        Tmp5 = !(eq_11005229(a_13100216.style, b_13100217.style));      }      if (Tmp5) Tmp4 = true; else {        Tmp4 = !(same_attrs_12630879(a_13100216, b_13100217));      }    if (Tmp4) {
    F.line = 301;
    result_13100219 = 2;
    break BeforeRet;
    }
    
    if (recursive_13100218) {
    if (!((len_12620014(a_13100216) == len_12620014(b_13100217)))) {
    F.line = 305;
    result_13100219 = 1;
    break BeforeRet;
    }
    
    L6: do {
      F.line = 306;
      var i_13155008 = 0;
      F.line = 104;
      var colontmp__13560144 = 0;
      F.line = 306;
      colontmp__13560144 = len_12620014(a_13100216);
      F.line = 106;
      var i_13560145 = 0;
      L7: do {
        F.line = 107;
          L8: while (true) {
          if (!(i_13560145 < colontmp__13560144)) break L8;
            F.line = 306;
            i_13155008 = i_13560145;
            if (!((eq_13100214(HEX5BHEX5D_12620036(a_13100216, i_13155008), HEX5BHEX5D_12620036(b_13100217, i_13155008), true) == 3))) {
            F.line = 308;
            result_13100219 = 1;
            break BeforeRet;
            }
            
            F.line = 109;
            i_13560145 = addInt(i_13560145, 1);
          }
      } while(false);
    } while(false);
    }
    
    F.line = 311;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_13100219;

}
function update_styles_13160034(new_node_13160036, old_node_13160037) {
  var F={procname:"karax.updateStyles",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    if (!((old_node_13160037.dom == null))) {
    if (!((new_node_13160036.style == null))) {
    F.line = 316;
    apply_style_11040425(old_node_13160037.dom, new_node_13160036.style);
    }
    else {
      F.line = 317;
      old_node_13160037.dom.style = {m_type: NTI1787289, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, backgroundSize: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRadius: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, boxSizing: null, boxShadow: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, opacity: null, outline: null, overflow: null, overflowX: null, overflowY: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, resize: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
    }
    
    F.line = 318;
    old_node_13160037.dom.className = new_node_13160036.class;
    }
    
    F.line = 319;
    old_node_13160037.style = new_node_13160036.style;
    F.line = 320;
    old_node_13160037.class = new_node_13160036.class;
  framePtr = F.prev;

  
}
function take_over_attr_12570212(new_node_12570214, old_node_12570215) {
  var F={procname:"vdom.takeOverAttr",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 240;
    old_node_12570215.attrs = new_node_12570214.attrs;
  framePtr = F.prev;

  
}
function update_attributes_13170052(new_node_13170054, old_node_13170055) {
  var F={procname:"karax.updateAttributes",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    if (!((old_node_13170055.dom == null))) {
    L1: do {
      F.line = 325;
      var k_13175009 = null;
      F.line = 325;
      var __13175010 = null;
      L2: do {
        F.line = 295;
        var i_13560158 = 0;
        F.line = 39;
        var colontmp__13560159 = 0;
        F.line = 295;
        colontmp__13560159 = subInt((old_node_13170055.attrs != null ? old_node_13170055.attrs.length : 0), 2);
        F.line = 56;
        var res_13560160 = 0;
        L3: do {
          F.line = 57;
            L4: while (true) {
            if (!(res_13560160 <= colontmp__13560159)) break L4;
              F.line = 295;
              i_13560158 = res_13560160;
              F.line = 325;
              k_13175009 = old_node_13170055.attrs[chckIndx(i_13560158, 0, (old_node_13170055.attrs != null ? old_node_13170055.attrs.length : 0)+0-1)-0];
              F.line = 296;
              __13175010 = old_node_13170055.attrs[chckIndx(addInt(i_13560158, 1), 0, (old_node_13170055.attrs != null ? old_node_13170055.attrs.length : 0)+0-1)-0];
              F.line = 326;
              old_node_13170055.dom.removeAttribute(k_13175009);
              F.line = 59;
              res_13560160 = addInt(res_13560160, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    L5: do {
      F.line = 327;
      var k_13175011 = null;
      F.line = 327;
      var v_13175012 = null;
      L6: do {
        F.line = 295;
        var i_13560166 = 0;
        F.line = 39;
        var colontmp__13560167 = 0;
        F.line = 295;
        colontmp__13560167 = subInt((new_node_13170054.attrs != null ? new_node_13170054.attrs.length : 0), 2);
        F.line = 56;
        var res_13560168 = 0;
        L7: do {
          F.line = 57;
            L8: while (true) {
            if (!(res_13560168 <= colontmp__13560167)) break L8;
              F.line = 295;
              i_13560166 = res_13560168;
              F.line = 327;
              k_13175011 = new_node_13170054.attrs[chckIndx(i_13560166, 0, (new_node_13170054.attrs != null ? new_node_13170054.attrs.length : 0)+0-1)-0];
              F.line = 296;
              v_13175012 = new_node_13170054.attrs[chckIndx(addInt(i_13560166, 1), 0, (new_node_13170054.attrs != null ? new_node_13170054.attrs.length : 0)+0-1)-0];
              if (!((v_13175012 == null))) {
              F.line = 329;
              old_node_13170055.dom.setAttribute(k_13175011, v_13175012);
              }
              
              F.line = 59;
              res_13560168 = addInt(res_13560168, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    }
    
    F.line = 330;
    take_over_attr_12570212(new_node_13170054, old_node_13170055);
  framePtr = F.prev;

  
}
function remove_all_event_handlers_12822436(d_12822438) {
  var F={procname:"karax.removeAllEventHandlers",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    if (!((d_12822438.karaxEvents == null))) {
    L1: do {
      F.line = 96;
      var i_12825041 = 0;
      F.line = 104;
      var colontmp__13560173 = 0;
      F.line = 96;
      colontmp__13560173 = d_12822438.karaxEvents.length;
      F.line = 106;
      var i_13560174 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_13560174 < colontmp__13560173)) break L3;
            F.line = 96;
            i_12825041 = i_13560174;
            F.line = 97;
            d_12822438.removeEventListener(d_12822438.karaxEvents[i_12825041]["Field0"], d_12822438.karaxEvents[i_12825041]["Field1"]);
            F.line = 109;
            i_13560174 = addInt(i_13560174, 1);
          }
      } while(false);
    } while(false);
    }
    
  framePtr = F.prev;

  
}
function merge_events_13180014(new_node_13180016, old_node_13180017, kxi_13180018) {
  var F={procname:"karax.mergeEvents",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 333;
    var d_13180019 = old_node_13180017.dom;
    if (!((d_13180019 == null))) {
    F.line = 335;
    remove_all_event_handlers_12822436(d_13180019);
    }
    
    F.line = 343;
    old_node_13180017.events = new_node_13180016.events;
    F.line = 344;
    apply_events_12935058(old_node_13180017);
  framePtr = F.prev;

  
}
function add_patch_13185414(kxi_13185416, ka_13185417, parenta_13185418, currenta_13185419, na_13185420, old_node_13185421) {
  var F={procname:"karax.addPatch",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 361;
    var l_13185422 = kxi_13185416.patchLen;
    if (((kxi_13185416.patches != null ? kxi_13185416.patches.length : 0) <= l_13185422)) {
    F.line = 364;
    if (kxi_13185416.patches != null) { kxi_13185416.patches.push({k: ka_13185417, parent: parenta_13185418, current: currenta_13185419, newNode: na_13185420, oldNode: old_node_13185421}); } else { kxi_13185416.patches = [{k: ka_13185417, parent: parenta_13185418, current: currenta_13185419, newNode: na_13185420, oldNode: old_node_13185421}]; };
    }
    else {
      F.line = 367;
      kxi_13185416.patches[chckIndx(l_13185422, 0, (kxi_13185416.patches != null ? kxi_13185416.patches.length : 0)+0-1)-0].k = ka_13185417;
      F.line = 368;
      kxi_13185416.patches[chckIndx(l_13185422, 0, (kxi_13185416.patches != null ? kxi_13185416.patches.length : 0)+0-1)-0].parent = parenta_13185418;
      F.line = 369;
      kxi_13185416.patches[chckIndx(l_13185422, 0, (kxi_13185416.patches != null ? kxi_13185416.patches.length : 0)+0-1)-0].current = currenta_13185419;
      F.line = 370;
      kxi_13185416.patches[chckIndx(l_13185422, 0, (kxi_13185416.patches != null ? kxi_13185416.patches.length : 0)+0-1)-0].newNode = na_13185420;
      F.line = 371;
      kxi_13185416.patches[chckIndx(l_13185422, 0, (kxi_13185416.patches != null ? kxi_13185416.patches.length : 0)+0-1)-0].oldNode = old_node_13185421;
    }
    
    F.line = 372;
    kxi_13185416.patchLen = addInt(kxi_13185416.patchLen, 1);
  framePtr = F.prev;

  
}
function diff_13235215(new_node_13235217, old_node_13235218, parent_13235219, current_13235220, kxi_13235221) {
        var Tmp1;
            var Tmp6;

  var F={procname:"karax.diff",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 463;
    var result_13235401 = eq_13100214(new_node_13235217, old_node_13235218, false);
    F.line = 464;
    switch (result_13235401) {
    case 0:
      F.line = 466;
      if (kxi_13235221.components != null) { kxi_13235221.components.push({oldNode: old_node_13235218, newNode: new_node_13235217, parent: parent_13235219, current: current_13235220}); } else { kxi_13235221.components = [{oldNode: old_node_13235218, newNode: new_node_13235217, parent: parent_13235219, current: current_13235220}]; };
      break;
    case 3:
    case 2:
      F.line = 471;
      new_node_13235217.dom = old_node_13235218.dom;
      if ((result_13235401 == 2)) {
      F.line = 473;
      update_styles_13160034(new_node_13235217, old_node_13235218);
      F.line = 474;
      update_attributes_13170052(new_node_13235217, old_node_13235218);
      if ((old_node_13235218.kind == 0)) {
      F.line = 476;
      old_node_13235218.text = new_node_13235217.text;
      F.line = 477;
      old_node_13235218.dom.nodeValue = new_node_13235217.text;
      }
      
      }
      
        if (!(((new_node_13235217.events != null ? new_node_13235217.events.length : 0) == 0))) Tmp1 = true; else {          Tmp1 = !(((old_node_13235218.events != null ? old_node_13235218.events.length : 0) == 0));        }      if (Tmp1) {
      F.line = 480;
      merge_events_13180014(new_node_13235217, old_node_13235218, kxi_13235221);
      }
      
      F.line = 482;
      var new_length_13245006 = len_12620014(new_node_13235217);
      F.line = 483;
      var old_length_13245007 = len_12620014(old_node_13235218);
      if (((new_length_13245006 == 0) && (old_length_13245007 == 0))) {
      F.line = 484;
      break BeforeRet;
      }
      
      F.line = 485;
      var min_length_13245008 = nimMin(new_length_13245006, old_length_13245007);
      if (!((old_node_13235218.kind == new_node_13235217.kind))) {
      F.line = 487;
      failed_assert_impl_1267680(makeNimstrLit("/home/dk/Documents/nim/dawkot/karax/karax/karax.nim(487, 12) `oldNode.kind == newNode.kind` "));
      }
      
      F.line = 488;
      var common_prefix_13255202 = 0;
      L2: do {
        F.line = 491;
          L3: while (true) {
          if (!(common_prefix_13255202 < min_length_13245008)) break L3;
            if ((eq_13100214(HEX5BHEX5D_12620036(new_node_13235217, common_prefix_13255202), HEX5BHEX5D_12620036(old_node_13235218, common_prefix_13255202), true) == 3)) {
            F.line = 493;
            add_patch_13185414(kxi_13235221, 5, null, null, HEX5BHEX5D_12620036(new_node_13235217, common_prefix_13255202), HEX5BHEX5D_12620036(old_node_13235218, common_prefix_13255202));
            F.line = 494;
            common_prefix_13255202 = addInt(common_prefix_13255202, 1);
            }
            else {
              F.line = 496;
              break L2;
            }
            
          }
      } while(false);
      F.line = 499;
      var old_pos_13255214 = subInt(old_length_13245007, 1);
      F.line = 500;
      var new_pos_13255215 = subInt(new_length_13245006, 1);
      L4: do {
        F.line = 501;
          L5: while (true) {
            if (!(common_prefix_13255202 <= old_pos_13255214)) Tmp6 = false; else {              Tmp6 = (common_prefix_13255202 <= new_pos_13255215);            }          if (!Tmp6) break L5;
            if ((eq_13100214(HEX5BHEX5D_12620036(new_node_13235217, new_pos_13255215), HEX5BHEX5D_12620036(old_node_13235218, old_pos_13255214), true) == 3)) {
            F.line = 503;
            add_patch_13185414(kxi_13235221, 5, null, null, HEX5BHEX5D_12620036(new_node_13235217, new_pos_13255215), HEX5BHEX5D_12620036(old_node_13235218, old_pos_13255214));
            F.line = 504;
            old_pos_13255214 = subInt(old_pos_13255214, 1);
            F.line = 505;
            new_pos_13255215 = subInt(new_pos_13255215, 1);
            }
            else {
              F.line = 507;
              break L4;
            }
            
          }
      } while(false);
      F.line = 509;
      var pos_13265018 = addInt(nimMin(old_pos_13255214, new_pos_13255215), 1);
      L7: do {
        F.line = 511;
        var i_13265024 = 0;
        F.line = 66;
        var colontmp__13560115 = 0;
        F.line = 511;
        colontmp__13560115 = subInt(pos_13265018, 1);
        F.line = 77;
        var res_13560116 = common_prefix_13255202;
        L8: do {
          F.line = 78;
            L9: while (true) {
            if (!(res_13560116 <= colontmp__13560115)) break L9;
              F.line = 511;
              i_13265024 = res_13560116;
              F.line = 512;
              diff_13235215(HEX5BHEX5D_12620036(new_node_13235217, i_13265024), HEX5BHEX5D_12620036(old_node_13235218, i_13265024), current_13235220, current_13235220.childNodes[chckIndx(i_13265024, 0, (current_13235220.childNodes != null ? current_13235220.childNodes.length : 0)+0-1)-0], kxi_13235221);
              F.line = 80;
              res_13560116 = addInt(res_13560116, 1);
            }
        } while(false);
      } while(false);
      if ((addInt(old_pos_13255214, 1) == old_length_13245007)) {
      L10: do {
        F.line = 515;
        var i_13265030 = 0;
        F.line = 77;
        var res_13560122 = pos_13265018;
        L11: do {
          F.line = 78;
            L12: while (true) {
            if (!(res_13560122 <= new_pos_13255215)) break L12;
              F.line = 515;
              i_13265030 = res_13560122;
              F.line = 516;
              add_patch_13185414(kxi_13235221, 2, current_13235220, null, HEX5BHEX5D_12620036(new_node_13235217, i_13265030), null);
              F.line = 80;
              res_13560122 = addInt(res_13560122, 1);
            }
        } while(false);
      } while(false);
      }
      else {
        F.line = 518;
        var before_13265031 = current_13235220.childNodes[chckIndx(addInt(old_pos_13255214, 1), 0, (current_13235220.childNodes != null ? current_13235220.childNodes.length : 0)+0-1)-0];
        L13: do {
          F.line = 519;
          var i_13265037 = 0;
          F.line = 77;
          var res_13560128 = pos_13265018;
          L14: do {
            F.line = 78;
              L15: while (true) {
              if (!(res_13560128 <= new_pos_13255215)) break L15;
                F.line = 519;
                i_13265037 = res_13560128;
                F.line = 520;
                add_patch_13185414(kxi_13235221, 3, current_13235220, before_13265031, HEX5BHEX5D_12620036(new_node_13235217, i_13265037), null);
                F.line = 80;
                res_13560128 = addInt(res_13560128, 1);
              }
          } while(false);
        } while(false);
      }
      
      L16: do {
        F.line = 522;
        var i_13265043 = 0;
        F.line = 77;
        var res_13560134 = pos_13265018;
        L17: do {
          F.line = 78;
            L18: while (true) {
            if (!(res_13560134 <= old_pos_13255214)) break L18;
              F.line = 522;
              i_13265043 = res_13560134;
              F.line = 523;
              add_patch_13185414(kxi_12822284[0], 4, null, null, null, HEX5BHEX5D_12620036(old_node_13235218, i_13265043));
              F.line = 525;
              add_patch_13185414(kxi_13235221, 1, current_13235220, current_13235220.childNodes[chckIndx(i_13265043, 0, (current_13235220.childNodes != null ? current_13235220.childNodes.length : 0)+0-1)-0], null, null);
              F.line = 80;
              res_13560134 = addInt(res_13560134, 1);
            }
        } while(false);
      } while(false);
      break;
    case 1:
      F.line = 527;
      add_patch_13185414(kxi_12822284[0], 4, null, null, null, old_node_13235218);
      F.line = 528;
      add_patch_13185414(kxi_13235221, 0, parent_13235219, current_13235220, new_node_13235217, null);
      break;
    case 4:
      if (true) {
      F.line = 529;
      failed_assert_impl_1267680(makeNimstrLit("/home/dk/Documents/nim/dawkot/karax/karax/karax.nim(529, 26) `false` eq returned usenewNode"));
      }
      
      break;
    }
  } while (false);
  framePtr = F.prev;

  
}
function apply_components_13285429(kxi_13285431) {
            var Tmp3;

  var F={procname:"karax.applyComponents",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 537;
    var i_13285433 = 0;
    L1: do {
      F.line = 540;
        L2: while (true) {
        if (!(i_13285433 < (kxi_13285431.components != null ? kxi_13285431.components.length : 0))) break L2;
          F.line = 541;
          var x_13285439 = kxi_13285431.components[chckIndx(i_13285433, 0, (kxi_13285431.components != null ? kxi_13285431.components.length : 0)+0-1)-0].oldNode;
          F.line = 542;
          var new_node_13285440 = kxi_13285431.components[chckIndx(i_13285433, 0, (kxi_13285431.components != null ? kxi_13285431.components.length : 0)+0-1)-0].newNode;
            if (!!((x_13285439.changedImpl == null))) Tmp3 = false; else {              Tmp3 = x_13285439.changedImpl(x_13285439, new_node_13285440);            }          if (Tmp3) {
          F.line = 548;
          var current_13290201 = kxi_13285431.components[chckIndx(i_13285433, 0, (kxi_13285431.components != null ? kxi_13285431.components.length : 0)+0-1)-0].current;
          F.line = 549;
          var parent_13290202 = kxi_13285431.components[chckIndx(i_13285433, 0, (kxi_13285431.components != null ? kxi_13285431.components.length : 0)+0-1)-0].parent;
          F.line = 550;
          x_13285439.updatedImpl(x_13285439, new_node_13285440);
          F.line = 551;
          var old_expanded_13290203 = x_13285439.expanded;
          F.line = 552;
          x_13285439.expanded = x_13285439.renderImpl(x_13285439);
          F.line = 555;
          x_13285439.renderedVersion = x_13285439.version;
          if ((old_expanded_13290203 == null)) {
          F.line = 557;
          add_patch_13185414(kxi_12822284[0], 4, null, null, null, x_13285439);
          F.line = 558;
          add_patch_13185414(kxi_13285431, 0, parent_13290202, current_13290201, x_13285439.expanded, null);
          }
          else {
            F.line = 562;
            diff_13235215(x_13285439.expanded, old_expanded_13290203, parent_13290202, current_13290201, kxi_13285431);
          }
          
          }
          
          F.line = 577;
          i_13285433 = addInt(i_13285433, 1);
        }
    } while(false);
    F.line = 578;
    if (kxi_13285431.components === null) kxi_13285431.components = [];
               if (kxi_13285431.components.length < 0) { for (var i=kxi_13285431.components.length;i<0;++i) kxi_13285431.components.push(({oldNode: null, newNode: null, parent: null, current: null})); }
               else { kxi_13285431.components.length = 0; };
  framePtr = F.prev;

  
}
function move_dom_13195047(dest_13195049, src_13195050) {
  var F={procname:"karax.moveDom",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 386;
    dest_13195049.dom = src_13195050.dom;
    F.line = 387;
    src_13195050.dom = null;
    if (!((dest_13195049.id == null))) {
    F.line = 389;
    kxi_12822284[0].byId[dest_13195049.id] = dest_13195049;
    }
    
    if (!((len_12620014(dest_13195049) == len_12620014(src_13195050)))) {
    F.line = 390;
    failed_assert_impl_1267680(makeNimstrLit("/home/dk/Documents/nim/dawkot/karax/karax/karax.nim(390, 10) `dest.len == src.len` "));
    }
    
    L1: do {
      F.line = 391;
      var i_13210208 = 0;
      F.line = 104;
      var colontmp__13560185 = 0;
      F.line = 391;
      colontmp__13560185 = len_12620014(dest_13195049);
      F.line = 106;
      var i_13560186 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_13560186 < colontmp__13560185)) break L3;
            F.line = 391;
            i_13210208 = i_13560186;
            F.line = 392;
            move_dom_13195047(HEX5BHEX5D_12620036(dest_13195049, i_13210208), HEX5BHEX5D_12620036(src_13195050, i_13210208));
            F.line = 109;
            i_13560186 = addInt(i_13560186, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function HEX5BHEX5DHEX3D_12620054(x_12620056, idx_12620057, y_12620058) {
  var F={procname:"vdom.[]=",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 258;
    x_12620056.kids[chckIndx(idx_12620057, 0, (x_12620056.kids != null ? x_12620056.kids.length : 0)+0-1)-0] = y_12620058;
  framePtr = F.prev;

  
}
function apply_patch_13210222(kxi_13210224) {
  var F={procname:"karax.applyPatch",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    L1: do {
      F.line = 395;
      var i_13210232 = 0;
      F.line = 106;
      var i_13560179 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_13560179 < kxi_13210224.patchLen)) break L3;
            F.line = 395;
            i_13210232 = i_13560179;
            F.line = 396;
            var p_13210233 = nimCopy(null, kxi_13210224.patches[chckIndx(i_13210232, 0, (kxi_13210224.patches != null ? kxi_13210224.patches.length : 0)+0-1)-0], NTI12822209);
            F.line = 397;
            switch (p_13210233.k) {
            case 0:
              F.line = 399;
              var nn_13210234 = to_dom_12935139(p_13210233.newNode, true, kxi_13210224);
              if ((p_13210233.parent == null)) {
              F.line = 401;
              replace_by_id_13100074(kxi_13210224.rootId, nn_13210234);
              }
              else {
                if ((p_13210233.current.parentNode == p_13210233.parent)) {
                F.line = 404;
                p_13210233.parent.replaceChild(nn_13210234, p_13210233.current);
                }
                else {
                  F.line = 406;
                p_13210233.parent.appendChild(nn_13210234);
                }
                
              }
              
              break;
            case 5:
              F.line = 408;
              move_dom_13195047(p_13210233.newNode, p_13210233.oldNode);
              break;
            case 1:
              F.line = 410;
              p_13210233.parent.removeChild(p_13210233.current);
              break;
            case 2:
              F.line = 412;
              var nn_13210250 = to_dom_12935139(p_13210233.newNode, true, kxi_13210224);
              F.line = 413;
              p_13210233.parent.appendChild(nn_13210250);
              break;
            case 3:
              F.line = 415;
              var nn_13210251 = to_dom_12935139(p_13210233.newNode, true, kxi_13210224);
              F.line = 416;
              p_13210233.parent.insertBefore(nn_13210251, p_13210233.current);
              break;
            case 4:
              F.line = 418;
              var n_13210252 = p_13210233.oldNode;
              if (!((n_13210252.id == null))) {
              F.line = 419;
              delete kxi_13210224.byId[n_13210252.id];
              }
              
              if ((n_13210252.kind == 5)) {
              F.line = 421;
              var x_13215018 = n_13210252;
              if (!((x_13215018.onDetachImpl == null))) {
              F.line = 422;
              x_13215018.onDetachImpl(x_13215018);
              }
              
              }
              
              if (!(kxi_13210224.surpressRedraws)) {
              F.line = 424;
              n_13210252.dom = null;
              }
              
              break;
            }
            F.line = 109;
            i_13560179 = addInt(i_13560179, 1);
          }
      } while(false);
    } while(false);
    F.line = 425;
    kxi_13210224.patchLen = 0;
    L4: do {
      F.line = 426;
      var i_13220013 = 0;
      F.line = 106;
      var i_13560182 = 0;
      L5: do {
        F.line = 107;
          L6: while (true) {
          if (!(i_13560182 < kxi_13210224.patchLenV)) break L6;
            F.line = 426;
            i_13220013 = i_13560182;
            F.line = 427;
            var p_13220014 = nimCopy(null, kxi_13210224.patchesV[chckIndx(i_13220013, 0, (kxi_13210224.patchesV != null ? kxi_13210224.patchesV.length : 0)+0-1)-0], NTI12822211);
            F.line = 428;
            HEX5BHEX5DHEX3D_12620054(p_13220014.parent, p_13220014.pos, p_13220014.newChild);
            if (!(!((p_13220014.newChild.dom == null)))) {
            F.line = 429;
            failed_assert_impl_1267680(makeNimstrLit("/home/dk/Documents/nim/dawkot/karax/karax/karax.nim(429, 12) `p.newChild.dom != nil` "));
            }
            
            F.line = 109;
            i_13560182 = addInt(i_13560182, 1);
          }
      } while(false);
    } while(false);
    F.line = 430;
    kxi_13210224.patchLenV = 0;
  framePtr = F.prev;

  
}
function dodraw_13350247(kxi_13350249) {
  var F={procname:"karax.dodraw",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if ((kxi_13350249.renderer == null)) {
    F.line = 634;
    break BeforeRet;
    }
    
    F.line = 635;
    var rdata_13350254 = {hashPart: window.location.hash};
    F.line = 636;
    var newtree_13350255 = kxi_13350249.renderer(rdata_13350254);
    F.line = 637;
    kxi_13350249.runCount = addInt(kxi_13350249.runCount, 1);
    F.line = 638;
    newtree_13350255.id = kxi_13350249.rootId;
    F.line = 639;
    kxi_13350249.toFocus = null;
    if ((kxi_13350249.currentTree == null)) {
    F.line = 641;
    var asdom_13350270 = to_dom_12935139(newtree_13350255, true, kxi_13350249);
    F.line = 642;
    replace_by_id_13100074(kxi_13350249.rootId, asdom_13350270);
    }
    else {
      if (!(same_13085072(kxi_13350249.currentTree, document.getElementById(kxi_13350249.rootId), 0))) {
      F.line = 644;
      failed_assert_impl_1267680(makeNimstrLit("/home/dk/Documents/nim/dawkot/karax/karax/karax.nim(644, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
      }
      
      F.line = 645;
      var olddom_13360201 = document.getElementById(kxi_13350249.rootId);
      F.line = 646;
      diff_13235215(newtree_13350255, kxi_13350249.currentTree, null, olddom_13360201, kxi_13350249);
    }
    
    F.line = 650;
    apply_components_13285429(kxi_13350249);
    F.line = 655;
    apply_patch_13210222(kxi_13350249);
    F.line = 656;
    kxi_13350249.currentTree = newtree_13350255;
    if (!(same_13085072(kxi_13350249.currentTree, document.getElementById(kxi_13350249.rootId), 0))) {
    F.line = 657;
    failed_assert_impl_1267680(makeNimstrLit("/home/dk/Documents/nim/dawkot/karax/karax/karax.nim(657, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
    }
    
    if (!((kxi_13350249.postRenderCallback == null))) {
    F.line = 660;
    kxi_13350249.postRenderCallback(rdata_13350254);
    }
    
    if (!((kxi_13350249.toFocus == null))) {
    F.line = 664;
    kxi_13350249.toFocus.focus();
    }
    
    F.line = 665;
    kxi_13350249.renderId = 0;
  } while (false);
  framePtr = F.prev;

  
}
function init_13375646(ev_13375648) {
    function HEX3Aanonymous_13375649() {
      var F={procname:"init.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
      framePtr = F;
        F.line = 690;
        dodraw_13350247(kxi_12822284[0]);
      framePtr = F.prev;

      
    }

  var F={procname:"karax.init",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 690;
    kxi_12822284[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_13375649);
  framePtr = F.prev;

  
}
function redraw_13375414(kxi_13375416) {
    function HEX3Aanonymous_13375601() {
      var F={procname:"redraw.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
      framePtr = F;
        F.line = 683;
        dodraw_13350247(kxi_13375416);
      framePtr = F.prev;

      
    }

  var F={procname:"karax.redraw",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    if ((kxi_13375416.renderId == 0)) {
    F.line = 683;
    kxi_13375416.renderId = window.requestAnimationFrame(HEX3Aanonymous_13375601);
    }
    
  framePtr = F.prev;

  
}
function set_renderer_13375678(renderer_13375683, root_13375684, client_post_render_callback_13375688) {
    function HEX3Aanonymous_13380135() {
      var F={procname:"setRenderer.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
      framePtr = F;
        F.line = 713;
        redraw_13375414(kxi_12822284[0]);
      framePtr = F.prev;

      
    }

  var result_13375689 = null;

  var F={procname:"karax.setRenderer",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    if ((document.getElementById(root_13375684) == null)) {
    F.line = 699;
    var msg_13375695 = (("Could not find a <div> with id=" + root_13375684) + ". Karax needs it as its rendering target.");
    F.line = 701;
    raiseException({message: cstrToNimstr(msg_13375695), parent: null, m_type: NTI1172017, name: null, trace: null, up: null}, "Exception");
    }
    
    F.line = 703;
    result_13375689 = {rootId: root_13375684, renderer: renderer_13375683, postRenderCallback: client_post_render_callback_13375688, patches: new_seq_13380012(60), patchesV: new_seq_13380064(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
    F.line = 711;
    kxi_12822284[0] = result_13375689;
    F.line = 712;
    window.onload = init_13375646;
    F.line = 713;
    window.onhashchange = HEX3Aanonymous_13380135;
  framePtr = F.prev;

  return result_13375689;

}
function set_renderer_13380238(renderer_13380242, root_13380243, client_post_render_callback_13380246) {
    function wrap_renderer_13380248(data_13380250) {
      var result_13380251 = null;

      var F={procname:"setRenderer.wrapRenderer",prev:framePtr,filename:"karax.nim",line:0};
      framePtr = F;
        F.line = 718;
        result_13380251 = renderer_13380242();
      framePtr = F.prev;

      return result_13380251;

    }
    function wrap_post_render_13380265(data_13380267) {
      var F={procname:"setRenderer.wrapPostRender",prev:framePtr,filename:"karax.nim",line:0};
      framePtr = F;
        if (!((client_post_render_callback_13380246 == null))) {
        F.line = 720;
        client_post_render_callback_13380246();
        }
        
      framePtr = F.prev;

      
    }

  var result_13380247 = null;

  var F={procname:"karax.setRenderer",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 717;
    result_13380247 = set_renderer_13375678(wrap_renderer_13380248, root_13380243, wrap_post_render_13380265);
  framePtr = F.prev;

  return result_13380247;

}
function new_vnode_12630428(kind_12630430) {
  var result_12630431 = null;

  var F={procname:"vdom.newVNode",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 269;
    result_12630431 = {kind: kind_12630430, index: -1, m_type: NTI12535031, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};
  framePtr = F.prev;

  return result_12630431;

}
function add_12620072(parent_12620074, kid_12620075) {
  var F={procname:"vdom.add",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 263;
    if (parent_12620074.kids != null) { parent_12620074.kids.push(kid_12620075); } else { parent_12620074.kids = [kid_12620075]; };
  framePtr = F.prev;

  
}
function tree_12630445(kind_12630447, kids_12630449) {
  var result_12630450 = null;

  var F={procname:"vdom.tree",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 272;
    result_12630450 = new_vnode_12630428(kind_12630447);
    L1: do {
      F.line = 273;
      var k_12630481 = null;
      F.line = 3;
      var i_13560191 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_13560191 < (kids_12630449 != null ? kids_12630449.length : 0))) break L3;
            F.line = 273;
            k_12630481 = kids_12630449[chckIndx(i_13560191, 0, (kids_12630449 != null ? kids_12630449.length : 0)+0-1)-0];
            F.line = 273;
            add_12620072(result_12630450, k_12630481);
            F.line = 6;
            i_13560191 = addInt(i_13560191, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_12630450;

}
function text_12630548(s_12630550) {
  var result_12630551 = null;

  var F={procname:"vdom.text",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 281;
    result_12630551 = {kind: 0, text: toJSStr(s_12630550), index: -1, m_type: NTI12535031, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};
  framePtr = F.prev;

  return result_12630551;

}
function render_welcome_13471103() {
  var result_13471105 = null;

  var F={procname:"main.renderWelcome",prev:framePtr,filename:"main.nim",line:0};
  framePtr = F;
    F.line = 9;
    F.line = 10;
    var tmp_13471143 = tree_12630445(17, []);
    F.line = 10;
    tmp_13471143.class = "hero is-large is-primary";
    F.line = 11;
    var tmp_13471149 = tree_12630445(43, []);
    F.line = 11;
    tmp_13471149.class = "hero-body";
    F.line = 12;
    var tmp_13471150 = tree_12630445(43, []);
    F.line = 12;
    tmp_13471150.class = "container";
    F.line = 13;
    var tmp_13471151 = tree_12630445(21, []);
    F.line = 13;
    tmp_13471151.class = "title";
    F.line = 13;
    add_12620072(tmp_13471151, text_12630548(makeNimstrLit("Dawid Kotli\xC5\x84ski")));
    F.line = 13;
    add_12620072(tmp_13471150, tmp_13471151);
    F.line = 14;
    var tmp_13471152 = tree_12630445(22, []);
    F.line = 14;
    tmp_13471152.class = "subtitle";
    F.line = 14;
    add_12620072(tmp_13471152, text_12630548(makeNimstrLit("Jest to strona prezentuj\xC4\x85ca moje projekty programistyczne")));
    F.line = 14;
    add_12620072(tmp_13471150, tmp_13471152);
    F.line = 14;
    add_12620072(tmp_13471149, tmp_13471150);
    F.line = 14;
    add_12620072(tmp_13471143, tmp_13471149);
    result_13471105 = tmp_13471143;
  framePtr = F.prev;

  return result_13471105;

}
function set_attr_12570105(n_12570107, key_12570108, val_12570109) {
  var F={procname:"vdom.setAttr",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((n_12570107.attrs != null ? n_12570107.attrs.length : 0) == 0)) {
    F.line = 226;
    n_12570107.attrs = nimCopy(null, [key_12570108, val_12570109], NTI12570125);
    }
    else {
      L1: do {
        F.line = 228;
        var i_12570138 = 0;
        F.line = 39;
        var colontmp__13560218 = 0;
        F.line = 228;
        colontmp__13560218 = subInt((n_12570107.attrs != null ? n_12570107.attrs.length : 0), 2);
        F.line = 56;
        var res_13560219 = 0;
        L2: do {
          F.line = 57;
            L3: while (true) {
            if (!(res_13560219 <= colontmp__13560218)) break L3;
              F.line = 228;
              i_12570138 = res_13560219;
              if ((n_12570107.attrs[chckIndx(i_12570138, 0, (n_12570107.attrs != null ? n_12570107.attrs.length : 0)+0-1)-0] == key_12570108)) {
              F.line = 230;
              n_12570107.attrs[chckIndx(addInt(i_12570138, 1), 0, (n_12570107.attrs != null ? n_12570107.attrs.length : 0)+0-1)-0] = val_12570109;
              F.line = 231;
              break BeforeRet;
              }
              
              F.line = 59;
              res_13560219 = addInt(res_13560219, 2);
            }
        } while(false);
      } while(false);
      F.line = 232;
      if (n_12570107.attrs != null) { n_12570107.attrs.push(key_12570108); } else { n_12570107.attrs = [key_12570108]; };
      F.line = 233;
      if (n_12570107.attrs != null) { n_12570107.attrs.push(val_12570109); } else { n_12570107.attrs = [val_12570109]; };
    }
    
  } while (false);
  framePtr = F.prev;

  
}
function render_statichop_13475049() {
  var result_13475051 = null;

  var F={procname:"main.renderStatichop",prev:framePtr,filename:"main.nim",line:0};
  framePtr = F;
    F.line = 17;
    F.line = 18;
    var tmp_13475052 = tree_12630445(17, []);
    F.line = 18;
    tmp_13475052.class = "hero is-medium is-info";
    F.line = 19;
    var tmp_13475053 = tree_12630445(43, []);
    F.line = 19;
    tmp_13475053.class = "hero-body";
    F.line = 20;
    var tmp_13475054 = tree_12630445(43, []);
    F.line = 20;
    tmp_13475054.class = "container";
    F.line = 21;
    var tmp_13475055 = tree_12630445(43, []);
    F.line = 21;
    tmp_13475055.class = "columns";
    F.line = 22;
    var tmp_13475056 = tree_12630445(43, []);
    F.line = 22;
    tmp_13475056.class = "column is-half";
    F.line = 23;
    var tmp_13475057 = tree_12630445(21, []);
    F.line = 23;
    tmp_13475057.class = "title";
    F.line = 23;
    add_12620072(tmp_13475057, text_12630548(makeNimstrLit("Sklep internetowy")));
    F.line = 23;
    add_12620072(tmp_13475056, tmp_13475057);
    F.line = 24;
    var tmp_13475058 = tree_12630445(31, []);
    F.line = 24;
    tmp_13475058.class = "content";
    F.line = 25;
    var tmp_13475059 = tree_12630445(36, []);
    F.line = 26;
    var tmp_13475060 = tree_12630445(37, []);
    F.line = 26;
    add_12620072(tmp_13475060, text_12630548(makeNimstrLit("Lista towar\xC3\xB3w mo\xC5\xBCe by\xC4\x87 filtrowana i sortowana")));
    F.line = 26;
    add_12620072(tmp_13475059, tmp_13475060);
    F.line = 27;
    var tmp_13475061 = tree_12630445(37, []);
    F.line = 27;
    add_12620072(tmp_13475061, text_12630548(makeNimstrLit("Elementy mog\xC4\x85 by\xC4\x87 sortowane po nazwie")));
    F.line = 27;
    add_12620072(tmp_13475059, tmp_13475061);
    F.line = 28;
    var tmp_13475062 = tree_12630445(37, []);
    F.line = 28;
    add_12620072(tmp_13475062, text_12630548(makeNimstrLit("Obs\xC5\x82ugiwana jest rejestracja, logowanie, sesje, historia zakup\xC3\xB3w itp.")));
    F.line = 28;
    add_12620072(tmp_13475059, tmp_13475062);
    F.line = 29;
    var tmp_13475063 = tree_12630445(37, []);
    F.line = 29;
    add_12620072(tmp_13475063, text_12630548(makeNimstrLit("Sklep jest wieloj\xC4\x99zykowy")));
    F.line = 29;
    add_12620072(tmp_13475059, tmp_13475063);
    F.line = 30;
    var tmp_13475064 = tree_12630445(37, []);
    F.line = 30;
    add_12620072(tmp_13475064, text_12630548(makeNimstrLit("Baz\xC4\x85 danych jest SQLite 3")));
    F.line = 30;
    add_12620072(tmp_13475059, tmp_13475064);
    F.line = 31;
    var tmp_13475065 = tree_12630445(37, []);
    F.line = 31;
    add_12620072(tmp_13475065, text_12630548(makeNimstrLit("Serwer jest napisany bez u\xC5\xBCycia \"framework\xC3\xB3w\"")));
    F.line = 31;
    add_12620072(tmp_13475059, tmp_13475065);
    F.line = 31;
    add_12620072(tmp_13475058, tmp_13475059);
    F.line = 31;
    add_12620072(tmp_13475056, tmp_13475058);
    F.line = 31;
    add_12620072(tmp_13475055, tmp_13475056);
    F.line = 31;
    add_12620072(tmp_13475054, tmp_13475055);
    F.line = 32;
    var tmp_13475066 = tree_12630445(71, []);
    F.line = 32;
    add_12620072(tmp_13475054, tmp_13475066);
    F.line = 33;
    var tmp_13475067 = tree_12630445(80, []);
    F.line = 33;
    set_attr_12570105(tmp_13475067, "autoplay", "autoplay");
    F.line = 33;
    set_attr_12570105(tmp_13475067, "loop", "loop");
    F.line = 34;
    var tmp_13475068 = tree_12630445(82, []);
    F.line = 34;
    set_attr_12570105(tmp_13475068, "src", "data/staticshop.webm");
    F.line = 34;
    set_attr_12570105(tmp_13475068, "type", "video/webm");
    F.line = 34;
    add_12620072(tmp_13475067, tmp_13475068);
    F.line = 34;
    add_12620072(tmp_13475054, tmp_13475067);
    F.line = 34;
    add_12620072(tmp_13475053, tmp_13475054);
    F.line = 34;
    add_12620072(tmp_13475052, tmp_13475053);
    result_13475051 = tmp_13475052;
  framePtr = F.prev;

  return result_13475051;

}
function render_nation_detect_13485066() {
  var result_13485068 = null;

  var F={procname:"main.renderNationDetect",prev:framePtr,filename:"main.nim",line:0};
  framePtr = F;
    F.line = 53;
    F.line = 54;
    var tmp_13485069 = tree_12630445(17, []);
    F.line = 54;
    tmp_13485069.class = "hero is-medium is-dark";
    F.line = 55;
    var tmp_13485070 = tree_12630445(43, []);
    F.line = 55;
    tmp_13485070.class = "hero-body";
    F.line = 56;
    var tmp_13485071 = tree_12630445(43, []);
    F.line = 56;
    tmp_13485071.class = "container";
    F.line = 57;
    var tmp_13485072 = tree_12630445(43, []);
    F.line = 57;
    tmp_13485072.class = "columns";
    F.line = 58;
    var tmp_13485073 = tree_12630445(43, []);
    F.line = 58;
    tmp_13485073.class = "column is-half";
    F.line = 59;
    var tmp_13485074 = tree_12630445(21, []);
    F.line = 59;
    tmp_13485074.class = "title";
    F.line = 59;
    add_12620072(tmp_13485074, text_12630548(makeNimstrLit("Identyfikator narodowo\xC5\x9Bci")));
    F.line = 59;
    add_12620072(tmp_13485073, tmp_13485074);
    F.line = 60;
    var tmp_13485075 = tree_12630445(31, []);
    F.line = 60;
    tmp_13485075.class = "content";
    F.line = 61;
    var tmp_13485076 = tree_12630445(36, []);
    F.line = 62;
    var tmp_13485077 = tree_12630445(37, []);
    F.line = 62;
    add_12620072(tmp_13485077, text_12630548(makeNimstrLit("Determinuje narodowo\xC5\x9B\xC4\x87 danej osoby na podstawie tre\xC5\x9Bci jej artyku\xC5\x82u na wikipedii.")));
    F.line = 62;
    add_12620072(tmp_13485076, tmp_13485077);
    F.line = 63;
    var tmp_13485078 = tree_12630445(37, []);
    F.line = 63;
    add_12620072(tmp_13485078, text_12630548(makeNimstrLit("Przyjmuje jako argumenty zar\xC3\xB3wno imiona i linki")));
    F.line = 63;
    add_12620072(tmp_13485076, tmp_13485078);
    F.line = 63;
    add_12620072(tmp_13485075, tmp_13485076);
    F.line = 63;
    add_12620072(tmp_13485073, tmp_13485075);
    F.line = 63;
    add_12620072(tmp_13485072, tmp_13485073);
    F.line = 64;
    var tmp_13485079 = tree_12630445(43, []);
    F.line = 64;
    tmp_13485079.class = "column";
    F.line = 65;
    var tmp_13485080 = tree_12630445(75, []);
    F.line = 65;
    set_attr_12570105(tmp_13485080, "src", "data/nationdetect.png");
    F.line = 65;
    add_12620072(tmp_13485079, tmp_13485080);
    F.line = 65;
    add_12620072(tmp_13485072, tmp_13485079);
    F.line = 65;
    add_12620072(tmp_13485071, tmp_13485072);
    F.line = 65;
    add_12620072(tmp_13485070, tmp_13485071);
    F.line = 65;
    add_12620072(tmp_13485069, tmp_13485070);
    result_13485068 = tmp_13485069;
  framePtr = F.prev;

  return result_13485068;

}
function render_genderdetect_13480082() {
  var result_13480084 = null;

  var F={procname:"main.renderGenderdetect",prev:framePtr,filename:"main.nim",line:0};
  framePtr = F;
    F.line = 37;
    F.line = 38;
    var tmp_13480085 = tree_12630445(17, []);
    F.line = 38;
    tmp_13480085.class = "hero is-medium is-dark";
    F.line = 39;
    var tmp_13480086 = tree_12630445(43, []);
    F.line = 39;
    tmp_13480086.class = "hero-body";
    F.line = 40;
    var tmp_13480087 = tree_12630445(43, []);
    F.line = 40;
    tmp_13480087.class = "container";
    F.line = 41;
    var tmp_13480088 = tree_12630445(43, []);
    F.line = 41;
    tmp_13480088.class = "columns";
    F.line = 42;
    var tmp_13480089 = tree_12630445(43, []);
    F.line = 42;
    tmp_13480089.class = "column is-half";
    F.line = 43;
    var tmp_13480090 = tree_12630445(21, []);
    F.line = 43;
    tmp_13480090.class = "title";
    F.line = 43;
    add_12620072(tmp_13480090, text_12630548(makeNimstrLit("Identyfikator p\xC5\x82ci")));
    F.line = 43;
    add_12620072(tmp_13480089, tmp_13480090);
    F.line = 44;
    var tmp_13480091 = tree_12630445(31, []);
    F.line = 44;
    tmp_13480091.class = "content";
    F.line = 45;
    var tmp_13480092 = tree_12630445(36, []);
    F.line = 46;
    var tmp_13480093 = tree_12630445(37, []);
    F.line = 46;
    add_12620072(tmp_13480093, text_12630548(makeNimstrLit("Determinuje p\xC5\x82e\xC4\x87 danej osoby na podstawie tre\xC5\x9Bci jej artyku\xC5\x82u na wikipedii.")));
    F.line = 46;
    add_12620072(tmp_13480092, tmp_13480093);
    F.line = 47;
    var tmp_13480094 = tree_12630445(37, []);
    F.line = 47;
    add_12620072(tmp_13480094, text_12630548(makeNimstrLit("Przyjmuje jako argumenty zar\xC3\xB3wno imiona i linki")));
    F.line = 47;
    add_12620072(tmp_13480092, tmp_13480094);
    F.line = 48;
    var tmp_13480095 = tree_12630445(37, []);
    F.line = 48;
    add_12620072(tmp_13480095, text_12630548(makeNimstrLit("Analizuje anglo- i polskoj\xC4\x99zyczne artyku\xC5\x82y")));
    F.line = 48;
    add_12620072(tmp_13480092, tmp_13480095);
    F.line = 48;
    add_12620072(tmp_13480091, tmp_13480092);
    F.line = 48;
    add_12620072(tmp_13480089, tmp_13480091);
    F.line = 48;
    add_12620072(tmp_13480088, tmp_13480089);
    F.line = 49;
    var tmp_13480096 = tree_12630445(43, []);
    F.line = 49;
    tmp_13480096.class = "column";
    F.line = 50;
    var tmp_13480097 = tree_12630445(75, []);
    F.line = 50;
    set_attr_12570105(tmp_13480097, "src", "data/genderdetect.png");
    F.line = 50;
    add_12620072(tmp_13480096, tmp_13480097);
    F.line = 50;
    add_12620072(tmp_13480088, tmp_13480096);
    F.line = 50;
    add_12620072(tmp_13480087, tmp_13480088);
    F.line = 50;
    add_12620072(tmp_13480086, tmp_13480087);
    F.line = 50;
    add_12620072(tmp_13480085, tmp_13480086);
    result_13480084 = tmp_13480085;
  framePtr = F.prev;

  return result_13480084;

}
function render_netchess_13490062() {
  var result_13490064 = null;

  var F={procname:"main.renderNetchess",prev:framePtr,filename:"main.nim",line:0};
  framePtr = F;
    F.line = 68;
    F.line = 69;
    var tmp_13490065 = tree_12630445(17, []);
    F.line = 69;
    tmp_13490065.class = "hero is-medium is-warning";
    F.line = 70;
    var tmp_13490066 = tree_12630445(43, []);
    F.line = 70;
    tmp_13490066.class = "hero-body";
    F.line = 71;
    var tmp_13490067 = tree_12630445(43, []);
    F.line = 71;
    tmp_13490067.class = "container";
    F.line = 72;
    var tmp_13490068 = tree_12630445(43, []);
    F.line = 72;
    tmp_13490068.class = "columns";
    F.line = 73;
    var tmp_13490069 = tree_12630445(43, []);
    F.line = 73;
    tmp_13490069.class = "column is-half";
    F.line = 74;
    var tmp_13490070 = tree_12630445(21, []);
    F.line = 74;
    tmp_13490070.class = "title";
    F.line = 74;
    add_12620072(tmp_13490070, text_12630548(makeNimstrLit("Szachy online")));
    F.line = 74;
    add_12620072(tmp_13490069, tmp_13490070);
    F.line = 75;
    var tmp_13490071 = tree_12630445(31, []);
    F.line = 75;
    tmp_13490071.class = "content";
    F.line = 76;
    var tmp_13490072 = tree_12630445(36, []);
    F.line = 77;
    var tmp_13490073 = tree_12630445(37, []);
    F.line = 77;
    add_12620072(tmp_13490073, text_12630548(makeNimstrLit("Komunikacja mi\xC4\x99dzy klientami a serwerem ma miejsce za pomoc\xC4\x85 WebSocket")));
    F.line = 77;
    add_12620072(tmp_13490072, tmp_13490073);
    F.line = 78;
    var tmp_13490074 = tree_12630445(37, []);
    F.line = 78;
    add_12620072(tmp_13490074, text_12630548(makeNimstrLit("Klientem jest przegl\xC4\x85darka")));
    F.line = 78;
    add_12620072(tmp_13490072, tmp_13490074);
    F.line = 79;
    var tmp_13490075 = tree_12630445(37, []);
    F.line = 79;
    add_12620072(tmp_13490075, text_12630548(makeNimstrLit("Interfejs jest reaktywny")));
    F.line = 79;
    add_12620072(tmp_13490072, tmp_13490075);
    F.line = 80;
    var tmp_13490076 = tree_12630445(37, []);
    F.line = 80;
    add_12620072(tmp_13490076, text_12630548(makeNimstrLit("Dane przesy\xC5\x82ane przez klient\xC3\xB3w s\xC4\x85 weryfikowane przez serwer")));
    F.line = 80;
    add_12620072(tmp_13490072, tmp_13490076);
    F.line = 80;
    add_12620072(tmp_13490071, tmp_13490072);
    F.line = 80;
    add_12620072(tmp_13490069, tmp_13490071);
    F.line = 80;
    add_12620072(tmp_13490068, tmp_13490069);
    F.line = 81;
    var tmp_13490077 = tree_12630445(43, []);
    F.line = 81;
    tmp_13490077.class = "column";
    F.line = 82;
    var tmp_13490078 = tree_12630445(75, []);
    F.line = 82;
    set_attr_12570105(tmp_13490078, "src", "data/netchess.gif");
    F.line = 82;
    add_12620072(tmp_13490077, tmp_13490078);
    F.line = 82;
    add_12620072(tmp_13490068, tmp_13490077);
    F.line = 82;
    add_12620072(tmp_13490067, tmp_13490068);
    F.line = 82;
    add_12620072(tmp_13490066, tmp_13490067);
    F.line = 82;
    add_12620072(tmp_13490065, tmp_13490066);
    result_13490064 = tmp_13490065;
  framePtr = F.prev;

  return result_13490064;

}
function is_some_13505044(self_13505048) {
  var result_13505049 = false;

  var F={procname:"isSome.isSome",prev:framePtr,filename:"options.nim",line:0};
  framePtr = F;
    F.line = 144;
    result_13505049 = self_13505048.has;
  framePtr = F.prev;

  return result_13505049;

}
function add_event_listener_12635014(n_12635016, event_12635017, handler_12635018) {
  var F={procname:"vdom.addEventListener",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 305;
    if (n_12635016.events != null) { n_12635016.events.push({Field0: event_12635017, Field1: handler_12635018, Field2: null}); } else { n_12635016.events = [{Field0: event_12635017, Field1: handler_12635018, Field2: null}]; };
  framePtr = F.prev;

  
}
function add_event_handler_13385154(n_13385156, k_13385157, action_13385160, kxi_13385161) {
    function wrapper_13385162(ev_13385164, n_13385165) {
      var F={procname:"addEventHandler.wrapper",prev:framePtr,filename:"karax.nim",line:0};
      framePtr = F;
        F.line = 758;
        action_13385160();
        if (!(kxi_13385161.surpressRedraws)) {
        F.line = 759;
        redraw_13375414(kxi_13385161);
        }
        
      framePtr = F.prev;

      
    }

  var F={procname:"karax.addEventHandler",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 760;
    add_event_listener_12635014(n_13385156, k_13385157, wrapper_13385162);
  framePtr = F.prev;

  
}
function valid_dest_11450360(here_11450362) {
    var Tmp1;
    var Tmp2;

  var result_11450363 = false;

  var F={procname:"chess.validDest",prev:framePtr,filename:"chess.nim",line:0};
  framePtr = F;
    F.line = 114;
    result_11450363 = false;
    if (contains_11235117(pieces_11217056[0], selected_pos_11217080[0])) {
    F.line = 116;
    result_11450363 = contains_11430156((Tmp1 = HEX5BHEX5D_11217292(pieces_11217056[0], selected_pos_11217080[0]), Tmp1)[0][Tmp1[1]].validMoves, here_11450362);
    }
    else {
    if (contains_11235117(pieces_11217056[0], hovered_pos_11217084[0])) {
    F.line = 118;
    result_11450363 = contains_11430156((Tmp2 = HEX5BHEX5D_11217292(pieces_11217056[0], hovered_pos_11217084[0]), Tmp2)[0][Tmp2[1]].validMoves, here_11450362);
    }
    }
  framePtr = F.prev;

  return result_11450363;

}
function set_attr_11015040(s_11015042, a_11015043, value_11015044) {
  var F={procname:"vstyles.setAttr",prev:framePtr,filename:"vstyles.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 238;
    var i_11015046 = 0;
    L1: do {
      F.line = 239;
        L2: while (true) {
        if (!(i_11015046 < s_11015042.length)) break L2;
          if ((s_11015042[i_11015046] == a_11015043)) {
          F.line = 241;
          s_11015042[addInt(i_11015046, 1)] = value_11015044;
          F.line = 242;
          break BeforeRet;
          }
          else {
          if ((a_11015043 < s_11015042[i_11015046])) {
          F.line = 244;
          s_11015042.push("");
          F.line = 245;
          s_11015042.push("");
          L3: do {
            F.line = 247;
            var j_11020063 = 0;
            F.line = 6;
            var colontmp__13560299 = 0;
            F.line = 247;
            colontmp__13560299 = subInt(s_11015042.length, 1);
            F.line = 28;
            var res_13560300 = colontmp__13560299;
            L4: do {
              F.line = 29;
                L5: while (true) {
                if (!(i_11015046 <= res_13560300)) break L5;
                  F.line = 247;
                  j_11020063 = res_13560300;
                  F.line = 248;
                  s_11015042[j_11020063] = s_11015042[subInt(j_11020063, 2)];
                  F.line = 249;
                  s_11015042[subInt(j_11020063, 1)] = s_11015042[subInt(j_11020063, 3)];
                  F.line = 31;
                  res_13560300 = subInt(res_13560300, 2);
                }
            } while(false);
          } while(false);
          F.line = 250;
          s_11015042[i_11015046] = a_11015043;
          F.line = 251;
          s_11015042[addInt(i_11015046, 1)] = value_11015044;
          F.line = 252;
          break BeforeRet;
          }
          }
          F.line = 253;
          i_11015046 = addInt(i_11015046, 2);
        }
    } while(false);
    F.line = 254;
    s_11015042.push(a_11015043);
    F.line = 255;
    s_11015042.push(value_11015044);
  } while (false);
  framePtr = F.prev;

  
}
function set_attr_11020183(s_11020185, attr_11020186, value_11020187) {
  var F={procname:"vstyles.setAttr",prev:framePtr,filename:"vstyles.nim",line:0};
  framePtr = F;
    if (!(!((value_11020187 == null)))) {
    F.line = 259;
    failed_assert_impl_1267680(makeNimstrLit("/home/dk/Documents/nim/dawkot/karax/karax/vstyles.nim(259, 12) `value != nil` value must not be nil"));
    }
    
    F.line = 260;
    set_attr_11015040(s_11020185, to_style_attr_name_11005006[chckIndx(attr_11020186, 0, (to_style_attr_name_11005006 != null ? to_style_attr_name_11005006.length : 0)+0-1)-0], value_11020187);
  framePtr = F.prev;

  
}
function style_11040033(pairs_11040037) {
  var result_11040038 = null;

  var F={procname:"vstyles.style",prev:framePtr,filename:"vstyles.nim",line:0};
  framePtr = F;
    F.line = 276;
    result_11040038 = new Array(0);
    L1: do {
      F.line = 280;
      var x_11040252 = {Field0: 0, Field1: null};
      F.line = 3;
      var i_13560295 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_13560295 < (pairs_11040037 != null ? pairs_11040037.length : 0))) break L3;
            F.line = 280;
            nimCopy(x_11040252, pairs_11040037[chckIndx(i_13560295, 0, (pairs_11040037 != null ? pairs_11040037.length : 0)+0-1)-0], NTI11040036);
            F.line = 281;
            set_attr_11020183(result_11040038, x_11040252["Field0"], x_11040252["Field1"]);
            F.line = 6;
            i_13560295 = addInt(i_13560295, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_11040038;

}
function on_mouse_over_11447076(here_11447078) {
      var Tmp1;
        var Tmp2;

  var F={procname:"chess.onMouseOver",prev:framePtr,filename:"chess.nim",line:0};
  framePtr = F;
      if (!(is_none_11260884(winner_11217076[0]) && contains_11235117(pieces_11217056[0], here_11447078))) Tmp1 = false; else {        Tmp1 = ((Tmp2 = HEX5BHEX5D_11217292(pieces_11217056[0], here_11447078), Tmp2)[0][Tmp2[1]].team == current_team_11217057[0]);      }    if (Tmp1) {
    F.line = 107;
    nimCopy(hovered_pos_11217084[0], here_11447078, NTI11217081);
    }
    
  framePtr = F.prev;

  
}
function on_mouse_out_11450296(here_11450298) {
  var F={procname:"chess.onMouseOut",prev:framePtr,filename:"chess.nim",line:0};
  framePtr = F;
    if ((is_none_11260884(winner_11217076[0]) && HEX3DHEX3D_11450319(hovered_pos_11217084[0], here_11450298))) {
    F.line = 111;
    var colontmp__13560305 = -1;
    F.line = 111;
    var colontmp__13560306 = -1;
    F.line = 111;
    nimCopy(hovered_pos_11217084[0], {Field0: colontmp__13560305, Field1: colontmp__13560306}, NTI11217081);
    }
    
  framePtr = F.prev;

  
}
function some_11435283(val_11435286) {
  var result_11435288 = ({val: 0, has: false});

  var F={procname:"some.some",prev:framePtr,filename:"options.nim",line:0};
  framePtr = F;
    F.line = 121;
    result_11435288.has = true;
    F.line = 122;
    result_11435288.val = val_11435286;
  framePtr = F.prev;

  return result_11435288;

}
function is_empty_11112001(hcode_11112003) {
  var result_11112004 = false;

  var F={procname:"tables.isEmpty",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    F.line = 24;
    result_11112004 = (hcode_11112003 == 0);
  framePtr = F.prev;

  return result_11112004;

}
function del_11445612(t_11445618, key_11445619) {
                    var Tmp6;
                    var Tmp7;
                    var Tmp8;
                      var Tmp9;
                      var Tmp10;

  var F={procname:"del.del",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 135;
    var hc_11445620 = [0];
    F.line = 136;
    var i_11445629 = raw_get_11217303(t_11445618, key_11445619, hc_11445620, 0);
    F.line = 112;
    var mskHEX60gensym11115588_11445636 = (t_11445618.data != null ? (t_11445618.data.length-1) : -1);
    if ((0 <= i_11445629)) {
    F.line = 114;
    t_11445618.counter = subInt(t_11445618.counter, 1);
    L1: do {
      L2: do {
        F.line = 116;
          L3: while (true) {
          if (!true) break L3;
            F.line = 117;
            var jHEX60gensym11115590_11445644 = i_11445629;
            F.line = 118;
            var rHEX60gensym11115591_11445645 = jHEX60gensym11115590_11445644;
            F.line = 502;
            t_11445618.data[chckIndx(i_11445629, 0, (t_11445618.data != null ? t_11445618.data.length : 0)+0-1)-0].Field0 = 0;
            F.line = 120;
            nimCopy(t_11445618.data[chckIndx(i_11445629, 0, (t_11445618.data != null ? t_11445618.data.length : 0)+0-1)-0].Field1, {Field0: 0, Field1: 0}, NTI11216003);
            F.line = 121;
            t_11445618.data[chckIndx(i_11445629, 0, (t_11445618.data != null ? t_11445618.data.length : 0)+0-1)-0].Field2 = null;
            L4: do {
              F.line = 122;
                L5: while (true) {
                if (!true) break L5;
                  F.line = 123;
                  i_11445629 = (addInt(i_11445629, 1) & mskHEX60gensym11115588_11445636);
                  if (is_empty_11112001(t_11445618.data[chckIndx(i_11445629, 0, (t_11445618.data != null ? t_11445618.data.length : 0)+0-1)-0].Field0)) {
                  F.line = 125;
                  break L1;
                  }
                  
                  F.line = 126;
                  rHEX60gensym11115591_11445645 = (t_11445618.data[chckIndx(i_11445629, 0, (t_11445618.data != null ? t_11445618.data.length : 0)+0-1)-0].Field0 & mskHEX60gensym11115588_11445636);
                    if (!(rHEX60gensym11115591_11445645 <= i_11445629)) Tmp8 = false; else {                      Tmp8 = (jHEX60gensym11115590_11445644 < rHEX60gensym11115591_11445645);                    }                    if (Tmp8) Tmp7 = true; else {                      if (!(jHEX60gensym11115590_11445644 < rHEX60gensym11115591_11445645)) Tmp9 = false; else {                        Tmp9 = (i_11445629 < jHEX60gensym11115590_11445644);                      }                      Tmp7 = Tmp9;                    }                    if (Tmp7) Tmp6 = true; else {                      if (!(i_11445629 < jHEX60gensym11115590_11445644)) Tmp10 = false; else {                        Tmp10 = (rHEX60gensym11115591_11445645 <= i_11445629);                      }                      Tmp6 = Tmp10;                    }                  if (!(Tmp6)) {
                  F.line = 128;
                  break L4;
                  }
                  
                }
            } while(false);
            F.line = 130;
            nimCopy(t_11445618.data[chckIndx(jHEX60gensym11115590_11445644, 0, (t_11445618.data != null ? t_11445618.data.length : 0)+0-1)-0], t_11445618.data[chckIndx(i_11445629, 0, (t_11445618.data != null ? t_11445618.data.length : 0)+0-1)-0], NTI11217049);
          }
      } while(false);
    } while(false);
    }
    
  framePtr = F.prev;

  
}
function on_click_11410288(clicked_pos_11410290) {
      var Tmp1;
      var Tmp2;
        var Tmp3;
      var Tmp4;
        var Tmp5;
      var Tmp6;
        var Tmp7;
    var Tmp12;
    var Tmp17;

  var F={procname:"chess.onClick",prev:framePtr,filename:"chess.nim",line:0};
  framePtr = F;
    if (is_none_11260884(winner_11217076[0])) {
      if (!!(HEX3DHEX3D_11225583(clicked_pos_11410290, selected_pos_11217080[0]))) Tmp2 = false; else {        Tmp2 = contains_11235117(pieces_11217056[0], clicked_pos_11410290);      }      if (!Tmp2) Tmp1 = false; else {        Tmp1 = ((Tmp3 = HEX5BHEX5D_11217292(pieces_11217056[0], clicked_pos_11410290), Tmp3)[0][Tmp3[1]].team == current_team_11217057[0]);      }    if (Tmp1) {
    F.line = 89;
    nimCopy(selected_pos_11217080[0], clicked_pos_11410290, NTI11217077);
    }
    else {
      if (!contains_11235117(pieces_11217056[0], selected_pos_11217080[0])) Tmp4 = false; else {        Tmp4 = contains_11430156((Tmp5 = HEX5BHEX5D_11217292(pieces_11217056[0], selected_pos_11217080[0]), Tmp5)[0][Tmp5[1]].validMoves, clicked_pos_11410290);      }    if (Tmp4) {
      if (!contains_11235117(pieces_11217056[0], clicked_pos_11410290)) Tmp6 = false; else {        Tmp6 = ((Tmp7 = HEX5BHEX5D_11217292(pieces_11217056[0], clicked_pos_11410290), Tmp7)[0][Tmp7[1]].kind == 4);      }    if (Tmp6) {
    F.line = 92;
    nimCopy(winner_11217076[0], some_11435283(current_team_11217057[0]), NTI11217064);
    L8: do {
      F.line = 93;
      var piece_11445214 = null;
      F.line = 728;
      var l_13560315 = len_11401746(pieces_11217056[0]);
      L9: do {
        F.line = 729;
        var h_13560317 = 0;
        F.line = 66;
        var colontmp__13560318 = 0;
        F.line = 729;
        colontmp__13560318 = (pieces_11217056[0].data != null ? (pieces_11217056[0].data.length-1) : -1);
        F.line = 77;
        var res_13560319 = 0;
        L10: do {
          F.line = 78;
            L11: while (true) {
            if (!(res_13560319 <= colontmp__13560318)) break L11;
              F.line = 729;
              h_13560317 = res_13560319;
              if (is_filled_11112018(pieces_11217056[0].data[chckIndx(h_13560317, 0, (pieces_11217056[0].data != null ? pieces_11217056[0].data.length : 0)+0-1)-0].Field0)) {
              F.line = 93;
              piece_11445214 = pieces_11217056[0].data[chckIndx(h_13560317, 0, (pieces_11217056[0].data != null ? pieces_11217056[0].data.length : 0)+0-1)-0].Field2;
              F.line = 94;
              piece_11445214.validMoves = nimCopy(null, [], NTI11445229);
              if (!((len_11401746(pieces_11217056[0]) == l_13560315))) {
              F.line = 732;
              failed_assert_impl_1267680(makeNimstrLit("/home/dk/.choosenim/toolchains/nim-1.2.6/lib/pure/collections/tables.nim(732, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 80;
              res_13560319 = addInt(res_13560319, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    }
    
    F.line = 95;
    HEX5BHEX5DHEX3D_11296364(pieces_11217056[0], clicked_pos_11410290, (Tmp12 = HEX5BHEX5D_11217292(pieces_11217056[0], selected_pos_11217080[0]), Tmp12)[0][Tmp12[1]]);
    F.line = 96;
    del_11445612(pieces_11217056[0], selected_pos_11217080[0]);
    L13: do {
      F.line = 97;
      var pos_11447036 = {Field0: 0, Field1: 0};
      F.line = 707;
      var l_13560324 = len_11401746(pieces_11217056[0]);
      L14: do {
        F.line = 708;
        var h_13560326 = 0;
        F.line = 66;
        var colontmp__13560327 = 0;
        F.line = 708;
        colontmp__13560327 = (pieces_11217056[0].data != null ? (pieces_11217056[0].data.length-1) : -1);
        F.line = 77;
        var res_13560328 = 0;
        L15: do {
          F.line = 78;
            L16: while (true) {
            if (!(res_13560328 <= colontmp__13560327)) break L16;
              F.line = 708;
              h_13560326 = res_13560328;
              if (is_filled_11112018(pieces_11217056[0].data[chckIndx(h_13560326, 0, (pieces_11217056[0].data != null ? pieces_11217056[0].data.length : 0)+0-1)-0].Field0)) {
              F.line = 97;
              nimCopy(pos_11447036, pieces_11217056[0].data[chckIndx(h_13560326, 0, (pieces_11217056[0].data != null ? pieces_11217056[0].data.length : 0)+0-1)-0].Field1, NTI11216003);
              F.line = 98;
              update_valid_moves_11260649(pos_11447036);
              if (!((len_11401746(pieces_11217056[0]) == l_13560324))) {
              F.line = 711;
              failed_assert_impl_1267680(makeNimstrLit("/home/dk/.choosenim/toolchains/nim-1.2.6/lib/pure/collections/tables.nim(711, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 80;
              res_13560328 = addInt(res_13560328, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    F.line = 99;
    if ((current_team_11217057[0] == 0)) {
    Tmp17 = 1;
    }
    else {
    Tmp17 = 0;
    }
    
    current_team_11217057[0] = Tmp17;
    F.line = 100;
    var colontmp__13560332 = -1;
    F.line = 100;
    var colontmp__13560333 = -1;
    F.line = 100;
    nimCopy(selected_pos_11217080[0], {Field0: colontmp__13560332, Field1: colontmp__13560333}, NTI11217077);
    }
    else {
      F.line = 103;
      var colontmp__13560334 = -1;
      F.line = 103;
      var colontmp__13560335 = -1;
      F.line = 103;
      nimCopy(selected_pos_11217080[0], {Field0: colontmp__13560334, Field1: colontmp__13560335}, NTI11217077);
    }
    }
    }
    
  framePtr = F.prev;

  
}
function render_local_chess_13500123() {
    function HEX3Aanonymous_13505245() {
      var F={procname:"renderLocalChess.:anonymous",prev:framePtr,filename:"main.nim",line:0};
      framePtr = F;
        F.line = 132;
        reset_chess_11290434();
      framePtr = F.prev;

      
    }
                    var Tmp7;
                    var Tmp8;
                      var Tmp9;
                    var Tmp10;
                      var Tmp11;
                    var Tmp12;
                      var Tmp13;
                    var Tmp14;
                    function HEX3Aanonymous_13525001(here_13525004) {
                        here_13525004 = nimCopy(null, here_13525004, NTI13525003);
                        function HEX3Aanonymous_13525008() {
                          var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"main.nim",line:0};
                          framePtr = F;
                            F.line = 165;
                            on_mouse_over_11447076(here_13525004);
                          framePtr = F.prev;

                          
                        }
                        function HEX3Aanonymous_13525024() {
                          var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"main.nim",line:0};
                          framePtr = F;
                            F.line = 166;
                            on_mouse_out_11450296(here_13525004);
                          framePtr = F.prev;

                          
                        }
                        function HEX3Aanonymous_13525040() {
                          var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"main.nim",line:0};
                          framePtr = F;
                            F.line = 167;
                            on_click_11410288(here_13525004);
                          framePtr = F.prev;

                          
                        }

                      var F={procname:"renderLocalChess.:anonymous",prev:framePtr,filename:"sugar.nim",line:0};
                      framePtr = F;
                        F.line = 165;
                        add_event_handler_13385154(tmp_13500141, 16, HEX3Aanonymous_13525008, kxi_12822284[0]);
                        F.line = 166;
                        add_event_handler_13385154(tmp_13500141, 15, HEX3Aanonymous_13525024, kxi_12822284[0]);
                        F.line = 167;
                        add_event_handler_13385154(tmp_13500141, 0, HEX3Aanonymous_13525040, kxi_12822284[0]);
                      framePtr = F.prev;

                      
                    }

  var result_13500125 = null;

  var F={procname:"main.renderLocalChess",prev:framePtr,filename:"main.nim",line:0};
  framePtr = F;
    F.line = 108;
    F.line = 109;
    var tmp_13500126 = tree_12630445(17, []);
    F.line = 109;
    tmp_13500126.class = "hero is-medium is-dark";
    F.line = 110;
    var tmp_13500127 = tree_12630445(43, []);
    F.line = 110;
    tmp_13500127.class = "hero-body";
    F.line = 111;
    var tmp_13500128 = tree_12630445(43, []);
    F.line = 111;
    tmp_13500128.class = "container";
    F.line = 112;
    var tmp_13500129 = tree_12630445(43, []);
    F.line = 112;
    tmp_13500129.class = "columns";
    F.line = 113;
    var tmp_13500130 = tree_12630445(43, []);
    F.line = 113;
    tmp_13500130.class = "column is-half";
    F.line = 114;
    var tmp_13500131 = tree_12630445(21, []);
    F.line = 114;
    tmp_13500131.class = "title";
    F.line = 114;
    add_12620072(tmp_13500131, text_12630548(makeNimstrLit("Szachy")));
    F.line = 114;
    add_12620072(tmp_13500130, tmp_13500131);
    F.line = 115;
    var tmp_13500132 = tree_12630445(22, []);
    F.line = 115;
    tmp_13500132.class = "subtitle";
    if (is_some_13505044(winner_11217076[0])) {
    F.line = 117;
    add_12620072(tmp_13500132, text_12630548(makeNimstrLit("Wygra\xC5\x82 ")));
    if ((current_team_11217057[0] == 1)) {
    F.line = 119;
    var tmp_13500133 = tree_12630445(70, []);
    F.line = 119;
    tmp_13500133.class = "has-text-info";
    F.line = 119;
    add_12620072(tmp_13500133, text_12630548(makeNimstrLit("niebieski")));
    F.line = 119;
    add_12620072(tmp_13500132, tmp_13500133);
    }
    else {
      F.line = 121;
      var tmp_13500134 = tree_12630445(70, []);
      F.line = 121;
      tmp_13500134.class = "has-text-danger";
      F.line = 121;
      add_12620072(tmp_13500134, text_12630548(makeNimstrLit("czerwony")));
      F.line = 121;
      add_12620072(tmp_13500132, tmp_13500134);
    }
    
    F.line = 122;
    add_12620072(tmp_13500132, text_12630548(makeNimstrLit(" gracz!")));
    }
    else {
      F.line = 124;
      add_12620072(tmp_13500132, text_12630548(makeNimstrLit("Teraz kolej ")));
      if ((current_team_11217057[0] == 1)) {
      F.line = 126;
      var tmp_13500135 = tree_12630445(70, []);
      F.line = 126;
      tmp_13500135.class = "has-text-info";
      F.line = 126;
      add_12620072(tmp_13500135, text_12630548(makeNimstrLit("niebieskiego")));
      F.line = 126;
      add_12620072(tmp_13500132, tmp_13500135);
      }
      else {
        F.line = 128;
        var tmp_13500136 = tree_12630445(70, []);
        F.line = 128;
        tmp_13500136.class = "has-text-danger";
        F.line = 128;
        add_12620072(tmp_13500136, text_12630548(makeNimstrLit("czerwonego")));
        F.line = 128;
        add_12620072(tmp_13500132, tmp_13500136);
      }
      
      F.line = 129;
      add_12620072(tmp_13500132, text_12630548(makeNimstrLit(" gracza")));
    }
    
    F.line = 129;
    add_12620072(tmp_13500130, tmp_13500132);
    F.line = 130;
    var tmp_13500137 = tree_12630445(106, []);
    F.line = 130;
    tmp_13500137.class = "button is-light is-medium";
    F.line = 131;
    add_12620072(tmp_13500137, text_12630548(makeNimstrLit("Zacznij od nowa")));
    F.line = 132;
    add_event_handler_13385154(tmp_13500137, 0, HEX3Aanonymous_13505245, kxi_12822284[0]);
    F.line = 132;
    add_12620072(tmp_13500130, tmp_13500137);
    F.line = 132;
    add_12620072(tmp_13500129, tmp_13500130);
    F.line = 133;
    var tmp_13500138 = tree_12630445(43, []);
    F.line = 133;
    tmp_13500138.class = "column";
    F.line = 134;
    var tmp_13500139 = tree_12630445(43, []);
    L1: do {
      F.line = 135;
      var y_13505276 = 0;
      F.line = 106;
      var i_13560291 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_13560291 < 8)) break L3;
            F.line = 135;
            y_13505276 = i_13560291;
            F.line = 136;
            var tmp_13500140 = tree_12630445(43, []);
            F.line = 136;
            tmp_13500140.class = "is-flex";
            L4: do {
              F.line = 137;
              var x_13505289 = 0;
              F.line = 106;
              var i_13560289 = 0;
              L5: do {
                F.line = 107;
                  L6: while (true) {
                  if (!(i_13560289 < 8)) break L6;
                    F.line = 137;
                    x_13505289 = i_13560289;
                    F.line = 138;
                    var here_13505291 = {Field0: x_13505289, Field1: y_13505276};
                    F.line = 139;
                    if ((contains_11235117(pieces_11217056[0], selected_pos_11217080[0]) && (HEX3DHEX3D_11450319(here_13505291, selected_pos_11217080[0]) || valid_dest_11450360(here_13505291)))) {
                    if (((Tmp9 = HEX5BHEX5D_11217292(pieces_11217056[0], selected_pos_11217080[0]), Tmp9)[0][Tmp9[1]].team == 1)) {
                    Tmp8 = makeNimstrLit("is-info");
                    }
                    else {
                    Tmp8 = makeNimstrLit("is-danger");
                    }
                    
                    Tmp7 = Tmp8;
                    }
                    else {
                    if ((contains_11235117(pieces_11217056[0], hovered_pos_11217084[0]) && (HEX3DHEX3D_11450319(here_13505291, hovered_pos_11217084[0]) || valid_dest_11450360(here_13505291)))) {
                    if (((Tmp11 = HEX5BHEX5D_11217292(pieces_11217056[0], hovered_pos_11217084[0]), Tmp11)[0][Tmp11[1]].team == 1)) {
                    Tmp10 = makeNimstrLit("is-info");
                    }
                    else {
                    Tmp10 = makeNimstrLit("is-danger");
                    }
                    
                    Tmp7 = Tmp10;
                    }
                    else {
                    if ((modInt(x_13505289, 2) == modInt(y_13505276, 2))) {
                    Tmp7 = makeNimstrLit("is-dark");
                    }
                    else {
                    Tmp7 = makeNimstrLit("is-light");
                    }
                    }}
                    var button_color_13515288 = nimCopy(null, Tmp7, NTI1166014);
                    F.line = 146;
                    var tmp_13500141 = tree_12630445(44, []);
                    F.line = 146;
                    tmp_13500141.class = toJSStr((makeNimstrLit("button is-medium ") || []).concat(button_color_13515288 || []));
                    if (contains_11235117(pieces_11217056[0], here_13505291)) {
                    F.line = 148;
                    if (HEX3DHEX3D_11450319(here_13505291, selected_pos_11217080[0])) {
                    Tmp12 = makeNimstrLit("has-text-warning");
                    }
                    else {
                    if (HEX3DHEX3D_11450319(here_13505291, hovered_pos_11217084[0])) {
                    Tmp12 = makeNimstrLit("has-text-dark");
                    }
                    else {
                    if (((Tmp13 = HEX5BHEX5D_11217292(pieces_11217056[0], here_13505291), Tmp13)[0][Tmp13[1]].team == 1)) {
                    Tmp12 = makeNimstrLit("has-text-info");
                    }
                    else {
                    Tmp12 = makeNimstrLit("has-text-danger");
                    }
                    }}
                    var text_color_13520293 = nimCopy(null, Tmp12, NTI1166014);
                    F.line = 154;
                    var tmp_13500142 = tree_12630445(70, []);
                    F.line = 154;
                    tmp_13500142.class = toJSStr((makeNimstrLit("icon ") || []).concat(text_color_13520293 || []));
                    F.line = 154;
                    tmp_13500142.style = style_11040033([{Field0: 145, Field1: "none"}]);
                    F.line = 155;
                    switch ((Tmp14 = HEX5BHEX5D_11217292(pieces_11217056[0], here_13505291), Tmp14)[0][Tmp14[1]].kind) {
                    case 0:
                      F.line = 156;
                      var tmp_13500150 = tree_12630445(61, []);
                      F.line = 156;
                      tmp_13500150.class = "fas fa-chess-pawn";
                      F.line = 156;
                      add_12620072(tmp_13500142, tmp_13500150);
                      break;
                    case 1:
                      F.line = 157;
                      var tmp_13500151 = tree_12630445(61, []);
                      F.line = 157;
                      tmp_13500151.class = "fas fa-chess-rook";
                      F.line = 157;
                      add_12620072(tmp_13500142, tmp_13500151);
                      break;
                    case 3:
                      F.line = 158;
                      var tmp_13500152 = tree_12630445(61, []);
                      F.line = 158;
                      tmp_13500152.class = "fas fa-chess-knight";
                      F.line = 158;
                      add_12620072(tmp_13500142, tmp_13500152);
                      break;
                    case 2:
                      F.line = 159;
                      var tmp_13500153 = tree_12630445(61, []);
                      F.line = 159;
                      tmp_13500153.class = "fas fa-chess-bishop";
                      F.line = 159;
                      add_12620072(tmp_13500142, tmp_13500153);
                      break;
                    case 4:
                      F.line = 160;
                      var tmp_13500154 = tree_12630445(61, []);
                      F.line = 160;
                      tmp_13500154.class = "fas fa-chess-king";
                      F.line = 160;
                      add_12620072(tmp_13500142, tmp_13500154);
                      break;
                    case 5:
                      F.line = 161;
                      var tmp_13500155 = tree_12630445(61, []);
                      F.line = 161;
                      tmp_13500155.class = "fas fa-chess-queen";
                      F.line = 161;
                      add_12620072(tmp_13500142, tmp_13500155);
                      break;
                    }
                    F.line = 161;
                    add_12620072(tmp_13500141, tmp_13500142);
                    }
                    else {
                      F.line = 163;
                      var tmp_13500156 = tree_12630445(70, []);
                      F.line = 163;
                      tmp_13500156.class = "icon";
                      F.line = 163;
                      add_12620072(tmp_13500141, tmp_13500156);
                    }
                    
                    F.line = 164;
                    HEX3Aanonymous_13525001(here_13505291);
                    F.line = 167;
                    add_12620072(tmp_13500140, tmp_13500141);
                    F.line = 109;
                    i_13560289 = addInt(i_13560289, 1);
                  }
              } while(false);
            } while(false);
            F.line = 167;
            add_12620072(tmp_13500139, tmp_13500140);
            F.line = 109;
            i_13560291 = addInt(i_13560291, 1);
          }
      } while(false);
    } while(false);
    F.line = 167;
    add_12620072(tmp_13500138, tmp_13500139);
    F.line = 167;
    add_12620072(tmp_13500129, tmp_13500138);
    F.line = 167;
    add_12620072(tmp_13500128, tmp_13500129);
    F.line = 167;
    add_12620072(tmp_13500127, tmp_13500128);
    F.line = 167;
    add_12620072(tmp_13500126, tmp_13500127);
    result_13500125 = tmp_13500126;
  framePtr = F.prev;

  return result_13500125;

}
function add_event_handler_13385118(n_13385120, k_13385121, action_13385122, kxi_13385123) {
    function wrapper_13385124(ev_13385126, n_13385127) {
      var F={procname:"addEventHandler.wrapper",prev:framePtr,filename:"karax.nim",line:0};
      framePtr = F;
        F.line = 746;
        action_13385122(ev_13385126, n_13385127);
        if (!(kxi_13385123.surpressRedraws)) {
        F.line = 747;
        redraw_13375414(kxi_13385123);
        }
        
      framePtr = F.prev;

      
    }

  var F={procname:"karax.addEventHandler",prev:framePtr,filename:"karax.nim",line:0};
  framePtr = F;
    F.line = 748;
    add_event_listener_12635014(n_13385120, k_13385121, wrapper_13385124);
  framePtr = F.prev;

  
}
function nsuFindChar(s_10700216, sub_10700217, start_10700218, last_10700219) {
    var Tmp1;

  var result_10700221 = 0;

  var F={procname:"strutils.find",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1855;
    if ((last_10700219 == 0)) {
    Tmp1 = (s_10700216 != null ? (s_10700216.length-1) : -1);
    }
    else {
    Tmp1 = last_10700219;
    }
    
    var last_10700223 = Tmp1;
    L2: do {
      F.line = 1867;
      var i_10700606 = 0;
      F.line = 66;
      var colontmp__13560375 = 0;
      F.line = 1867;
      colontmp__13560375 = start_10700218;
      F.line = 77;
      var res_13560376 = colontmp__13560375;
      L3: do {
        F.line = 78;
          L4: while (true) {
          if (!(res_13560376 <= last_10700223)) break L4;
            F.line = 1867;
            i_10700606 = res_13560376;
            if ((sub_10700217 == s_10700216[chckIndx(i_10700606, 0, (s_10700216 != null ? s_10700216.length : 0)+0-1)-0])) {
            F.line = 1868;
            result_10700221 = i_10700606;
            break BeforeRet;
            }
            
            F.line = 80;
            res_13560376 = addInt(res_13560376, 1);
          }
      } while(false);
    } while(false);
    F.line = 1869;
    result_10700221 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_10700221;

}
function substr_1506022(s_1506024, first_1506025, last_1506026) {
  var result_1506027 = null;

  var F={procname:"system.substr",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2943;
    var first_1506028 = nimMax(first_1506025, 0);
    F.line = 2944;
    var l_1506030 = nimMax(addInt(subInt(nimMin(last_1506026, (s_1506024 != null ? (s_1506024.length-1) : -1)), first_1506028), 1), 0);
    F.line = 2945;
    result_1506027 = nimCopy(null, mnewString(chckRange(l_1506030, 0, 2147483647)), NTI1166014);
    L1: do {
      F.line = 2946;
      var i_1506039 = 0;
      F.line = 66;
      var colontmp__12531893 = 0;
      F.line = 2946;
      colontmp__12531893 = subInt(l_1506030, 1);
      F.line = 77;
      var res_12531894 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_12531894 <= colontmp__12531893)) break L3;
            F.line = 2946;
            i_1506039 = res_12531894;
            F.line = 2947;
            result_1506027[chckIndx(i_1506039, 0, (result_1506027 != null ? result_1506027.length : 0)+0-1)-0] = s_1506024[chckIndx(addInt(i_1506039, first_1506028), 0, (s_1506024 != null ? s_1506024.length : 0)+0-1)-0];
            F.line = 80;
            res_12531894 = addInt(res_12531894, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_1506027;

}
function substr_1506053(s_1506055, first_1506056) {
  var result_1506058 = null;

  var F={procname:"system.substr",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2950;
    result_1506058 = nimCopy(null, substr_1506022(s_1506055, first_1506056, (s_1506055 != null ? (s_1506055.length-1) : -1)), NTI1166014);
  framePtr = F.prev;

  return result_1506058;

}
function nsuInitSkipTable(a_10695081, sub_10695082) {
  var F={procname:"strutils.initSkipTable",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 1791;
    var m_10695083 = (sub_10695082 != null ? sub_10695082.length : 0);
    F.line = 1792;
    var i_10695085 = 0;
    L1: do {
      F.line = 1793;
        L2: while (true) {
        if (!(i_10695085 <= 248)) break L2;
          F.line = 1794;
          a_10695081[chckIndx(chckRange(addInt(i_10695085, 0), 0, 255), 0, (a_10695081 != null ? a_10695081.length : 0)+0-1)-0] = m_10695083;
          F.line = 1795;
          a_10695081[chckIndx(chckRange(addInt(i_10695085, 1), 0, 255), 0, (a_10695081 != null ? a_10695081.length : 0)+0-1)-0] = m_10695083;
          F.line = 1796;
          a_10695081[chckIndx(chckRange(addInt(i_10695085, 2), 0, 255), 0, (a_10695081 != null ? a_10695081.length : 0)+0-1)-0] = m_10695083;
          F.line = 1797;
          a_10695081[chckIndx(chckRange(addInt(i_10695085, 3), 0, 255), 0, (a_10695081 != null ? a_10695081.length : 0)+0-1)-0] = m_10695083;
          F.line = 1798;
          a_10695081[chckIndx(chckRange(addInt(i_10695085, 4), 0, 255), 0, (a_10695081 != null ? a_10695081.length : 0)+0-1)-0] = m_10695083;
          F.line = 1799;
          a_10695081[chckIndx(chckRange(addInt(i_10695085, 5), 0, 255), 0, (a_10695081 != null ? a_10695081.length : 0)+0-1)-0] = m_10695083;
          F.line = 1800;
          a_10695081[chckIndx(chckRange(addInt(i_10695085, 6), 0, 255), 0, (a_10695081 != null ? a_10695081.length : 0)+0-1)-0] = m_10695083;
          F.line = 1801;
          a_10695081[chckIndx(chckRange(addInt(i_10695085, 7), 0, 255), 0, (a_10695081 != null ? a_10695081.length : 0)+0-1)-0] = m_10695083;
          F.line = 1802;
          i_10695085 = addInt(i_10695085, 8);
        }
    } while(false);
    L3: do {
      F.line = 1804;
      var i_10695101 = 0;
      F.line = 104;
      var colontmp__13560383 = 0;
      F.line = 1804;
      colontmp__13560383 = subInt(m_10695083, 1);
      F.line = 106;
      var i_13560384 = 0;
      L4: do {
        F.line = 107;
          L5: while (true) {
          if (!(i_13560384 < colontmp__13560383)) break L5;
            F.line = 1804;
            i_10695101 = i_13560384;
            F.line = 1805;
            a_10695081[chckIndx(sub_10695082[chckIndx(i_10695101, 0, (sub_10695082 != null ? sub_10695082.length : 0)+0-1)-0], 0, (a_10695081 != null ? a_10695081.length : 0)+0-1)-0] = subInt(subInt(m_10695083, 1), i_10695101);
            F.line = 109;
            i_13560384 = addInt(i_13560384, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function nsuFindStrA(a_10695117, s_10695118, sub_10695119, start_10695120, last_10695121) {
    var Tmp1;

  var result_10695123 = 0;

  var F={procname:"strutils.find",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1815;
    if ((last_10695121 == 0)) {
    Tmp1 = (s_10695118 != null ? (s_10695118.length-1) : -1);
    }
    else {
    Tmp1 = last_10695121;
    }
    
    var last_10695125 = Tmp1;
    F.line = 1816;
    var sub_last_10695126 = subInt((sub_10695119 != null ? sub_10695119.length : 0), 1);
    if ((sub_last_10695126 == -1)) {
    F.line = 1821;
    result_10695123 = start_10695120;
    break BeforeRet;
    }
    
    F.line = 1825;
    var skip_10695127 = start_10695120;
    L2: do {
      F.line = 1827;
        L3: while (true) {
        if (!(sub_last_10695126 <= subInt(last_10695125, skip_10695127))) break L3;
          F.line = 1828;
          var i_10700001 = sub_last_10695126;
          L4: do {
            F.line = 1829;
              L5: while (true) {
              if (!(s_10695118[chckIndx(addInt(skip_10695127, i_10700001), 0, (s_10695118 != null ? s_10695118.length : 0)+0-1)-0] == sub_10695119[chckIndx(i_10700001, 0, (sub_10695119 != null ? sub_10695119.length : 0)+0-1)-0])) break L5;
                if ((i_10700001 == 0)) {
                F.line = 1831;
                result_10695123 = skip_10695127;
                break BeforeRet;
                }
                
                F.line = 1832;
                i_10700001 = subInt(i_10700001, 1);
              }
          } while(false);
          F.line = 1833;
          skip_10695127 = addInt(skip_10695127, a_10695117[chckIndx(s_10695118[chckIndx(addInt(skip_10695127, sub_last_10695126), 0, (s_10695118 != null ? s_10695118.length : 0)+0-1)-0], 0, (a_10695117 != null ? a_10695117.length : 0)+0-1)-0]);
        }
    } while(false);
    F.line = 1834;
    result_10695123 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_10695123;

}
function nsuReplaceStr(s_10770016, sub_10770017, by_10770018) {
  var result_10770019 = null;

  var F={procname:"strutils.replace",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 2056;
    result_10770019 = nimCopy(null, [], NTI1166014);
    F.line = 2057;
    var sub_len_10770020 = (sub_10770017 != null ? sub_10770017.length : 0);
    if ((sub_len_10770020 == 0)) {
    F.line = 2059;
    result_10770019 = nimCopy(null, s_10770016, NTI1166014);
    }
    else {
    if ((sub_len_10770020 == 1)) {
    F.line = 2063;
    var c_10770021 = sub_10770017[chckIndx(0, 0, (sub_10770017 != null ? sub_10770017.length : 0)+0-1)-0];
    F.line = 2064;
    var last_10770023 = (s_10770016 != null ? (s_10770016.length-1) : -1);
    F.line = 2065;
    var i_10770025 = 0;
    L1: do {
      F.line = 2066;
        L2: while (true) {
        if (!true) break L2;
          F.line = 2067;
          var j_10770026 = nsuFindChar(s_10770016, c_10770021, chckRange(i_10770025, 0, 2147483647), last_10770023);
          if ((j_10770026 < 0)) {
          F.line = 2068;
          break L1;
          }
          
          F.line = 2069;
          if (result_10770019 != null) { result_10770019 = (result_10770019).concat(substr_1506022(s_10770016, i_10770025, subInt(j_10770026, 1))); } else { result_10770019 = substr_1506022(s_10770016, i_10770025, subInt(j_10770026, 1)).slice(); };
          F.line = 2070;
          if (result_10770019 != null) { result_10770019 = (result_10770019).concat(by_10770018); } else { result_10770019 = by_10770018.slice(); };
          F.line = 2071;
          i_10770025 = addInt(j_10770026, sub_len_10770020);
        }
    } while(false);
    F.line = 2073;
    if (result_10770019 != null) { result_10770019 = (result_10770019).concat(substr_1506053(s_10770016, i_10770025)); } else { result_10770019 = substr_1506053(s_10770016, i_10770025).slice(); };
    }
    else {
      F.line = 2075;
      var a_10770027 = [new Int32Array(256)];
      F.line = 2076;
      nsuInitSkipTable(a_10770027[0], sub_10770017);
      F.line = 2077;
      var last_10770030 = (s_10770016 != null ? (s_10770016.length-1) : -1);
      F.line = 2078;
      var i_10770032 = 0;
      L3: do {
        F.line = 2079;
          L4: while (true) {
          if (!true) break L4;
            F.line = 2080;
            var j_10770033 = nsuFindStrA(a_10770027[0], s_10770016, sub_10770017, chckRange(i_10770032, 0, 2147483647), last_10770030);
            if ((j_10770033 < 0)) {
            F.line = 2081;
            break L3;
            }
            
            F.line = 2082;
            if (result_10770019 != null) { result_10770019 = (result_10770019).concat(substr_1506022(s_10770016, i_10770032, subInt(j_10770033, 1))); } else { result_10770019 = substr_1506022(s_10770016, i_10770032, subInt(j_10770033, 1)).slice(); };
            F.line = 2083;
            if (result_10770019 != null) { result_10770019 = (result_10770019).concat(by_10770018); } else { result_10770019 = by_10770018.slice(); };
            F.line = 2084;
            i_10770032 = addInt(j_10770033, sub_len_10770020);
          }
      } while(false);
      F.line = 2086;
      if (result_10770019 != null) { result_10770019 = (result_10770019).concat(substr_1506053(s_10770016, i_10770032)); } else { result_10770019 = substr_1506053(s_10770016, i_10770032).slice(); };
    }
    }
  framePtr = F.prev;

  return result_10770019;

}
function nsuStrip(s_10950118, leading_10950119, trailing_10950120, chars_10950122) {
          var Tmp5;

  var result_10950123 = null;

  var F={procname:"strutils.strip",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 2780;
    var first_10950125 = 0;
    F.line = 2781;
    var last_10950126 = subInt((s_10950118 != null ? s_10950118.length : 0), 1);
    if (leading_10950119) {
    L1: do {
      F.line = 2783;
        L2: while (true) {
        if (!((first_10950125 <= last_10950126) && (chars_10950122[s_10950118[chckIndx(first_10950125, 0, (s_10950118 != null ? s_10950118.length : 0)+0-1)-0]] != undefined))) break L2;
          F.line = 2783;
          first_10950125 = addInt(first_10950125, 1);
        }
    } while(false);
    }
    
    if (trailing_10950120) {
    L3: do {
      F.line = 2785;
        L4: while (true) {
          if (!(0 <= last_10950126)) Tmp5 = false; else {            Tmp5 = (chars_10950122[s_10950118[chckIndx(last_10950126, 0, (s_10950118 != null ? s_10950118.length : 0)+0-1)-0]] != undefined);          }        if (!Tmp5) break L4;
          F.line = 2785;
          last_10950126 = subInt(last_10950126, 1);
        }
    } while(false);
    }
    
    F.line = 2786;
    result_10950123 = nimCopy(null, substr_1506022(s_10950118, first_10950125, last_10950126), NTI1166014);
  framePtr = F.prev;

  return result_10950123;

}
function HEX3DHEX3D_13535058(x_13535062, y_13535064) {
  var result_13535065 = false;

  var F={procname:"==.==",prev:framePtr,filename:"comparisons.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 301;
    var same_object_13535601 = false;
    F.line = 302;
    same_object_13535601 = x_13535062 === y_13535064
    if (same_object_13535601) {
    F.line = 303;
    result_13535065 = true;
    break BeforeRet;
    }
    
    if (!(((x_13535062 != null ? x_13535062.length : 0) == (y_13535064 != null ? y_13535064.length : 0)))) {
    F.line = 310;
    result_13535065 = false;
    break BeforeRet;
    }
    
    L1: do {
      F.line = 312;
      var i_13536024 = 0;
      F.line = 66;
      var colontmp__13560391 = 0;
      F.line = 312;
      colontmp__13560391 = subInt((x_13535062 != null ? x_13535062.length : 0), 1);
      F.line = 77;
      var res_13560392 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_13560392 <= colontmp__13560391)) break L3;
            F.line = 312;
            i_13536024 = res_13560392;
            if (!((x_13535062[chckIndx(i_13536024, 0, (x_13535062 != null ? x_13535062.length : 0)+0-1)-0] == y_13535064[chckIndx(i_13536024, 0, (y_13535064 != null ? y_13535064.length : 0)+0-1)-0]))) {
            F.line = 314;
            result_13535065 = false;
            break BeforeRet;
            }
            
            F.line = 80;
            res_13560392 = addInt(res_13560392, 1);
          }
      } while(false);
    } while(false);
    F.line = 316;
    result_13535065 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_13535065;

}
function text_12630601(s_12630603) {
  var result_12630604 = null;

  var F={procname:"vdom.text",prev:framePtr,filename:"vdom.nim",line:0};
  framePtr = F;
    F.line = 282;
    result_12630604 = {kind: 0, text: s_12630603, index: -1, m_type: NTI12535031, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};
  framePtr = F.prev;

  return result_12630604;

}
function delete_13550241(x_13550246, x_13550246_Idx, i_13550247) {
  var F={procname:"delete.delete",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 1254;
    x_13550246[x_13550246_Idx].splice(i_13550247, 1);
  framePtr = F.prev;

  
}
function find_13540023(a_13540027, item_13540028) {
  var result_13540029 = 0;

  var F={procname:"find.find",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    L1: do {
      F.line = 1751;
      var i_13550214 = null;
      F.line = 184;
      var i_13560412 = 0;
      F.line = 185;
      var l_13560413 = (a_13540027 != null ? a_13540027.length : 0);
      L2: do {
        F.line = 186;
          L3: while (true) {
          if (!(i_13560412 < l_13560413)) break L3;
            F.line = 1751;
            i_13550214 = a_13540027[chckIndx(i_13560412, 0, (a_13540027 != null ? a_13540027.length : 0)+0-1)-0];
            if ((i_13550214 == item_13540028)) {
            F.line = 1752;
            break BeforeRet;
            }
            
            F.line = 1753;
            result_13540029 = addInt(result_13540029, 1);
            F.line = 188;
            i_13560412 = addInt(i_13560412, 1);
            if (!(((a_13540027 != null ? a_13540027.length : 0) == l_13560413))) {
            F.line = 189;
            failed_assert_impl_1267680(makeNimstrLit("/home/dk/.choosenim/toolchains/nim-1.2.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    F.line = 1754;
    result_13540029 = -1;
  } while (false);
  framePtr = F.prev;

  return result_13540029;

}
function render_todo_list_13525318() {
    function HEX3Aanonymous_13530042(event_13530044, node_13530045) {
          var Tmp1;

      var F={procname:"renderTodoList.:anonymous",prev:framePtr,filename:"main.nim",line:0};
      framePtr = F;
        F.line = 193;
        var value_13530046 = nsuReplaceStr(nsuStrip(cstrToNimstr(value_12535126(node_13530045)), true, true, ConstSet2), makeNimstrLit("  "), makeNimstrLit(" "));
          if (!(event_13530044.key == "Enter")) Tmp1 = false; else {            Tmp1 = !(eqStrings(value_13530046, []));          }        if (Tmp1) {
        F.line = 196;
        if (todo_items_13525237[0] != null) { todo_items_13525237[0].push({str: toJSStr(value_13530046), done: false, id: toJSStr(cstrToNimstr((rand_13525125())+""))}); } else { todo_items_13525237[0] = [{str: toJSStr(value_13530046), done: false, id: toJSStr(cstrToNimstr((rand_13525125())+""))}]; };
        F.line = 197;
        valueHEX3D_12535143(node_13530045, "");
        }
        
      framePtr = F.prev;

      
    }
              function HEX3Aanonymous_13540001(item_13540003) {
                    function HEX3Aanonymous_13540019() {
                        function cb_13540021() {
                          var F={procname:":anonymous.cb",prev:framePtr,filename:"main.nim",line:0};
                          framePtr = F;
                            F.line = 218;
                            delete_13550241(todo_items_13525237, 0, chckRange(find_13540023(todo_items_13525237[0], item_13540003), 0, 2147483647));
                            F.line = 219;
                            redraw_13375414(kxi_12822284[0]);
                          framePtr = F.prev;

                          
                        }

                      var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"main.nim",line:0};
                      framePtr = F;
                        F.line = 216;
                        item_13540003.done = true;
                        F.line = 220;
                        setTimeout(cb_13540021, 750);
                      framePtr = F.prev;

                      
                    }

                var F={procname:"renderTodoList.:anonymous",prev:framePtr,filename:"sugar.nim",line:0};
                framePtr = F;
                  F.line = 209;
                  var tmp_13525337 = tree_12630445(37, []);
                  F.line = 209;
                  tmp_13525337.id = item_13540003.id;
                  F.line = 210;
                  var tmp_13525338 = tree_12630445(44, []);
                  if (item_13540003.done) {
                  F.line = 212;
                  var tmp_13525339 = tree_12630445(48, []);
                  F.line = 212;
                  add_12620072(tmp_13525339, text_12630601(item_13540003.str));
                  F.line = 212;
                  add_12620072(tmp_13525338, tmp_13525339);
                  }
                  else {
                    F.line = 214;
                    add_12620072(tmp_13525338, text_12630601(item_13540003.str));
                    F.line = 215;
                    add_event_handler_13385154(tmp_13525338, 0, HEX3Aanonymous_13540019, kxi_12822284[0]);
                  }
                  
                  F.line = 215;
                  add_12620072(tmp_13525337, tmp_13525338);
                  F.line = 215;
                  add_12620072(tmp_13525336, tmp_13525337);
                framePtr = F.prev;

                
              }

  var result_13525320 = null;

  var F={procname:"main.renderTodoList",prev:framePtr,filename:"main.nim",line:0};
  framePtr = F;
    F.line = 181;
    F.line = 182;
    var tmp_13525321 = tree_12630445(17, []);
    F.line = 182;
    tmp_13525321.class = "hero is-large is-light";
    F.line = 183;
    var tmp_13525322 = tree_12630445(43, []);
    F.line = 183;
    tmp_13525322.class = "hero-body";
    F.line = 184;
    var tmp_13525323 = tree_12630445(43, []);
    F.line = 184;
    tmp_13525323.class = "container";
    F.line = 185;
    var tmp_13525324 = tree_12630445(43, []);
    F.line = 185;
    tmp_13525324.class = "columns";
    F.line = 186;
    var tmp_13525325 = tree_12630445(43, []);
    F.line = 186;
    tmp_13525325.class = "column is-half";
    F.line = 187;
    var tmp_13525326 = tree_12630445(21, []);
    F.line = 187;
    tmp_13525326.class = "title";
    F.line = 187;
    add_12620072(tmp_13525326, text_12630548(makeNimstrLit("Zadania")));
    F.line = 187;
    add_12620072(tmp_13525325, tmp_13525326);
    F.line = 188;
    var tmp_13525327 = tree_12630445(22, []);
    F.line = 188;
    tmp_13525327.class = "subtitle";
    F.line = 188;
    add_12620072(tmp_13525327, text_12630548(makeNimstrLit("Interaktywna lista zada\xC5\x84")));
    F.line = 188;
    add_12620072(tmp_13525325, tmp_13525327);
    F.line = 188;
    add_12620072(tmp_13525324, tmp_13525325);
    F.line = 189;
    var tmp_13525328 = tree_12630445(43, []);
    F.line = 189;
    tmp_13525328.class = "column is-half";
    F.line = 190;
    var tmp_13525329 = tree_12630445(43, []);
    F.line = 190;
    tmp_13525329.class = "box";
    F.line = 191;
    var tmp_13525330 = tree_12630445(105, []);
    F.line = 191;
    tmp_13525330.class = "input";
    F.line = 191;
    tmp_13525330.id = "todoInput";
    F.line = 191;
    set_attr_12570105(tmp_13525330, "placeholder", "Dodaj nowe zadanie");
    F.line = 192;
    add_event_handler_13385118(tmp_13525330, 4, HEX3Aanonymous_13530042, kxi_12822284[0]);
    F.line = 192;
    add_12620072(tmp_13525329, tmp_13525330);
    F.line = 198;
    var tmp_13525331 = tree_12630445(71, []);
    F.line = 198;
    add_12620072(tmp_13525329, tmp_13525331);
    F.line = 199;
    var tmp_13525332 = tree_12630445(71, []);
    F.line = 199;
    add_12620072(tmp_13525329, tmp_13525332);
    F.line = 200;
    var tmp_13525333 = tree_12630445(20, []);
    F.line = 200;
    tmp_13525333.class = "menu";
    if (HEX3DHEX3D_13535058(todo_items_13525237[0], [])) {
    F.line = 202;
    var tmp_13525334 = tree_12630445(21, []);
    F.line = 202;
    tmp_13525334.class = "title has-text-dark";
    F.line = 202;
    add_12620072(tmp_13525334, text_12630548(makeNimstrLit("Empty")));
    F.line = 202;
    add_12620072(tmp_13525333, tmp_13525334);
    F.line = 203;
    var tmp_13525335 = tree_12630445(22, []);
    F.line = 203;
    tmp_13525335.class = "subtitle has-text-dark";
    F.line = 203;
    add_12620072(tmp_13525335, text_12630548(makeNimstrLit("There are no items on your todo list")));
    F.line = 203;
    add_12620072(tmp_13525333, tmp_13525335);
    }
    else {
      F.line = 205;
      var tmp_13525336 = tree_12630445(36, []);
      F.line = 205;
      tmp_13525336.class = "menu-list";
      L1: do {
        F.line = 206;
        var idx_13536075 = 0;
        F.line = 6;
        var colontmp__13560355 = 0;
        F.line = 206;
        colontmp__13560355 = (todo_items_13525237[0] != null ? (todo_items_13525237[0].length-1) : -1);
        F.line = 28;
        var res_13560356 = colontmp__13560355;
        L2: do {
          F.line = 29;
            L3: while (true) {
            if (!(0 <= res_13560356)) break L3;
              F.line = 206;
              idx_13536075 = res_13560356;
              F.line = 207;
              var item_13536076 = todo_items_13525237[0][chckIndx(idx_13536075, 0, (todo_items_13525237[0] != null ? todo_items_13525237[0].length : 0)+0-1)-0];
              F.line = 208;
              HEX3Aanonymous_13540001(item_13536076);
              F.line = 31;
              res_13560356 = subInt(res_13560356, 1);
            }
        } while(false);
      } while(false);
      F.line = 215;
      add_12620072(tmp_13525333, tmp_13525336);
    }
    
    F.line = 215;
    add_12620072(tmp_13525329, tmp_13525333);
    F.line = 215;
    add_12620072(tmp_13525328, tmp_13525329);
    F.line = 215;
    add_12620072(tmp_13525324, tmp_13525328);
    F.line = 215;
    add_12620072(tmp_13525323, tmp_13525324);
    F.line = 215;
    add_12620072(tmp_13525322, tmp_13525323);
    F.line = 215;
    add_12620072(tmp_13525321, tmp_13525322);
    result_13525320 = tmp_13525321;
  framePtr = F.prev;

  return result_13525320;

}
function HEX3Aanonymous_13555486() {
  var result_13555488 = null;

  var F={procname:"main.:anonymous",prev:framePtr,filename:"main.nim",line:0};
  framePtr = F;
    F.line = 223;
    F.line = 223;
    var tmp_13555490 = tree_12630445(43, []);
    F.line = 224;
    add_12620072(tmp_13555490, render_welcome_13471103());
    F.line = 225;
    add_12620072(tmp_13555490, render_statichop_13475049());
    F.line = 226;
    add_12620072(tmp_13555490, render_nation_detect_13485066());
    F.line = 227;
    add_12620072(tmp_13555490, render_genderdetect_13480082());
    F.line = 228;
    add_12620072(tmp_13555490, render_netchess_13490062());
    F.line = 229;
    add_12620072(tmp_13555490, render_local_chess_13500123());
    F.line = 230;
    add_12620072(tmp_13555490, render_todo_list_13525318());
    result_13555488 = tmp_13555490;
  framePtr = F.prev;

  return result_13555488;

}
set_renderer_13380238(HEX3Aanonymous_13555486, "ROOT", null);
